{"version":3,"sources":["serviceWorker.js","utils.js","Container/login.js","Container/error.js","Component/Layout/Layout.js","Container/dashboard.js","Component/BookingOverview/BookingOverview.js","Container/Appointment/appointment.js","Container/Client/client.js","Container/Client/newClient.js","Component/Invoice/AppointmentListView.js","Component/Invoice/InvoiceListView.js","Component/TabView/TabView.js","Container/Client/clientDetail.js","Container/Client/updateClient.js","Container/Staff/staff.js","Container/Staff/newStaff.js","Container/Staff/staffDetail.js","Container/Service/service.js","Container/Service/newService.js","Container/Service/serviceDetail.js","Container/Service/newCategory.js","Container/Invoice/invoices.js","Component/Invoice/Invoice.js","Container/Invoice/invoiceDetail.js","Container/message.js","Container/report.js","Container/setting.js","Component/Kiosk/KioskLayout/KioskLayout.js","Container/Kiosk/start.js","Component/Kiosk/Checkout/Checkout.js","Container/Kiosk/facialLogin.js","Container/Kiosk/mobileLogin.js","Container/Kiosk/register.js","Container/Kiosk/faceAPI.js","Container/Kiosk/snapshot.js","Container/Kiosk/snapshotManual.js","Container/Kiosk/selectservice.js","Container/Kiosk/clientDetails.js","index.js","images/logo.png","images/kiosk_bg.png","images/login.png","images/register.png"],"names":["Boolean","window","location","hostname","match","setLocalStorage","key","val","localStorage","setItem","getLocalStorage","getItem","removeLocalStorage","removeItem","removeToken","setToken","tokenStr","getToken","removeUser","removeClient","setClient","clientObj","JSON","stringify","getClient","parse","_unused","getUser","userObj","_id","username","displayName","role","_unused2","getAvatarLetter","fullText","textArr","trim","toUpperCase","split","letter","forEach","t","length","substr","getApiConf","method","jsonObj","conf","headers","Content-Type","token","body","fetchAPI","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","url","wrap","_context2","prev","next","abrupt","Promise","_ref2","_callee","resolve","reject","resp","respJson","_context","fetch","path","concat","process","startsWith","sent","json","status","document","href","error","statusText","t0","stop","_x4","_x5","apply","this","arguments","_x","_x2","_x3","Login","state","redirectToReferrer","_this2","classes","props","from","pathname","react_default","createElement","react_router","to","Container","component","maxWidth","CssBaseline","className","paper","Box","m","src","require","alt","style","width","Typography","variant","formik_esm","initialValues","password","validate","values","errors","onSubmit","_ref3","setSubmitting","setErrors","respObj","ok","user","setState","Swal","fire","type","text","title","render","_ref4","submitForm","isSubmitting","setFieldValue","TextField","margin","fullWidth","autoFocus","name","label","Button","color","submit","disabled","LinearProgress","React","Component","withRouter","withStyles","theme","@global","backgroundColor","palette","common","white","marginTop","spacing","display","flexDirection","alignItems","Error","noWrap","Link","NavMenu","toolbar","marginBottom","marginLeft","Divider","List","ListItem","ListItemAvatar","Avatar","menuAvatar","ListItemText","primary","secondary","email","activeClassName","activeListItem","listItem","NavLink","ListItemIcon","listItemIcon","esm_Dashboard","listItemText","CalendarToday","People","Work","Spa","Payment","esm_Message","BarChart","Settings","AccountMenu","_React$useState","useState","_React$useState2","slicedToArray","anchorEl","setAnchorEl","open","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","AccountCircle","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","history","push","AppLayout","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDrawerToggle","mobileOpen","root","AppBar","position","appBar","Toolbar","aria-label","edge","menuButton","esm_Menu","drawer","Hidden","smUp","implementation","Drawer","anchor","drawerPaper","ModalProps","xsDown","content","children","defineProperty","breakpoints","up","flexShrink","marginRight","flexGrow","height","mixins","padding","grey","& $listItemText","& $listItemIcon","cursor","&:hover","& + &","unit","fontWeight","monthMapping","monthInt","Dashboard","bookingList","appointments","response","map","booking","bookingsByStaff","Layout","assign","Paper","es6","data","top","right","left","bottom","strokeDasharray","dataKey","stackId","fill","extendedIcon","SelectService","paperMargin","Grid","container","direction","justify","item","xs","useUtils_cfb96ac9","utils","DateFnsUtils","TimePicker","ampm","minutesStep","autoOk","value","start","onChange","changeTime","KeyboardButtonProps","disable","FormControl","serviceControl","InputLabel","htmlFor","Select","category","changeCategory","input","Input","categoryList","i","service","changeService","serviceList","duration","price","staffControl","staff","changeStaff","staffList","removeBooking","Close_default","formControl","minWidth","localizer","momentLocalizer","moment","DragAndDropCalendar","withDragAndDrop","Calendar","Transition","forwardRef","ref","Slide","minTime","Date","setHours","maxTime","CalendarView","eventOpen","serviceStaffList","clientList","selectedClient","events","editFlag","bookings","end","availableServiceList","checkout","handleSelectClientChange","selectedOption","handleConfirmBookings","_this$state","customClass","alert","newbookings","client","submitUpdateBooking","submitNewBooking","handleEventClose","moveBooking","resourceId","idx","indexOf","updatedEvent","objectSpread","nextEvents","toConsumableArray","splice","handleUpdateBackendEvent","resizeBooking","existingEvent","newBooking","handleEditBooking","appointment","findIndex","deleteAppointment","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","_this$state2","_loop","handleAddBooking","handleRemoveBooking","index","handleChangeBooking","child","bookingIndex","_args2","undefined","target","getTime","staffAvailable","handleCheckOut","handleInvoice","_callee3","invoice","_context3","navigateToCheckoutDetail","_callee4","_context4","options","mobile","_context5","resBookings","filterIds","filter","e","removedBooking","resBooking","appointmentId","catch","_this3","_this4","p","selectable","resizable","onEventDrop","onEventResize","onSelectSlot","onSelectEvent","defaultView","Views","DAY","views","defaultDate","step","timeslots","resources","resourceIdAccessor","resourceTitleAccessor","min","max","Dialog","fullScreen","TransitionComponent","titleBar","DialogContent","dividers","minHeight","BookingOverview","react_select_browser_esm","placeholder","isDisabled","Add_default","fontSize","ColorButton","Fragment","getContrastText","green","flexWrap","flex","zIndex","columns","sort","Client","handleAddClient","handleRowClick","rowMeta","dataIndex","birthday","getMonth","nric","s","substitute","substring","rowsDeleted","deleteObjList","row","dist_default","customToolbar","Tooltip","PersonAdd_default","onRowClick","rowData","onRowsDelete","handleRowDelete","filterType","fab","genderOptions","NewClient","gender","handleGenderSelection","handleChangeBirthday","back","confirmPassoword","InputLabelProps","shrink","select","cancel","InvoiceList","button","click","toLocaleString","total","getTotal","listitem","addon","discount","Appointment","AppointmentListView","Invoice","InvoiceListView","Record","creditRecord","amount","createdAt","services","TabPanel","other","objectWithoutProperties","hidden","aria-labelledby","a11yProps","TabView","handleChange","newValue","handleChangeIndex","_this$props","invoices","creditRecords","Tabs","indicatorColor","textColor","Tab","TabView_Appointment","TabView_Invoice","background","ClientDetail","addCreditDialog","credit","totalBookings","totalCompleted","totalSales","totalMiss","handleEditClick","addCreditValueChange","handleAddCreditOpen","handleAddCreditClose","handleAddCreditConfirm","statistics","creditRecordList","list","listAvatar","bigAvatar","labelColor","toLocaleDateString","ButtonGroup","Component_TabView_TabView","DialogTitle","DialogActions","justifyContent","listButton","UpdateClient","Staff","handleAddStaff","handleAddRole","userList","NewStaff","roleList","selectedLeaves","selectedOff","offDays","leaveOpen","offOpen","handleLeaveClickOpen","handleLeaveOpen","handleLeaveClose","handleOffClickOpen","handleOffOpen","handleOffClose","handleOffReset","selectedDate","selectedLeave","defaultMultipleDateInterpolation","disabledDays","day","getDay","leaveDays","es","withMultipleDates","selected","minDate","interpolateSelection","onSelect","handleLeaveSelection","Service","getMuiTheme","createMuiTheme","overrides","MUIDataTableBodyCell","handleAddService","handleAddCategory","displayServiceList","displayService","staffs","tempStaffs","slice","ThemeProvider","Category_default","handleChangeCategory","selectedCategory","arrayValue","selectMultipleOption","bind","assertThisInitialized","rawStaffList","react_picky_dist_default","numberDisplayed","valueKey","labelKey","multiple","includeSelectAll","includeFilter","dropdownHeight","invoiceList","toTimeString","InvoiceDetail","subtotal","remark","isCheckout","paymentType","Math","abs","parseFloat","prevState","handleConfirmCheckout","animation","reverseButtons","preConfirm","handleClose","Component_Invoice_Invoice","checkoutBtn","Message","mdUp","Fab","Report","Setting","HomeButton","homePage","Home","SkipButton","skip","WelcomeMessage","imageWidth","imagePadding","KioskLayout","react_animated_css_lib","animationIn","animationOut","backgroundImage","BackGroundImage","KioskLayout_WelcomeMessage","KioskLayout_HomeButton","KioskLayout_SkipButton","FacialLogin","handleRegisterClick","setTimeout","handleFacialLoginClick","Kiosk_KioskLayout_KioskLayout","animationInDelay","ButtonBase","focusRipple","image","focusVisibleClassName","focusVisible","imageSrc","RegisterImage","LoginImage","_image","svg","polygon","stroke","divider","strokeWidth","down","& $imageBackdrop","opacity","& $imageMarked","& $imageTitle","border","backgroundSize","backgroundPosition","selectedServiceData","selectedService","selectedServiceCategory","selectedStaff","paddingTop","handleSelectStaffChange","handleSelectServiceCategoryChange","handleSelectServiceChange","parseInt","popup","allowOutsideClick","serviceDiv","serviceInfoDiv","bold","confirmDiv","axios","uriBase","subscriptionKey","STORAGE_URL","faceBox","detected","topLeftX","topLeftY","bottomRightX","bottomRightY","videoConstraints","facingMode","startTimer","timerOn","timerTime","timer","setInterval","newTime","clearInterval","stopTimer","startDetection","canvas","getElementById","video","webcam","current","getCanvas","faceapi","inputSize","scoreThreshold","dims","drawDetections","box","getTL","x","y","getBR","getContext","drawImage","capture","toDataURL","console","log","imageUrl","imagebase64","faceAPIDetect","takingPicture","login","createRef","v","faceId","personId","fullUrl","personGroupId","Ocp-Apim-Subscription-Key","cancelButtonText","isIdentical","faceAPIGetPersonId","faceIdData","_this5","faceIds","maxNumOfCandidatesReturned","candidates","faceAPIVerify","_this6","faceAPIIdentify","displayText","_this7","react_webcam_default","audio","screenshotFormat","align","Checkout","MobileLogin","layoutName","inputName","keyboardOpen","onChangeAll","inputObj","onKeyPress","clearScreen","onChangeInput","inputVal","updatedInputObj","keyboard","setInput","setActiveInput","handleKeyboardClose","autoComplete","InputProps","onEnter","refs","displayValue","aria-describedby","build_default","keyboardRef","r","layout","default","{bksp}","{enter}","Register","submittedData","handleShift","clearInput","err","message","handleDateChange","DatePicker","disableFuture","disableToolbar","openTo","format","inputVariant","gutterBottom","styles","control","base","menu","shift","{shift}","{space}","faceAPIAddFace","faceAPITrain","faceAPIAddPerson","userid","Snapshot","taking","showing","photoCanvas","photoctx","img","Image","onload","canvasPicWebCam","retakePhoto","createUser","getScreenshot","ctx","showCanvas","showWebcam","ClientDetails","edit","update","handleCancelClick","textAlign","clientDetails_ColorButton","PrivateRoute","rest","main","ReactDOM","react_router_dom","basename","exact","Start","SnapshotManual","StaffDetail","NewService","ServiceDetail","NewCategory","ErrorPage","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.3fe5c1dc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//local storage\nexport const setLocalStorage = (key, val) => { localStorage.setItem(key, val) };\nexport const getLocalStorage = (key) => { return localStorage.getItem(key) };\nexport const removeLocalStorage = (key) => { localStorage.removeItem(key) };\n\nconst APIURL = process.env.REACT_APP_API_URL\n\n//auth token\nexport const removeToken = () => { removeLocalStorage('token') };\nexport const setToken = (tokenStr) => { return setLocalStorage('token', tokenStr) };\nexport const getToken = () => { return getLocalStorage('token') };\nexport const removeUser = () => { removeLocalStorage('user') };\nexport const removeClient = () => { removeLocalStorage('client') };\nexport const setUser = (userObj) => { setLocalStorage('user', JSON.stringify(userObj)) };\nexport const setClient = (clientObj) => { setLocalStorage('client', JSON.stringify(clientObj)) };\nexport const getClient = () => {\n    try {\n        return JSON.parse(getLocalStorage('client'));\n    } catch{ return null }\n};\nexport const getUser = () => {\n    try {\n        const userObj = JSON.parse(getLocalStorage('user'));\n        if (userObj._id && userObj.username && userObj.displayName && userObj.role && getToken()) { return userObj } else { return null }\n    } catch{ return null }\n};\nexport const getAvatarLetter = (fullText) => {\n    const textArr = fullText.trim().toUpperCase().split(' ');\n    let letter = \"\";\n    textArr.forEach(t => { if (t.length > 0) { letter += t.substr(0, 1); if (letter.letter >= 2) { return } } });\n    return letter;\n};\n\n//RESTful API fetch\nconst getApiUrl = (path) => {\n    return `${APIURL}/api${path.startsWith('/') ? '' : '/'}${path}`\n};\nconst getApiConf = (method, jsonObj) => {\n    let conf = { 'method': method, headers: {} };\n    if (method.toUpperCase() !== \"GET\") { conf.headers = { 'Content-Type': 'application/json' } }\n    //add token into header if token existed\n    if (getToken()) { conf.headers.token = getToken() }\n    if (jsonObj) { conf.body = JSON.stringify(jsonObj) }\n    return conf;\n};\nexport const fetchAPI = async (method, url, jsonObj) => {\n    return new Promise(async function (resolve, reject) {\n        try {\n            //send request\n            const resp = await fetch(getApiUrl(url), getApiConf(method, jsonObj));\n            const respJson = await resp.json();\n            if (resp.status === 200) { //success respones\n                resolve(respJson);\n            } else if (resp.status === 401) { //if no login\n                removeToken();\n                removeUser();\n                document.location.href = \"/\";\n            } else { //failed respones cdx, return error message\n                throw respJson.error || resp.statusText;\n            }\n        } catch (err) { reject(err) }\n    });\n};\n","import React from 'react';\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nimport { CssBaseline } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { Container, Box, Button, Typography, LinearProgress } from '@material-ui/core';\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport Swal from 'sweetalert2';\n\nimport { fetchAPI, setToken, setUser, removeToken, removeUser } from '../utils';\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass Login extends React.Component {\n\n  state = { redirectToReferrer: false };\n\n  render() {\n\n    const { classes } = this.props;\n\n    let { from } = this.props.location.state || { from: { pathname: \"/dashboard\" } };\n    let { redirectToReferrer } = this.state;\n    if (redirectToReferrer) return <Redirect to={from} />;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Box m={3}><img src={require('../images/logo.png')} alt=\"Logo\" style={{ width: 320 }} /></Box>\n          <Typography component=\"h1\" variant=\"h5\">\n            Spa Management System\n        </Typography>\n          <Formik\n            initialValues={{ username: '', password: '' }}\n            validate={values => {\n              const errors = {};\n              if (!values.username) { errors.username = 'Please enter username' }\n              //else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.username)) { errors.username = 'Invalid email address' }\n              if (!values.password) { errors.password = 'Please enter password' }\n              return errors;\n            }}\n            onSubmit={async (values, { setSubmitting, setErrors }) => {\n              try {\n                const respObj = await fetchAPI('POST', 'auth/login', values);\n                if (respObj && respObj.ok && respObj.token && respObj.user) {\n                  setToken(respObj.token);\n                  setUser(respObj.user);\n                  this.setState({ redirectToReferrer: true });\n                } else {\n                  Swal.fire({\n                    type: 'error', text: 'Please try again.',\n                    title: 'Invalid email or password!'\n                  })\n                }\n              } catch (err) {\n                removeToken(); removeUser();\n                setErrors({ username: \"Invalid username\", password: \"Invalid password\" });\n                Swal.fire({\n                  type: 'error', text: 'Please try again.',\n                  title: 'Invalid email or password!'\n                })\n              }\n              setSubmitting(false);\n            }}\n            render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n              <Form>\n                <Field\n                  component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth autoFocus\n                  name=\"username\" label=\"Username\"\n                />\n                <Field\n                  component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                  name=\"password\" label=\"Password\" type=\"password\"\n                />\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                  disabled={isSubmitting} type=\"submit\"\n                >\n                  Login\n              </Button>\n                {isSubmitting && <LinearProgress />}\n              </Form>\n            )} />\n          <small>{process.env.REACT_APP_VERSION}</small>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(Login));\n","import React from 'react';\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport { CssBaseline } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { Container, Box, Typography, Button } from '@material-ui/core';\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n});\n\nclass Error extends React.Component {\n\n  render() {\n\n    const { classes } = this.props;\n\n    let { from } = this.props.location.state || { from: { pathname: \"/\" } };\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n            <Box m={2}>\n                <Typography variant=\"h3\" noWrap>\n                    Page not found\n                </Typography>\n            </Box>\n            <Box m={2}>\n                <Typography variant=\"subtitle1\" >\n                    Ooooups! Looks like you got lost.\n                </Typography>\n            </Box>\n            <Box>\n                <Button component={Link} to={from} >Go back</Button>\n            </Box>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(Error));","import React from 'react';\nimport { Link, NavLink } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/styles';\nimport {\n    CssBaseline, Hidden, Container,\n    AppBar, Toolbar, Drawer,\n    List, ListItem, ListItemIcon, ListItemAvatar, ListItemText, Divider,\n    Typography,\n    IconButton, Avatar,\n    Menu, MenuItem,\n} from '@material-ui/core';\nimport {\n    Menu as MenuIcon,\n    Spa as SpaIcon,\n    Dashboard as DashboardIcon,\n    CalendarToday as CalendarIcon,\n    Work as StaffIcon,\n    BarChart as BarChartIcon,\n    People as PeopleIcon,\n    Message as MessageIcon,\n    AccountCircle as AccountCircleIcon,\n    Settings as SettingsIcon,\n    Payment as InvoiceIcon\n} from '@material-ui/icons';\nimport { removeToken, removeUser, getAvatarLetter } from '../../utils';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        flexGrow: 1,\n    },\n    menuAvatar: {\n        width: 40,\n        height: 40,\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    activeListItem: {\n        //borderLeft: `4px solid ${theme.palette.primary.main}`,\n        //borderRadius: '4px',\n        backgroundColor: theme.palette.grey[300],\n        '& $listItemText': {\n            color: theme.palette.text.primary\n        },\n        '& $listItemIcon': {\n            color: theme.palette.text.primary,\n            marginLeft: '-4px'\n        }\n    },\n    listItem: {\n        cursor: 'pointer',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n            //borderLeft: `4px solid ${theme.palette.primary.main}`,\n            //borderRadius: '4px',\n            '& $listItemIcon': {\n                color: theme.palette.text.primary,\n                marginLeft: '-4px'\n            }\n        },\n        '& + &': {\n            marginTop: theme.spacing.unit\n        }\n    },\n    listItemText: {\n        fontWeight: 500,\n        color: theme.palette.text.secondary\n    },\n});\n\nfunction NavMenu(props) {\n    return (\n        <div>\n            <div className={props.classes.toolbar}>\n                <img src={require('../../images/logo.png')} alt=\"Logo\" style={{ width: 180, marginTop: 12, marginBottom: 8, marginLeft: 30 }} />\n            </div>\n            <Divider />\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar className={props.classes.menuAvatar}>{getAvatarLetter(props.user.displayName)}</Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={props.user.displayName} secondary={(props.user.email.length > 20) ? `${props.user.email.substr(0, 20)}...` : props.user.email} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/dashboard\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <DashboardIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Dashboard\"\n                    />\n                </ListItem>\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/appointment\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <CalendarIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Appointment\"\n                    />\n                </ListItem>\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/client\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <PeopleIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Clients\"\n                    />\n                </ListItem>\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/staff\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <StaffIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Staffs\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/service\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <SpaIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Services\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/invoice\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <InvoiceIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Invoice\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/message\" style={{display: \"none\"}}\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <MessageIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Client Message\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/report\" style={{display: \"none\"}}\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <BarChartIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Reports\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/setting\" style={{display: \"none\"}}\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <SettingsIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Settings\"\n                    />\n                </ListItem>\n\n            </List>\n        </div>\n    );\n}\n\nfunction AccountMenu(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    function handleMenu(event) { setAnchorEl(event.currentTarget) }\n    function handleClose() { setAnchorEl(null) }\n\n    return (\n        <div>\n            <IconButton\n                aria-controls=\"menu-appbar\" aria-haspopup=\"true\"\n                onClick={handleMenu} color=\"inherit\"\n            >\n                <AccountCircleIcon />\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right', }}\n                keepMounted\n                transformOrigin={{ vertical: 'top', horizontal: 'right', }}\n                open={open} onClose={handleClose}\n            >\n                {/* <MenuItem onClick={handleClose} button component={Link} to=\"/profile\">Profile</MenuItem> */}\n                <MenuItem onClick={() => {\n                    removeToken(); removeUser();\n                    props.history.push(\"/login\")\n                }\n                }>Logout</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\n\nclass AppLayout extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { mobileOpen: false };\n    }\n\n    handleDrawerToggle = () => { this.setState({ mobileOpen: !this.state.mobileOpen }) };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar} >\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            edge=\"start\"\n                            onClick={this.handleDrawerToggle}\n                            className={classes.menuButton}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            {this.props.title}\n                        </Typography>\n                        <AccountMenu {...this.props} />\n                    </Toolbar>\n                </AppBar>\n                <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            variant=\"temporary\"\n                            anchor='left'\n                            open={this.state.mobileOpen}\n                            onClose={this.handleDrawerToggle}\n                            classes={{ paper: classes.drawerPaper }}\n                            ModalProps={{\n                                keepMounted: true, // Better open performance on mobile.\n                            }}\n                        >\n                            <NavMenu {...this.props} />\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{ paper: classes.drawerPaper }}\n                            variant=\"permanent\"\n                            open\n                        >\n                            <NavMenu {...this.props} />\n                        </Drawer>\n                    </Hidden>\n                </nav>\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Container maxWidth={false} >\n                        {this.props.children}\n                    </Container>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(AppLayout);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\n\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList, ResponsiveContainer\n} from 'recharts';\n\nimport {\n  Paper\n} from '@material-ui/core';\n\nimport AppLayout from '../Component/Layout/Layout'\nimport { fetchAPI } from '../utils';\nimport Swal from 'sweetalert2';\n\nconst styles = theme => ({\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nfunction monthMapping(monthInt) {\n  switch (monthInt) {\n    case 1:\n      return \"Jan\"\n    case 2:\n      return \"Feb\"\n    case 3:\n      return \"Mar\"\n    case 4:\n      return \"Apr\"\n    case 5:\n      return \"May\"\n    case 6:\n      return \"Jun\"\n    case 7:\n      return \"Jul\"\n    case 8:\n      return \"Aug\"\n    case 9:\n      return \"Sep\"\n    case 10:\n      return \"Oct\"\n    case 11:\n      return \"Nov\"\n    case 12:\n      return \"Dec\"\n  }\n}\n\nclass Dashboard extends React.Component {\n\n  state = {\n    bookingList: null,\n    appointments: null,\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetchAPI('GET', 'dashboardMgt/dashboard');\n      response.appointments.map(booking => {\n        booking._id = monthMapping(booking._id)\n      })\n      this.setState({\n        bookingList: response.bookingsByStaff,\n        appointments: response.appointments\n      });\n    } catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppLayout title=\"Dashboard\" {...this.props} >\n        <Paper style={{ marginTop: 20 }}>\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <BarChart\n              data={this.state.appointments}\n              margin={{\n                top: 20, right: 40, left: 20, bottom: 20,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"_id\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"Completed\" stackId=\"a\" fill=\"#1237b3\" />\n              <Bar dataKey=\"Missed\" stackId=\"a\" fill=\"#c71010\" >\n                <LabelList position=\"top\" dataKey=\"Total\" />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </Paper>\n        <Paper style={{ marginTop: 20 }}>\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <BarChart\n              data={this.state.bookingList}\n              margin={{\n                top: 20, right: 40, left: 20, bottom: 20,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"staff\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"Bookings\" fill=\"#82ca9d\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </Paper>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Dashboard);\n","import React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    Grid, IconButton, Paper, ListItem,\n    InputLabel, FormControl, Select, Input, MenuItem,\n} from '@material-ui/core';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n} from '@material-ui/pickers';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    serviceControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    staffControl: {\n        margin: theme.spacing(3),\n        minWidth: 150,\n    },\n    paperMargin: {\n        margin: theme.spacing(1),\n    },\n});\n\nclass SelectService extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.paperMargin}>\n                <ListItem>\n                    <Grid\n                        container\n                        direction=\"column\">\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\">\n                            <Grid item xs={2}>\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                    <KeyboardTimePicker\n                                        ampm={false}\n                                        minutesStep={5}\n                                        autoOk\n                                        label=\"Start Time\"\n                                        value={this.props.start}\n                                        onChange={this.props.changeTime}\n                                        KeyboardButtonProps={{\n                                            'aria-label': 'change time',\n                                        }}\n                                        disabled={this.props.disable}\n                                    />\n                                </MuiPickersUtilsProvider>\n                            </Grid>\n                            <Grid item>\n                                <FormControl className={classes.serviceControl} >\n                                    <InputLabel htmlFor=\"age-native-simple\" >Service Category</InputLabel>\n                                    <Select\n                                        value={this.props.category}\n                                        onChange={this.props.changeCategory}\n                                        input={<Input id=\"age-native-simple\" />}\n                                        disabled={this.props.disable}\n                                    >\n                                        {this.props.categoryList.map((category, i) => (\n                                            <MenuItem id={i} value={category.value}>\n                                                {category.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\">\n                            <Grid item>\n                                <FormControl className={classes.serviceControl} >\n                                    <InputLabel htmlFor=\"age-native-simple\" >Service Type</InputLabel>\n                                    <Select\n                                        value={this.props.service}\n                                        onChange={this.props.changeService}\n                                        input={<Input id=\"age-native-simple\" />}\n                                        disabled={this.props.disable}\n                                    >\n                                        {this.props.serviceList.map((service, i) => (\n                                            <MenuItem id={i} value={service._id}>\n                                                {`${service.name} ( ${service.duration} mins $${service.price} )`}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item>\n                                <FormControl className={classes.staffControl}>\n                                    <InputLabel htmlFor=\"age-native-simple\" >Staff Name</InputLabel>\n                                    <Select\n                                        value={this.props.staff}\n                                        onChange={this.props.changeStaff}\n                                        input={<Input id=\"age-native-simple\" />}\n                                        disabled={this.props.disable}\n                                    >\n                                        {this.props.staffList.map(staff => (\n                                            <MenuItem value={staff._id}>\n                                                {staff.displayName}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <IconButton color=\"secondary\" onClick={this.props.removeBooking} aria-label=\"close\" disabled={this.props.disable}>\n                        <CloseIcon />\n                    </IconButton>\n                </ListItem>\n            </Paper>\n        )\n    }\n}\nexport default withStyles(styles)(SelectService);","import React from 'react'\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport moment from \"moment\";\nimport ReactSelect from 'react-select'\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.scss'\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Button, Dialog, FormControl, Paper, Box, Slide, AppBar, IconButton, Toolbar, Typography, Grid, DialogContent\n} from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\nimport { fetchAPI } from '../../utils';\nimport BookingOverview from '../../Component/BookingOverview/BookingOverview'\n\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar)\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  titleBar: {\n    position: 'relative',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 600,\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  alert: {\n    zIndex: 2000,\n  }\n});\n\nconst minTime = new Date();\nminTime.setHours(10, 0, 0);\nconst maxTime = new Date();\nmaxTime.setHours(23, 0, 0);\n\nclass CalendarView extends React.Component {\n\n\n  state = {\n    eventOpen: false,\n    categoryList: [],\n    staffList: [],\n    serviceStaffList: [],\n    serviceList: [],\n    clientList: [],\n    selectedClient: null,\n    events: [],\n    editFlag: false,\n    bookings: [{\n      _id: null,\n      start: null,\n      end: null,\n      staff: null,\n      service: null,\n      availableServiceList: []\n    }],\n    checkout: false,\n    minTime: minTime,\n    maxTime: maxTime,\n  }\n\n\n  async componentDidMount() {\n    try {\n      const staffList = await fetchAPI('GET', 'staffMgt/workingStaff');\n      const serviceList = await fetchAPI('GET', 'serviceMgt/services');\n      const events = await fetchAPI('GET', 'appointmentMgt/bookings');\n      const clientList = await fetchAPI('GET', 'clientMgt/clients');\n      const categoryList = await fetchAPI('GET', 'serviceMgt/category')\n      let options = clientList.map(client => {\n        return { value: client._id, label: `${client.mobile} (${client.displayName})` };\n      })\n      events.map(event => {\n        event.start = new Date(event.start);\n        event.end = new Date(event.end);\n      })\n      this.setState({\n        staffList: staffList,\n        serviceList: serviceList,\n        clientList: options,\n        events: events,\n        appointment: null,\n        categoryList: categoryList,\n      });\n    } catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  handleSelectClientChange = (selectedOption) => {\n    this.setState({\n      selectedClient: selectedOption\n    });\n  };\n\n  handleConfirmBookings = () => {\n    const { bookings, selectedClient } = this.state\n    if (bookings.length <= 0) {\n      Swal.fire({\n        customClass: {\n          container: this.props.classes.alert\n        },\n        type: 'error',\n        title: \"Please Select Service !!!\"\n      })\n      return\n    } else {\n      for (let i = 0; i < bookings.length; i++) {\n        if (!bookings[i].service) {\n          Swal.fire({\n            customClass: {\n              container: this.props.classes.alert\n            },\n            type: 'error',\n            title: \"Please Select Service!!!\"\n          })\n          return\n        } else if (!bookings[i].staff) {\n          Swal.fire({\n            customClass: {\n              container: this.props.classes.alert\n            },\n            type: 'error',\n            title: \"Please Select Staff!!!\"\n          })\n          return\n        }\n      }\n      if (!selectedClient) {\n        Swal.fire({\n          customClass: {\n            container: this.props.classes.alert\n          },\n          type: 'error',\n          title: \"Please Select Customer!!!\"\n        })\n        return\n      }\n\n      if (!this.state.editFlag) {\n        let newbookings = bookings.map(booking => {\n          booking.client = this.state.selectedClient.value\n          delete booking._id\n          return booking\n        })\n        this.submitNewBooking(newbookings)\n      } else {\n        let newbookings = bookings.map(booking => {\n          booking.client = this.state.selectedClient.value\n          return booking\n        })\n        this.submitUpdateBooking(newbookings)\n      }\n      this.handleEventClose()\n    }\n  }\n\n  submitUpdateBooking(bookings) {\n    if (bookings) {\n      const { appointment } = this.state\n      fetchAPI('PATCH', `appointmentMgt/appointment/${appointment._id}`, bookings).then(respObj => {\n        if (respObj && respObj.ok) {\n          let resBookings = respObj.bookings\n          let filterIds = []\n          resBookings.map(booking => {\n            filterIds.push(booking._id)\n          })\n          var removedBookings = appointment.bookings.filter((e) => {\n            return filterIds.indexOf(e._id) === -1\n          })\n          removedBookings.map(removedBooking => {\n            const { events } = this.state\n            let idx = events.findIndex(event => {\n              return event.id === removedBooking._id\n            })\n            if (idx !== -1) {\n              const nextEvents = [...events]\n              nextEvents.splice(idx, 1)\n              this.setState({\n                events: nextEvents,\n              })\n            }\n          })\n\n          resBookings.map(resBooking => {\n            let booking = {\n              _id: resBooking._id,\n              id: resBooking._id,\n              title: resBooking.title,\n              start: new Date(resBooking.start),\n              end: new Date(resBooking.end),\n              resourceId: resBooking.staff,\n              client: resBooking.client,\n              service: resBooking.service,\n              appointment: resBooking.appointment\n            }\n\n            const { events } = this.state\n            let idx = events.findIndex(event => {\n              return event.id === booking.id\n            })\n            if (idx !== -1) {\n              const nextEvents = [...events]\n              nextEvents.splice(idx, 1, booking)\n              this.setState({\n                events: nextEvents,\n              })\n            } else {\n              this.setState({\n                events: this.state.events.concat([booking]),\n              })\n            }\n          })\n          this.navigateToCheckoutDetail(respObj.appointmentId)\n        } else {\n          Swal.fire({\n            type: 'error',\n            title: \"Opps... Something Wrong...\",\n            text: respObj.error,\n            customClass: {\n              container: this.props.classes.alert\n            },\n          })\n        }\n      }).catch(error => {\n        Swal.fire({\n          type: 'error',\n          title: \"Opps... Something Wrong...\",\n          text: error,\n          customClass: {\n            container: this.props.classes.alert\n          },\n        })\n      })\n    } else {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: 'No Booking found',\n        customClass: {\n          container: this.props.classes.alert\n        },\n      })\n    }\n  }\n\n  submitNewBooking(bookings) {\n    fetchAPI('POST', 'appointmentMgt/appointment', bookings).then(respObj => {\n      if (respObj && respObj.ok) {\n        let resBookings = respObj.bookings\n        resBookings.map(resBooking => {\n          let booking = {\n            id: resBooking._id,\n            title: resBooking.title,\n            start: new Date(resBooking.start),\n            end: new Date(resBooking.end),\n            resourceId: resBooking.staff,\n            client: resBooking.client,\n            service: resBooking.service,\n            appointment: resBooking.appointment\n          }\n          this.setState({\n            events: this.state.events.concat([booking]),\n          })\n        })\n        this.navigateToCheckoutDetail(respObj.appointmentId)\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: \"Opps... Something Wrong...\",\n          text: respObj.error,\n          customClass: {\n            container: this.props.classes.alert\n          },\n        })\n      }\n    }).catch(error => {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error,\n        customClass: {\n          container: this.props.classes.alert\n        },\n      })\n    })\n  }\n\n  handleEventClose = () => {\n    this.setState({\n      editFlag: false,\n      eventOpen: false,\n      selectedClient: null,\n      bookings: [{\n        _id: null,\n        start: null,\n        end: null,\n        staff: null,\n        service: null,\n        availableServiceList: []\n      }],\n      serviceStaffList: []\n    });\n  }\n\n  moveBooking = ({ event, start, end, resourceId }) => {\n    if (event.client && event.service) {\n      const { events } = this.state\n\n      const idx = events.indexOf(event)\n\n      const updatedEvent = { ...event, start, resourceId, end }\n\n      const nextEvents = [...events]\n      nextEvents.splice(idx, 1, updatedEvent)\n\n      let values = {\n        start: updatedEvent.start,\n        end: updatedEvent.end,\n        staff: updatedEvent.resourceId,\n      }\n      this.handleUpdateBackendEvent(values, updatedEvent, nextEvents);\n    } else {\n      Swal.fire({\n        type: 'error',\n        title: \"Unable to edit leave from booking. Please edit in staff page!!!\"\n      })\n    }\n  };\n\n  async handleUpdateBackendEvent(values, updatedEvent, nextEvents) {\n    const respObj = await fetchAPI('PATCH', `appointmentMgt/bookings/${updatedEvent.id}`, values);\n    if (respObj && respObj.ok) {\n      this.setState({\n        events: nextEvents,\n      })\n    } else {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: respObj.error\n      })\n    }\n  }\n\n  resizeBooking = ({ event, start, end }) => {\n    if (event.client && event.service) {\n      const { events } = this.state\n\n      const nextEvents = events.map(existingEvent => {\n        return existingEvent.id === event.id\n          ? { ...existingEvent, start, end }\n          : existingEvent\n      });\n\n      let values = {\n        start: start,\n        end: end,\n      }\n      this.handleUpdateBackendEvent(values, event, nextEvents)\n    } else {\n      Swal.fire({\n        type: 'error',\n        title: \"Unable to edit leave from booking. Please edit in staff page!!!\"\n      })\n    }\n  }\n\n  newBooking = newBooking => {\n    const booking = { ...this.state.bookings[0] }\n    booking.start = newBooking.start\n    booking._id = 0\n    const bookings = [...this.state.bookings]\n    bookings[0] = booking\n\n    this.setState({\n      eventOpen: true,\n      bookings: bookings,\n    });\n  }\n\n  handleEditBooking = async (event) => {\n    if (event.client && event.service) {\n      let appointment = await fetchAPI('GET', `appointmentMgt/appointment/${event.appointment}`)\n      let idx = this.state.clientList.findIndex(client => {\n        return client.value === event.client\n      })\n      for (let i = 0; i < appointment.bookings.length; i++) {\n        appointment.bookings[i].availableServiceList = await fetchAPI('GET', `appointmentMgt/availableservice/${appointment.bookings[i].service.category}`)\n        appointment.bookings[i].category = appointment.bookings[i].service.category\n        appointment.bookings[i].service = appointment.bookings[i].service._id\n      }\n      this.setState({\n        selectedClient: this.state.clientList[idx],\n        bookings: appointment.bookings,\n        appointment: appointment,\n        editFlag: true,\n        eventOpen: true,\n      })\n    } else {\n      Swal.fire({\n        type: 'error',\n        title: \"Unable to edit leave from booking. Please edit in staff page!!!\"\n      })\n    }\n  }\n\n  deleteAppointment = () => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        container: this.props.classes.alert\n      },\n    }).then((result) => {\n      const { appointment, events } = this.state\n      if (result.value) {\n        fetchAPI('DELETE', `appointmentMgt/appointment/${appointment._id}`).then((result) => {\n          if (result && result.ok) {\n            const nextEvents = [...events]\n            for (let i = 0; i < appointment.bookings.length; i++) {\n              let idx = nextEvents.findIndex(event => {\n                return event.id === appointment.bookings[i]._id\n              })\n              nextEvents.splice(idx, 1)\n              this.setState({\n                events: nextEvents,\n              })\n            }\n          }\n          this.handleEventClose();\n          Swal.fire(\n            'Deleted!',\n            'Your file has been deleted.',\n            'success'\n          )\n        })\n      }\n    })\n  }\n\n  handleAddBooking = () => {\n    const booking = { ...this.state.bookings[this.state.bookings.length - 1] }\n    if (typeof booking._id === \"number\") {\n      booking._id = ++booking._id\n    } else {\n      booking._id = 0\n    }\n\n    booking.staff = null\n    const bookings = [...this.state.bookings]\n    bookings.push(booking)\n    this.setState({\n      eventOpen: true,\n      bookings: bookings,\n    });\n  }\n\n  handleRemoveBooking = (index) => {\n    let bookings = [...this.state.bookings]\n    bookings.splice(index, 1)\n    this.setState({ bookings: bookings })\n  }\n\n  handleChangeBooking = async (event, id, type, child = null) => {\n\n    const bookingIndex = this.state.bookings.findIndex(booking => {\n      return booking._id === id\n    })\n\n    const booking = { ...this.state.bookings[bookingIndex] }\n    if (type === \"Time\") {\n      booking.start = event\n    } else if (type === \"Category\") {\n      booking.category = event.target.value\n      let availableServiceList = await fetchAPI('GET', `appointmentMgt/availableservice/${booking.category}`)\n      booking.availableServiceList = availableServiceList\n    } else if (type === \"Service\") {\n      let index = child.props.id;\n      let service = this.state.bookings[bookingIndex].availableServiceList[index]\n      if (this.state.editFlag) {\n        service.start = new Date(booking.start)\n      } else {\n        service.start = booking.start\n      }\n      service.end = new Date((service.start).getTime() + service.duration * 60000);\n      booking.service = event.target.value\n      booking.end = service.end\n      booking.staff = null\n      fetchAPI('POST', 'appointmentMgt/availablestaff', service).then((staffAvailable) => {\n        if (staffAvailable.length === 0) {\n          staffAvailable = [\n            {\n              \"displayName\": \"No Staff Available\"\n            }\n          ]\n        }\n        this.setState({\n          serviceStaffList: staffAvailable,\n        });\n      });\n    } else {\n      booking.staff = event.target.value\n    }\n\n    const bookings = [...this.state.bookings]\n    bookings[bookingIndex] = booking\n\n    this.setState({\n      bookings: bookings\n    })\n  }\n\n  handleCheckOut = () => {\n    this.setState({ checkout: true })\n    this.handleConfirmBookings();\n  }\n\n  handleInvoice = async () => {\n    let invoice = await fetchAPI('GET', `invoiceMgt/appointmentToInvoice/${this.state.appointment._id}`)\n    const { history } = this.props;\n    history.push({\n      pathname: \"/invoice/detail\",\n      state: {\n        invoice: invoice\n      }\n    });\n  }\n\n  navigateToCheckoutDetail = async (id) => {\n    if (this.state.checkout) {\n      let appointment = await fetchAPI('GET', `invoiceMgt/appointment/${id}`)\n      const { history } = this.props;\n      history.push({\n        pathname: \"/invoice/detail\",\n        state: {\n          appointment: appointment\n        }\n      });\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppLayout title=\"Calendar\" {...this.props} >\n        <Paper> <Box p={2}>\n          <DragAndDropCalendar\n            selectable\n            resizable\n            localizer={localizer}\n            events={this.state.events}\n            onEventDrop={this.moveBooking}\n            onEventResize={this.resizeBooking}\n            onSelectSlot={this.newBooking}\n            onSelectEvent={this.handleEditBooking}\n            defaultView={Views.DAY}\n            views={['day', 'week']}\n            defaultDate={new Date()}\n            step={10}\n            timeslots={3}\n            resources={this.state.staffList}\n            resourceIdAccessor=\"_id\"\n            resourceTitleAccessor=\"displayName\"\n            min={this.state.minTime}\n            max={this.state.maxTime}\n          // style={{ height: \"100vh\" }}\n          />\n          <Dialog fullScreen open={this.state.eventOpen} onClose={this.handleEventClose} TransitionComponent={Transition} >\n            <AppBar className={classes.titleBar}>\n              <Toolbar>\n                <Typography variant=\"h6\" className={classes.title}>\n                  {!this.state.editFlag ? \"New Appointment\" : \"Update Appointment\"}\n                </Typography>\n                <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleEventClose} aria-label=\"close\">\n                  <CloseIcon />\n                </IconButton>\n              </Toolbar>\n            </AppBar>\n            <DialogContent dividers=\"paper\">\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                style={{ minHeight: 500 }}>\n                {\n                  !this.state.editFlag ?\n                    this.state.bookings.map((booking, index) =>\n                      <BookingOverview key={booking._id} category={booking.category}\n                        staff={booking.staff} service={booking.service} start={booking.start}\n                        staffList={this.state.serviceStaffList} serviceList={booking.availableServiceList}\n                        categoryList={this.state.categoryList}\n                        changeTime={(event) => this.handleChangeBooking(event, booking._id, \"Time\")}\n                        changeService={(event, child) => this.handleChangeBooking(event, booking._id, \"Service\", child)}\n                        changeStaff={(event) => this.handleChangeBooking(event, booking._id, \"Staff\")}\n                        changeCategory={(event) => this.handleChangeBooking(event, booking._id, \"Category\")}\n                        removeBooking={() => this.handleRemoveBooking(index)}\n                      />\n                    )\n                    :\n                    this.state.bookings.map((booking, index) =>\n                      <BookingOverview key={booking._id} category={booking.category}\n                        staff={booking.staff} service={booking.service} start={booking.start}\n                        staffList={this.state.staffList} serviceList={booking.availableServiceList}\n                        categoryList={this.state.categoryList} disable={this.state.appointment.checkout}\n                        changeTime={(event) => this.handleChangeBooking(event, booking._id, \"Time\")}\n                        changeService={(event, child) => this.handleChangeBooking(event, booking._id, \"Service\", child)}\n                        changeStaff={(event) => this.handleChangeBooking(event, booking._id, \"Staff\")}\n                        changeCategory={(event) => this.handleChangeBooking(event, booking._id, \"Category\")}\n                        removeBooking={() => this.handleRemoveBooking(index)}\n                      />\n                    )\n                }\n\n                <FormControl className={classes.formControl}>\n                  <ReactSelect\n                    onChange={this.handleSelectClientChange}\n                    options={this.state.clientList}\n                    value={this.state.selectedClient}\n                    placeholder={\"Please Select a Customer...\"}\n                    isDisabled={this.state.editFlag ? this.state.appointment.checkout : false}\n                  />\n                </FormControl>\n\n                {(this.state.editFlag ? this.state.appointment.checkout : false) ? null :\n                  <IconButton color=\"primary\" onClick={this.handleAddBooking} aria-label=\"close\">\n                    <AddIcon fontSize=\"large\" />\n                  </IconButton>\n                }\n              </Grid>\n\n              {\n                !this.state.editFlag ?\n                  (\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"flex-end\"\n                      spacing={10}>\n                      <Grid item xs={3}>\n                        <Button fullWidth variant=\"contained\" color=\"primary\" onClick={this.handleConfirmBookings}>\n                          Save Appointment\n                        </Button>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <ColorButton fullWidth variant=\"contained\" color=\"primary\" onClick={this.handleCheckOut}>\n                          Express Checkout\n                        </ColorButton>\n                      </Grid>\n                    </Grid>\n                  )\n                  :\n                  (\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"flex-end\"\n                      spacing={10}>\n                      {!this.state.appointment.checkout ?\n                        <React.Fragment>\n                          <Grid item xs={3}>\n                            <Button fullWidth variant=\"contained\" color=\"secondary\"\n                              onClick={this.deleteAppointment}>\n                              Delete\n                        </Button>\n                          </Grid>\n                          <Grid item xs={3}>\n                            <Button fullWidth variant=\"contained\" color=\"primary\" onClick={this.handleConfirmBookings}>\n                              Update Appointment\n                        </Button>\n                          </Grid>\n                          <Grid item xs={3}>\n                            <ColorButton fullWidth variant=\"contained\" color=\"primary\" onClick={this.handleCheckOut}>\n                              Checkout\n                          </ColorButton>\n                          </Grid>\n                        </React.Fragment> :\n                        <Grid item xs={3}>\n                          <ColorButton fullWidth variant=\"contained\" onClick={this.handleInvoice}>\n                            Invoice\n                          </ColorButton>\n                        </Grid>\n                      }\n                    </Grid>\n                  )\n              }\n            </DialogContent>\n          </Dialog>\n        </Box>\n        </Paper>\n      </AppLayout>\n    );\n  }\n}\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[600]),\n    backgroundColor: green[600],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n    marginTop: 30\n  },\n}))(Button);\n\nexport default withStyles(styles)(CalendarView);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Grid,\n} from '@material-ui/core';\nimport AppLayout from '../../Component/Layout/Layout'\nimport MUIDataTable from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/PersonAdd\";\nimport Swal from 'sweetalert2';\nimport { fetchAPI } from '../../utils';\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n});\n\nconst columns = [\n  {\n    name: \"displayName\",\n    label: \"Display Name\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"mobile\",\n    label: \"Mobile\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"credit\",\n    label: \"Credit\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"gender\",\n    label: \"Gender\",\n    options: {\n      filter: true,\n      sort: true,\n    }\n  },\n  {\n    name: \"nric\",\n    label: \"NRIC\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"birthday\",\n    label: \"Birthday Month\",\n    options: {\n      filter: true,\n      sort: true,\n    }\n  },\n];\n\nfunction replaceRange(s, start, end, substitute) {\n  return s.substring(0, start) + substitute + s.substring(end);\n}\n\nclass Client extends React.Component {\n\n  state = {\n    clientList: [],\n  };\n\n  async componentDidMount() {\n    try {\n      const clientList = await fetchAPI('GET', 'clientMgt/clients');\n      clientList.map(client => {\n        client.birthday = client.birthday ? new Date(client.birthday).getMonth() + 1 : \"-\"\n        return client.nric = replaceRange(client.nric, 0, 5, \"*****\")\n      })\n      this.setState({ clientList: clientList });\n    } catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  handleAddClient = () => {\n    const { history } = this.props;\n    history.push('/client/new');\n  }\n\n  handleRowClick = (rowMeta) => {\n    const { history } = this.props;\n    history.push({\n      pathname: \"/client/detail\",\n      state: {\n        data: this.state.clientList[rowMeta.dataIndex]\n      }\n    });\n  }\n  async handleRowDelete(rowsDeleted) {\n    try {\n      const deleteObjList = rowsDeleted.map((row) => {\n        return this.state.clientList[row.dataIndex]\n      });\n      const response = await fetchAPI('DELETE', 'clientMgt/clients', deleteObjList);\n      if (response && response.ok) {\n        Swal.fire({\n          type: 'success', text: response.ok,\n          title: \"Success!\"\n        })\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: \"Opps... Something Wrong...\",\n          text: response.error\n        })\n      }\n    }\n    catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  render() {\n    return (\n      <AppLayout title=\"Clients\" {...this.props} >\n        <Grid container justify=\"flex-end\" spacing={32} >\n          <Grid item xs={12}>\n            <MUIDataTable\n              title=\"Client List\"\n              data={this.state.clientList}\n              columns={columns}\n              options={{\n                customToolbar: () => {\n                  return (\n                    <Tooltip title={\"Add Client\"}>\n                      <IconButton onClick={this.handleAddClient}>\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                  );\n                },\n                // customToolbarSelect: () => {\n                //   return (\n                //     <React.Fragment>\n                //       <Tooltip title={\"Add Client\"}>\n                //         <IconButton onClick={this.handleAddClient}>\n                //           <AddIcon />\n                //         </IconButton>\n                //       </Tooltip>\n                //       <Tooltip title={\"Add Client\"}>\n                //         <IconButton onClick={this.handleAddClient}>\n                //           <AddIcon />\n                //         </IconButton>\n                //       </Tooltip>\n                //     </React.Fragment>\n                //   );\n                // },\n                onRowClick: (rowData, rowMeta) => {\n                  this.handleRowClick(rowMeta);\n                },\n                onRowsDelete: rowsDeleted => {\n                  this.handleRowDelete(rowsDeleted.data);\n                },\n                filterType: 'checkbox',\n              }}\n            />\n          </Grid>\n        </Grid>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Client);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress,\n} from '@material-ui/core';\n\nimport DatePicker from '@material-ui/core/TextField'\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nconst genderOptions = [\n    { value: \"M\", label: 'M' },\n    { value: \"F\", label: 'F' },\n];\n\nclass NewClient extends React.Component {\n\n    state = {\n        gender: genderOptions[0],\n        birthday: null,\n    }\n\n    handleCancel() {\n        window.history.back();\n    }\n\n    handleGenderSelection = (gender) => {\n        this.setState({ gender });\n    }\n    handleChangeBirthday = (event) => {\n        this.setState({ birthday: event.target.value });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"New Client\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            New Client Onboard\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n                    <Formik\n                        initialValues={{ mobile: '', password: '', confirmPassoword: '', email: '', displayName: '', nric: '' }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.mobile) { errors.mobile = 'Please enter mobile number' }\n                            if (!values.displayName) { errors.displayName = 'Please enter display name' }\n                            // if (!values.password) { errors.password = 'Please enter password' }\n                            // if (!values.confirmPassoword) { errors.confirmPassoword = 'Please enter password' }\n                            if (values.password !== values.confirmPassoword) { errors.confirmPassoword = 'Password does not match' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting, setErrors }) => {\n                            try {\n                                values.gender = this.state.gender.value\n                                values.birthday = this.state.birthday\n                                const respObj = await fetchAPI('POST', 'clientMgt/clients', values);\n\n                                if (respObj && respObj.ok) {\n\n                                    window.history.back();\n                                } else { \n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                 }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"password\" label=\"Password\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                                /> */}\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"displayName\" label=\"Display Name\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"email\" label=\"Email\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"nric\" label=\"NRIC\"\n                                />\n                                <DatePicker\n                                    fullWidth\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    id=\"date\"\n                                    label=\"Birthday\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={this.handleChangeBirthday}\n                                />\n                                <Typography>\n                                    <h5>\n                                        Gender\n                                    </h5>\n                                </Typography>\n                                <Select className={classes.select}\n                                    onChange={this.handleGenderSelection}\n                                    options={genderOptions}\n                                    value={this.state.gender}\n                                />\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Register\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(NewClient);","import React from 'react';\nimport {\n    Grid, TextField, Paper, ListItem,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n    listitem: {\n        margin: theme.spacing(1),\n        width: '100%'\n    },\n});\n\nfunction getTotal(bookings) {\n    let total = 0\n    for (let i = 0; i < bookings.length; i++) {\n        total += bookings[i].service.price\n    }\n    return total\n}\n\nclass InvoiceList extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <ListItem button onClick={this.props.click} >\n                <Grid\n                    container\n                    direction=\"column\">\n                    {\n                        this.props.bookings.map(booking => {\n\n                            return (\n                                <React.Fragment>\n                                    <Grid item>\n                                        <Grid\n                                            container\n                                            justify=\"space-between\"\n                                            direction=\"row\">\n                                            <h3><strong>{booking.service.name}</strong></h3>\n                                            <h3><strong>S${booking.service.price}</strong></h3>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <light>{new Date(booking.start).toLocaleString()} with {booking.staff.displayName} </light>\n                                    </Grid>\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                    <Grid item>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"flex-end\"\n                            alignItems=\"center\">\n                            <h3><strong>Total: ${getTotal(this.props.bookings)} </strong></h3>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </ListItem>\n        )\n    }\n}\nexport default withStyles(styles)(InvoiceList);","import React from 'react';\nimport {\n    Grid, TextField, Paper, ListItem,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n    listitem: {\n        margin: theme.spacing(1),\n        width: '100%'\n    },\n});\n\nclass InvoiceList extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <ListItem button onClick={this.props.click} >\n                <Grid\n                    container\n                    direction=\"column\">\n                    {\n                        this.props.invoice.appointment.bookings.map(booking => {\n\n                            return (\n                                <React.Fragment>\n                                    <Grid item>\n                                        <Grid\n                                            container\n                                            justify=\"space-between\"\n                                            direction=\"row\">\n                                            <h3><strong>{booking.service.name}</strong></h3>\n                                            <h3><strong>S${booking.service.price}</strong></h3>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <light>{new Date(booking.start).toLocaleString()} with {booking.staff.displayName} </light>\n                                    </Grid>\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                    <Grid item>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"space-between\"\n                            alignItems=\"center\">\n                                    <h3><strong>Addon: ${this.props.invoice.addon} </strong></h3>\n                                    <h3><strong>Discount: ${this.props.invoice.discount} </strong></h3>\n                                    <h3><strong>Total: ${this.props.invoice.total} </strong></h3>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </ListItem>\n        )\n    }\n}\nexport default withStyles(styles)(InvoiceList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { withStyles } from '@material-ui/styles';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Tabs, Tab, Typography, Box, Divider, ListItem, Grid } from '@material-ui/core';\nimport AppointmentListView from '../Invoice/AppointmentListView'\nimport InvoiceListView from '../Invoice/InvoiceListView'\n\nfunction Appointment(props) {\n    return (\n        <AppointmentListView bookings={props.bookings} click={props.click} />\n    )\n}\n\nfunction Invoice(props) {\n    return (\n        <InvoiceListView invoice={props.invoice} click={props.click} />\n    )\n}\n\nfunction Record(props) {\n    return (\n        <ListItem button>\n            {props.creditRecord.staff ?\n                <Grid\n                    container\n                    justify=\"space-between\"\n                    alignItems=\"center\"\n                    direction=\"row\">\n                    <div>\n                        <h3><strong>S${props.creditRecord.amount}</strong></h3>\n                        <light>{new Date(props.creditRecord.createdAt).toLocaleString()}</light>\n                    </div>\n                    Added By {props.creditRecord.staff.displayName}\n                </Grid>\n                :\n                <Grid\n                    container\n                    justify=\"space-between\"\n                    alignItems=\"center\"\n                    direction=\"row\">\n                    <div>\n                        <h3><strong>S${props.creditRecord.amount}</strong></h3>\n                        <light>{new Date(props.creditRecord.createdAt).toLocaleString()}</light>\n                    </div>\n                    <div>\n                        {props.creditRecord.services.map(service => {\n                            return <div>{service}</div>\n                        })}\n                    </div>\n                </Grid>\n            }\n\n        </ListItem>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n});\n\nclass TabView extends React.Component {\n    state = {\n        value: 0,\n        index: null,\n    }\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue })\n    };\n\n    handleChangeIndex = index => {\n        this.setState({ index: index })\n    };\n\n    render() {\n        const { appointments, invoices, creditRecords } = this.props\n        const { value } = this.state\n        return (\n            <div>\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab label=\"Appointments\" {...a11yProps(0)} />\n                    <Tab label=\"Invoices\" {...a11yProps(1)} />\n                    <Tab label=\"Credit Record\" {...a11yProps(2)} />\n                </Tabs>\n                <TabPanel value={value} index={0} >\n                    {\n                        appointments ?\n                            appointments.map(appointment => {\n                                return (\n                                    <React.Fragment>\n                                        <Divider />\n                                        <Appointment bookings={appointment.bookings} click={() => {\n                                            const { history } = this.props;\n                                            history.push({\n                                                pathname: \"/invoice/detail\",\n                                                state: {\n                                                    appointment: appointment\n                                                }\n                                            });\n                                        }} />\n                                        <Divider />\n                                    </React.Fragment>\n                                )\n                            }) : null\n                    }\n                </TabPanel>\n                <TabPanel value={value} index={1} >\n                    {\n                        invoices ?\n                            invoices.map(invoice => {\n                                return (\n                                    <React.Fragment>\n                                        <Divider />\n                                        <Invoice invoice={invoice} click={() => {\n                                            const { history } = this.props;\n                                            history.push({\n                                                pathname: \"/invoice/detail\",\n                                                state: {\n                                                    invoice: invoice\n                                                }\n                                            });\n                                        }} />\n                                        <Divider />\n                                    </React.Fragment>\n                                )\n                            }) : null\n                    }\n                </TabPanel>\n                <TabPanel value={value} index={2} >\n                    {\n\n                        creditRecords ?\n                            creditRecords.map(creditRecord => {\n                                return (\n                                    <React.Fragment>\n                                        <Divider />\n                                        <Record creditRecord={creditRecord} />\n                                        <Divider />\n                                    </React.Fragment>\n                                )\n                            }) : null\n                    }\n                </TabPanel>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(TabView);","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, Grid, Avatar, Paper, Divider, List, ListItem, ListItemAvatar, Dialog, DialogActions, DialogContent,\n    DialogTitle, TextField, ButtonGroup\n} from '@material-ui/core';\nimport { fetchAPI, getAvatarLetter } from '../../utils';\nimport AppLayout from '../../Component/Layout/Layout'\nimport TabView from '../../Component/TabView/TabView'\nimport Swal from 'sweetalert2';\n\nconst styles = theme => ({\n    bigAvatar: {\n        margin: 10,\n        width: 100,\n        height: 100,\n    },\n    list: {\n        width: \"100%\",\n    },\n    listAvatar: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    listButton: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    labelColor: {\n        color: '#969590',\n    },\n});\n\nfunction replaceRange(s, start, end, substitute) {\n    return s.substring(0, start) + substitute + s.substring(end);\n}\n\nclass ClientDetail extends React.Component {\n\n    state = {\n        addCreditDialog: false,\n        credit: '',\n        client: '',\n        totalBookings: 0,\n        totalCompleted: 0,\n        totalSales: 0,\n        totalMiss: 0,\n        appointments: null,\n        invoices: null,\n    }\n\n    async componentDidMount() {\n        try {\n            let respObj = await fetchAPI('GET', `clientMgt/clients/${this.props.location.state.data._id}`)\n            const statistics = await fetchAPI('GET', `clientMgt/statistics/${this.props.location.state.data._id}`)\n            const appointments = await fetchAPI('GET', `clientMgt/appointments/${this.props.location.state.data._id}`)\n            const invoices = await fetchAPI('GET', `clientMgt/invoices/${this.props.location.state.data._id}`)\n            const creditRecords = await fetchAPI('GET', `clientMgt/creditRecordList/${this.props.location.state.data._id}`)\n            if (respObj) {\n                respObj.nric = replaceRange(respObj.nric, 0, 5, \"*****\")\n                this.setState({\n                    client: respObj\n                })\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n            if (statistics && statistics.ok) {\n                if (statistics.totalCompleted) {\n                    this.setState({\n                        totalBookings: statistics.totalBookings,\n                        totalCompleted: statistics.totalCompleted,\n                        totalSales: statistics.totalSales,\n                        totalMiss: statistics.totalBookings - statistics.totalCompleted\n                    })\n                } else if (statistics.totalBookings) {\n                    this.setState({\n                        totalBookings: statistics.totalBookings,\n                    })\n                }\n            }\n            if (appointments && appointments.ok) {\n                this.setState({\n                    appointments: appointments.appointments\n                })\n            }\n            if (invoices && invoices.ok) {\n                this.setState({\n                    invoices: invoices.invoices\n                })\n\n            }\n            if (creditRecords && creditRecords.ok) {\n                this.setState({\n                    creditRecords: creditRecords.creditRecordList\n                })\n            }\n\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n    handleEditClick = () => {\n        const { history } = this.props;\n        history.push({\n            pathname: \"/client/update\",\n            state: {\n                data: this.state.client,\n            }\n        });\n    }\n    addCreditValueChange = (event) => {\n        this.setState({ credit: event.target.value })\n    }\n    handleAddCreditOpen = () => {\n        this.setState({ addCreditDialog: true });\n    }\n    handleAddCreditClose = () => {\n        this.setState({\n            addCreditDialog: false,\n            credit: '',\n        });\n    };\n\n    handleAddCreditConfirm = () => {\n        this.handleAddCreditClose();\n        if (this.state.credit) {\n            let values = {\n                credit: this.state.credit\n            }\n            fetchAPI('POST', `creditRecordMgt/addcredit/${this.state.client._id}`, values).then(respObj => {\n                if (respObj && respObj.ok) {\n                    this.setState({\n                        client: respObj.client,\n                        creditRecords: this.state.creditRecords.concat([respObj.creditRecord]),\n                    })\n                    Swal.fire({\n                        type: 'success', text: respObj.ok,\n                        title: \"Success!\"\n                    })\n                } else {\n                    Swal.fire({\n                        type: 'error',\n                        title: \"Opps... Something Wrong...\",\n                        text: respObj.error\n                    })\n                }\n            }).catch(error => {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: error\n                })\n            })\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"Client Details\" {...this.props} >\n\n                <Grid container justify=\"center\" spacing={3} >\n                    <Grid item xs={5}>\n                        <Paper>\n                            <List className={classes.list}>\n                                <ListItemAvatar className={classes.listAvatar}>\n                                    <Grid container direction='column' alignItems=\"center\">\n                                        <Avatar alt=\"Remy Sharp\" className={classes.bigAvatar}>{getAvatarLetter(this.props.location.state.data.displayName)} </Avatar>\n                                        <Typography variant='h4' style={{ marginTop: \"10px\" }}> {this.state.client.displayName} </Typography>\n                                    </Grid>\n                                </ListItemAvatar>\n                                <Divider />\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> Email </Typography>\n                                        <Typography> {this.state.client.email ? this.state.client.email : \"-\"} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> Gender </Typography>\n                                        <Typography> {this.state.client.gender} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> NRIC </Typography>\n                                        <Typography> {this.state.client.nric} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> Mobile </Typography>\n                                        <Typography> {this.state.client.mobile} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> Birthday </Typography>\n                                        <Typography> {this.state.client.birthday ? new Date(this.state.client.birthday).toLocaleDateString() : \"-\"} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem >\n                                    <ButtonGroup fullWidth >\n                                        <Button onClick={this.handleEditClick}>Edit</Button>\n                                        <Button onClick={this.handleAddCreditOpen}>Add Credit</Button>\n                                        <Button onClick={() => this.props.history.push(\"/appointment\")}>New Appointment</Button>\n                                    </ButtonGroup>\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={7}>\n                        <Grid container spacing={3} direction=\"column\">\n                            <Grid item>\n                                <Paper>\n                                    <List>\n                                        <ListItem style={{ minHeight: 100 }}>\n                                            <Grid container direction='row' justify=\"space-evenly\" alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h5'> {this.state.client.credit} </Typography>\n                                                        <Typography className={classes.labelColor} > Credit Balance </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h5'> ${this.state.totalSales} </Typography>\n                                                        <Typography className={classes.labelColor}> Total Sales </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <Divider />\n                                        <ListItem>\n                                            <Grid container direction='row' justify=\"space-evenly\" alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h6'> {this.state.totalBookings} </Typography>\n                                                        <Typography className={classes.labelColor}> All Bookings </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h6'> {this.state.totalCompleted} </Typography>\n                                                        <Typography className={classes.labelColor}> Completed </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h6'> {this.state.totalMiss} </Typography>\n                                                        <Typography className={classes.labelColor}> Missed </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                    </List>\n                                </Paper>\n                            </Grid>\n                            <Grid item>\n                                <Paper>\n                                    <TabView {...this.props}\n                                        appointments={this.state.appointments ? this.state.appointments : null}\n                                        invoices={this.state.invoices ? this.state.invoices : null}\n                                        creditRecords={this.state.creditRecords ? this.state.creditRecords : null}>\n                                    </TabView>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Dialog open={this.state.addCreditDialog} onClose={this.handleAddCreditClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Add Credit</DialogTitle>\n                    <DialogContent style={{ minWidth: 400 }}>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Amount\"\n                            type=\"number\"\n                            fullWidth\n                            placeholder=\"Please enter amount...\"\n                            onChange={this.addCreditValueChange}\n                            value={this.state.credit}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleAddCreditClose} color=\"primary\">\n                            Cancel\n                    </Button>\n                        <Button onClick={this.handleAddCreditConfirm} color=\"primary\">\n                            Confirm\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </AppLayout >\n        );\n    }\n}\n\nexport default withStyles(styles)(ClientDetail);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress\n} from '@material-ui/core';\nimport Datepicker from '@material-ui/core/TextField'\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n});\nconst genderOptions = [\n    { value: \"M\", label: 'M' },\n    { value: \"F\", label: 'F' },\n];\nclass UpdateClient extends React.Component {\n\n    state = {\n        gender: { value: this.props.location.state.data.gender, label: this.props.location.state.data.gender },\n        birthday: null,\n    }\n\n    handleGenderSelection = (gender) => {\n        this.setState({ gender });\n    }\n    handleChangeBirthday = (event) => {\n        this.setState({ birthday: event.target.value });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"Staff Details\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            Update Client Details\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n\n                    <Formik\n                        initialValues={{ mobile: this.props.location.state.data.mobile, displayName: this.props.location.state.data.displayName, email: this.props.location.state.data.email, nric: this.props.location.state.data.nric, credit: this.props.location.state.data.credit }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.mobile) { errors.mobile = 'Please enter mobile number' }\n                            if (!values.displayName) { errors.displayName = 'Please enter display name' }\n                            if (values.password !== values.confirmPassoword) { errors.confirmPassoword = 'Password does not match' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting }) => {\n                            try {\n                                values.gender = this.state.gender.value\n                                values.birthday = this.state.birthday\n                                const respObj = await fetchAPI('PATCH', `clientMgt/clients/${this.props.location.state.data._id}`, values);\n                                if (respObj && respObj.ok) {\n                                    const { history } = this.props;\n\n                                    history.push({\n                                        pathname: \"/client/detail\",\n                                        state: {\n                                            data: respObj.client\n                                        }\n                                    });\n                                } else {\n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"password\" label=\"New Passowrd\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"displayName\" label=\"Display Name\"\n                                />\n\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"email\" label=\"Email\"\n                                />\n\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"nric\" label=\"NRIC\"\n                                />\n                                <Datepicker\n                                    fullWidth\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    id=\"date\"\n                                    label=\"Birthday\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={this.handleChangeBirthday}\n                                />\n                                <Typography>\n                                    <h5>\n                                        Gender\n                                    </h5>\n                                </Typography>\n                                <Select className={classes.select}\n                                    onChange={this.handleGenderSelection}\n                                    options={genderOptions}\n                                    value={this.state.gender}\n                                />\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Update\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(UpdateClient);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Grid,\n} from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\nimport MUIDataTable from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport RoleIcon from \"@material-ui/icons/Add\";\nimport AddIcon from \"@material-ui/icons/PersonAdd\";\nimport { fetchAPI } from '../../utils';\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n});\n\nconst columns = [\n  {\n    name: \"username\",\n    label: \"Userame\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"displayName\",\n    label: \"Display Name\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"mobile\",\n    label: \"Mobile\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"role.name\",\n    label: \"Role\",\n    options: {\n      filter: true,\n      sort: true,\n    }\n  },\n];\n\nclass Staff extends React.Component {\n  constructor() {\n    super();\n    this.state = { userList: [] };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetchAPI('GET', 'staffMgt/staffs');\n      this.setState({ userList: response });\n    } catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  handleAddStaff = () => {\n    const { history } = this.props;\n    history.push('/staff/new');\n  }\n\n  handleAddRole = () => {\n\n  }\n\n  handleRowClick = (rowMeta) => {\n    const { history } = this.props;\n    history.push({\n      pathname: \"/staff/detail\",\n      state: {\n        data: this.state.userList[rowMeta.dataIndex]\n      }\n    });\n  }\n\n  async handleRowDelete(rowsDeleted) {\n    try {\n      const deleteObjList = rowsDeleted.map((row) => {\n        return this.state.userList[row.dataIndex]\n      });\n      const response = await fetchAPI('DELETE', 'staffMgt/staffs', deleteObjList);\n      if (response && response.ok) {\n        Swal.fire({\n          type: 'success', text: response.ok,\n          title: \"Success!\"\n        })\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: \"Opps... Something Wrong...\",\n          text: response.error\n        })\n      }\n    }\n    catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  render() {\n    return (\n      <AppLayout title=\"Staff List\" {...this.props} >\n        <Grid container justify=\"flex-end\" spacing={32} >\n          <Grid item xs={12}>\n            <MUIDataTable\n              title=\"Client List\"\n              data={this.state.userList}\n              columns={columns}\n              options={{\n                customToolbar: () => {\n                  return (\n                    <React.Fragment>\n                      <Tooltip title={\"Add Staff\"}>\n                        <IconButton onClick={this.handleAddStaff}>\n                          <AddIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </React.Fragment>\n                  );\n                },\n                onRowClick: (rowData, rowMeta) => {\n                  this.handleRowClick(rowMeta);\n                },\n                onRowsDelete: rowsDeleted => {\n                  this.handleRowDelete(rowsDeleted.data);\n                },\n                filterType: 'checkbox',\n              }}\n            />\n          </Grid>\n        </Grid>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Staff);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress, Dialog, DialogActions, DialogContent, DialogTitle\n} from '@material-ui/core';\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\nimport InfiniteCalendar, { Calendar, defaultMultipleDateInterpolation, withMultipleDates } from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css'\n\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n\n});\n\nclass NewStaff extends React.Component {\n\n    state = {\n        selectedOption: {},\n        roleList: [],\n        selectedLeaves: [],\n        selectedOff: [],\n        offDays: [],\n        leaveOpen: false,\n        offOpen: false,\n    };\n\n    async componentDidMount() {\n        try {\n            const roleList = await fetchAPI('GET', 'staffMgt/roles');\n            this.setState({\n                roleList: roleList,\n                selectedOption: roleList[0]\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n    };\n\n    handleLeaveSelection(selectedDate) {\n        let selectedLeave = defaultMultipleDateInterpolation(selectedDate, this.state.selectedLeaves)\n        this.setState({\n            selectedLeaves: selectedLeave\n        })\n    }\n\n    handleOffSelection(selectedDate) {\n        let selectedOff = defaultMultipleDateInterpolation(selectedDate, this.state.selectedOff)\n        let disabledDays = selectedOff.map(day => {\n            return day.getDay();\n        })\n        this.setState({\n            offDays: disabledDays,\n            selectedOff: selectedOff\n        })\n    }\n\n    handleLeaveClickOpen = () => {\n        this.setState({ leaveOpen: true });\n    };\n\n    handleLeaveOpen = () => {\n        this.setState({ leaveOpen: false });\n    }\n\n    handleLeaveClose = () => {\n        this.setState({ leaveOpen: false });\n    }\n\n    handleOffClickOpen = () => {\n        this.setState({ offOpen: true });\n    };\n\n    handleOffOpen = () => {\n        this.setState({ offOpen: false });\n    }\n\n    handleOffClose = () => {\n        this.setState({ offOpen: false });\n    }\n\n    handleOffReset = () => {\n        this.setState({\n            offDays: [],\n            selectedOff: [],\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        const { selectedOption } = this.state;\n        return (\n            <AppLayout title=\"New Staff\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            Personal Infomation\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n                    <Formik\n                        initialValues={{ username: '', password: '', confirmPassoword: '', mobile: '', email: '', }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.username) { errors.username = 'Please enter username' }\n                            if (!values.password) { errors.password = 'Please enter password' }\n                            if (!values.confirmPassoword) { errors.confirmPassoword = 'Please enter password' }\n                            if (!values.displayName) { errors.displayName = 'Please enter display name' }\n                            if (!values.mobile) { errors.mobile = 'Please enter mobile number' }\n                            if (!values.email) { errors.email = 'Please enter email address' }\n                            if (values.password !== values.confirmPassoword) { errors.confirmPassoword = 'Password does not match' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting, setErrors }) => {\n                            try {\n                                values.role = this.state.selectedOption.value;\n                                values.offDays = this.state.offDays;\n                                values.leaveDays = this.state.selectedLeaves;\n\n                                const respObj = await fetchAPI('POST', 'staffMgt/staffs', values);\n\n                                if (respObj && respObj.ok) {\n                                    window.history.back();\n                                } else {\n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth autoFocus\n                                    name=\"username\" label=\"Username\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"password\" label=\"Password\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"displayName\" label=\"Display Name\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"email\" label=\"Email\"\n                                />\n                                <Typography>\n                                    <h5>\n                                        Role\n                                    </h5>\n                                </Typography>\n                                <Select className={classes.select}\n                                    onChange={this.handleChange}\n                                    options={this.state.roleList}\n                                    value={selectedOption}\n                                />\n                                <Typography>\n                                    <h5>\n                                        On Leave\n                                    </h5>\n                                </Typography>\n                                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleLeaveClickOpen}>\n                                    Please Select Leave Days...\n                                </Button>\n                                <Dialog open={this.state.leaveOpen} onClose={this.handleLeaveClose} aria-labelledby=\"form-dialog-title\">\n                                    <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                                    <DialogContent>\n                                        <InfiniteCalendar id=\"leaveCalendar\"\n                                            Component={withMultipleDates(Calendar)}\n                                            selected={this.state.selectedLeaves}\n                                            minDate={new Date()}\n                                            disabledDays={this.state.offDays}\n                                            interpolateSelection={defaultMultipleDateInterpolation}\n                                            onSelect={(selectedDate) => { this.handleLeaveSelection(selectedDate) }}\n                                        />\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={this.handleLeaveClose} color=\"primary\">\n                                            Done\n                                        </Button>\n                                    </DialogActions>\n                                </Dialog>\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Register\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(NewStaff);","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress, Dialog, DialogActions, DialogContent, DialogTitle, Paper, Box\n} from '@material-ui/core';\nimport InfiniteCalendar, { Calendar, defaultMultipleDateInterpolation, withMultipleDates } from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css'\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nclass ClientDetail extends React.Component {\n    state = {\n        selectedOption: { value: this.props.location.state.data.role._id, label: this.props.location.state.data.role.name },\n        roleList: [],\n        selectedLeaves: this.props.location.state.data.leaveDays,\n        selectedOff: [],\n        leaveOpen: false,\n    };\n\n    async componentDidMount() {\n        try {\n            const roleList = await fetchAPI('GET', 'staffMgt/roles');\n\n            this.setState({\n                roleList: roleList,\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n    };\n\n    handleLeaveSelection(selectedDate) {\n        let selectedLeave = defaultMultipleDateInterpolation(selectedDate, this.state.selectedLeaves)\n        this.setState({\n            selectedLeaves: selectedLeave\n        })\n    }\n\n    handleLeaveClickOpen = () => {\n        this.setState({ leaveOpen: true });\n    };\n\n    handleLeaveOpen = () => {\n        this.setState({ leaveOpen: false });\n    }\n\n    handleLeaveClose = () => {\n        this.setState({ leaveOpen: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"Staff Details\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Paper>\n                        <Box p={2}>\n                            <Typography>\n                                <h3>\n                                    Personal Infomation\n                        </h3>\n                            </Typography>\n                            <CssBaseline />\n                            <Formik\n                                initialValues={{ username: this.props.location.state.data.username, displayName: this.props.location.state.data.displayName, mobile: this.props.location.state.data.mobile, email: this.props.location.state.data.email }}\n                                validate={values => {\n                                    const errors = {};\n                                    if (!values.username) { errors.username = 'Please enter username' }\n                                    if (!values.displayName) { errors.displayName = 'Please enter password' }\n                                    if (!values.mobile) { errors.mobile = 'Please enter mobile number' }\n                                    if (!values.email) { errors.email = 'Please enter email address' }\n                                    if (values.password !== values.confirmPassoword) { errors.confirmPassoword = 'Password does not match' }\n                                    return errors;\n                                }}\n                                onSubmit={async (values, { setSubmitting }) => {\n                                    try {\n                                        values.role = this.state.selectedOption.value;\n                                        values.leaveDays = this.state.selectedLeaves;\n\n                                        const respObj = await fetchAPI('PATCH', `staffMgt/staffs/${this.props.location.state.data._id}`, values);\n\n                                        if (respObj && respObj.ok) {\n                                            window.history.back();\n                                        } else {\n                                            Swal.fire({\n                                                type: 'error',\n                                                title: \"Opps... Something Wrong...\",\n                                                text: respObj.error\n                                            })\n                                        }\n                                    } catch (error) {\n                                        Swal.fire({\n                                            type: 'error',\n                                            title: \"Opps... Something Wrong...\",\n                                            text: error\n                                        })\n                                    }\n                                    setSubmitting(false);\n                                }}\n                                render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                                    <Form>\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth autoFocus\n                                            name=\"username\" label=\"Username\" disabled\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"password\" label=\"New Passowrd\" type=\"password\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"displayName\" label=\"Display Name\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"email\" label=\"Email\"\n                                        />\n                                        <Typography>\n                                            <h5>\n                                                Role\n                                    </h5>\n                                        </Typography>\n                                        <Select className={classes.select}\n                                            onChange={this.handleChange}\n                                            options={this.state.roleList}\n                                            value={this.state.selectedOption}\n                                        />\n\n                                        <Typography>\n                                            <h5>\n                                                On Leave\n                                    </h5>\n                                        </Typography>\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleLeaveClickOpen}>\n                                            Please Select Leave Days...\n                                        </Button>\n                                        <Dialog open={this.state.leaveOpen} onClose={this.handleLeaveClose} aria-labelledby=\"form-dialog-title\">\n                                            <DialogTitle id=\"form-dialog-title\">Leave</DialogTitle>\n                                            <DialogContent>\n                                                <InfiniteCalendar id=\"leaveCalendar\"\n                                                    Component={withMultipleDates(Calendar)}\n                                                    selected={this.state.selectedLeaves}\n                                                    minDate={new Date()}\n                                                    interpolateSelection={defaultMultipleDateInterpolation}\n                                                    onSelect={(selectedDate) => { this.handleLeaveSelection(selectedDate) }}\n                                                />\n                                            </DialogContent>\n                                            <DialogActions>\n                                                <Button onClick={this.handleLeaveClose} color=\"primary\">\n                                                    Done\n                                        </Button>\n                                            </DialogActions>\n                                        </Dialog>\n\n                                        <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                            disabled={isSubmitting} onClick={submitForm}\n                                        >\n                                            Update\n                                        </Button>\n                                        <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                            onClick={() => { window.history.back(); }}\n                                        >\n                                            Cancel\n                                </Button>\n                                        {isSubmitting && <LinearProgress />}\n                                    </Form>\n                                )}\n                            />\n                        </Box>\n                    </Paper>\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClientDetail);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Grid\n} from '@material-ui/core';\nimport MUIDataTable from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport Swal from 'sweetalert2';\nimport { fetchAPI } from '../../utils';\nimport AppLayout from '../../Component/Layout/Layout'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nconst columns = [\n  {\n    name: \"name\",\n    label: \"Service Name\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"category.name\",\n    label: \"Category\",\n    options: {\n      filter: true,\n      sort: true,\n    }\n  },\n  {\n    name: \"price\",\n    label: \"Price($)\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"duration\",\n    label: \"Duration(min)\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"staff\",\n    label: \"Staff Name\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n];\n\nclass Service extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      serviceList: [],\n      displayServiceList: []\n    };\n  }\n\n  getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          width: \"100px\"\n        },\n      }\n    }\n  })\n\n  async componentDidMount() {\n    try {\n      let displayService = await fetchAPI('GET', 'serviceMgt/services');\n      let staffs = await fetchAPI('GET', 'staffMgt/totalstaffs');\n      let services = displayService;\n\n      displayService.map(service => {\n        let tempStaffs = \"\";\n        if (service.staff.length === staffs.total) {\n          tempStaffs = \"All Staff\";\n        } else {\n          service.staff.map(staff => {\n            tempStaffs += staff.displayName + ', ';\n          });\n          tempStaffs = tempStaffs.slice(0, -2);\n        }\n        service.staff = tempStaffs;\n      });\n      this.setState({\n        serviceList: services,\n        displayServiceList: displayService\n      });\n    } catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  handleAddService = () => {\n    const { history } = this.props;\n    history.push('/service/new');\n  }\n\n  handleAddCategory = () => {\n    const { history } = this.props;\n    history.push('/service/newcategory');\n  }\n\n  handleRowClick = (rowMeta) => {\n    const { history } = this.props;\n    history.push({\n      pathname: \"/service/detail\",\n      state: {\n        data: this.state.serviceList[rowMeta.dataIndex]\n      }\n    });\n  }\n\n  async handleRowDelete(rowsDeleted) {\n    try {\n      const deleteObjList = rowsDeleted.map((row) => {\n        return this.state.serviceList[row.dataIndex]\n      });\n      const response = await fetchAPI('DELETE', 'serviceMgt/services', deleteObjList);\n      if (response && response.ok) {\n        Swal.fire({\n          type: 'success', text: response.ok,\n          title: \"Success!\"\n        })\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: \"Opps... Something Wrong...\",\n          text: response.error\n        })\n      }\n    }\n    catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  render() {\n    return (\n      <AppLayout title=\"Service\" {...this.props} >\n        <Grid container justify=\"flex-end\" spacing={32} >\n          <Grid item xs={12}>\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n              <MUIDataTable\n                title=\"Service List\"\n                data={this.state.serviceList}\n                columns={columns}\n                options={{\n                  customToolbar: () => {\n                    return (\n                      <React.Fragment>\n                        <Tooltip title={\"Add Category\"}>\n                          <IconButton onClick={this.handleAddCategory}>\n                            <CategoryIcon />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title={\"Add Service\"}>\n                          <IconButton onClick={this.handleAddService}>\n                            <AddIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </React.Fragment>\n                    );\n                  },\n                  onRowClick: (rowData, rowMeta) => {\n                    this.handleRowClick(rowMeta);\n                  },\n                  onRowsDelete: rowsDeleted => {\n                    this.handleRowDelete(rowsDeleted.data);\n                  },\n                  filterType: 'checkbox',\n                }}\n              />\n            </MuiThemeProvider>\n          </Grid>\n        </Grid>\n\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Service);\n","import React from 'react';\nimport Select from 'react-select';\nimport Picky from 'react-picky';\nimport 'react-picky/dist/picky.css';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress,\n} from '@material-ui/core';\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n\n});\n\nclass NewStaff extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            staffList: [],\n            arrayValue: [],\n            categoryList: [],\n            selectedCategory: null,\n        };\n        this.selectMultipleOption = this.selectMultipleOption.bind(this);\n    }\n\n    selectMultipleOption(value) {\n        this.setState({ arrayValue: value });\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await fetchAPI('GET', 'staffMgt/workingStaff');\n            const categoryList = await fetchAPI('GET', 'serviceMgt/category');\n            this.setState({\n                staffList: response,\n                categoryList: categoryList,\n                selectedCategory: categoryList[0]\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleChangeCategory = (event) => {\n        this.setState({\n            selectedCategory: event\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <AppLayout title=\"New Service\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            Service Details\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n                    <Formik\n                        initialValues={{ name: '', price: '', duration: '' }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.name) { errors.name = 'Please enter service name' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting, setErrors }) => {\n                            try {\n                                let rawStaffList = this.state.arrayValue;\n                                if (rawStaffList.length <= 0) {\n                                    Swal.fire({\n                                        type: 'error', text: 'Please try again.',\n                                        title: \"Please select a staff\"\n                                    })\n                                    setSubmitting(false);\n                                    return\n                                } else {\n                                    let staffList = [];\n                                    for (let i = 0; i < rawStaffList.length; i++) {\n                                        staffList.push(rawStaffList[i]._id)\n                                    }\n                                    values.staff = staffList;\n                                }\n                                values.category = this.state.selectedCategory.value;\n\n                                const respObj = await fetchAPI('POST', 'serviceMgt/services', values);\n\n                                if (respObj && respObj.ok) {\n\n                                    window.history.back();\n                                } else {\n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"name\" label=\"Service Name\"\n                                />\n\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"price\" label=\"Price ($)\" type=\"number\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"duration\" label=\"Duration (min)\" type=\"number\"\n                                />\n                                <Typography>\n                                    <h5>\n                                        Category\n                                    </h5>\n                                </Typography>\n                                <Select className={classes.select}\n                                    onChange={this.handleChangeCategory}\n                                    options={this.state.categoryList}\n                                    value={this.state.selectedCategory}\n                                />\n                                <Typography>\n                                    <h5>\n                                        Select staff who perform this service.\n                                    </h5>\n                                </Typography>\n                                <Picky\n                                    value={this.state.arrayValue}\n                                    options={this.state.staffList}\n                                    onChange={this.selectMultipleOption}\n                                    numberDisplayed={10}\n                                    valueKey=\"_id\"\n                                    labelKey=\"displayName\"\n                                    multiple={true}\n                                    includeSelectAll={true}\n                                    includeFilter={true}\n                                    dropdownHeight={600}\n                                />\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Register\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(NewStaff);","import React from 'react';\nimport Select from 'react-select';\nimport Picky from 'react-picky';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress, Paper, Box,\n} from '@material-ui/core';\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nclass ClientDetail extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            staffList: [],\n            arrayValue: [],\n            categoryList: [],\n            selectedCategory: { value: this.props.location.state.data.category.value, label: this.props.location.state.data.category.name },\n        };\n        this.selectMultipleOption = this.selectMultipleOption.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await fetchAPI('GET', 'staffMgt/workingStaff');\n            const categoryList = await fetchAPI('GET', 'serviceMgt/category');\n            if (this.props.location.state.data.staff === \"All Staff\") {\n                this.setState({ arrayValue: response });\n            } else {\n                const service = await fetchAPI('GET', `serviceMgt/services/${this.props.location.state.data._id}`);\n                this.setState({ arrayValue: service.staff });\n            }\n            this.setState({\n                staffList: response,\n                categoryList: categoryList\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    selectMultipleOption(value) {\n        this.setState({ arrayValue: value });\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n    };\n\n    handleChangeCategory = (event) => {\n        this.setState({\n            selectedCategory: event\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <AppLayout title=\"Service Details\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Paper>\n                        <Box p={2}>\n                            <Typography>\n                                <h3>\n                                    Service Details\n                        </h3>\n                            </Typography>\n                            <CssBaseline />\n                            <Formik\n                                initialValues={{ name: this.props.location.state.data.name, category: this.props.location.state.data.category, price: this.props.location.state.data.price, duration: this.props.location.state.data.duration }}\n                                validate={values => {\n                                    const errors = {};\n                                    if (!values.name) { errors.name = 'Please enter service name' }\n                                    return errors;\n                                }}\n                                onSubmit={async (values, { setSubmitting, setErrors }) => {\n                                    try {\n                                        let rawStaffList = this.state.arrayValue;\n                                        if (rawStaffList.length <= 0) {\n                                            Swal.fire({\n                                                type: 'error',\n                                                title: \"Please select a staff...\",\n                                            })\n                                            setSubmitting(false);\n                                            return\n                                        } else {\n                                            let staffList = [];\n                                            for (let i = 0; i < rawStaffList.length; i++) {\n                                                staffList.push(rawStaffList[i]._id)\n                                            }\n                                            values.staff = staffList;\n                                        }\n                                        values.category = this.state.selectedCategory.value;\n                                        const respObj = await fetchAPI('PATCH', `serviceMgt/services/${this.props.location.state.data._id}`, values);\n\n                                        if (respObj && respObj.ok) {\n\n                                            window.history.back();\n                                        } else {\n                                            Swal.fire({\n                                                type: 'error', text: respObj.error,\n                                                title: \"Opps... Something Wrong...\"\n                                            })\n                                        }\n                                    } catch (error) {\n                                        Swal.fire({\n                                            type: 'error', text: error,\n                                            title: \"Opps... Something Wrong...\"\n                                        })\n                                    }\n                                    setSubmitting(false);\n                                }}\n                                render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                                    <Form>\n\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth autoFocus\n                                            name=\"name\" label=\"Service Name\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"price\" label=\"Price ($)\" type=\"number\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"duration\" label=\"Duration (min)\" type=\"number\"\n                                        />\n                                        <Typography>\n                                            <h5>\n                                                Category\n                                            </h5>\n                                        </Typography>\n                                        <Select className={classes.select}\n                                            onChange={this.handleChangeCategory}\n                                            options={this.state.categoryList}\n                                            value={this.state.selectedCategory}\n                                        />\n                                        <Typography>\n                                            <h5>\n                                                Select staff who perform this service.\n                                            </h5>\n                                        </Typography>\n                                        <Picky\n                                            value={this.state.arrayValue}\n                                            options={this.state.staffList}\n                                            onChange={this.selectMultipleOption}\n                                            numberDisplayed={10}\n                                            valueKey=\"_id\"\n                                            labelKey=\"displayName\"\n                                            multiple={true}\n                                            includeSelectAll={true}\n                                            includeFilter={true}\n                                            dropdownHeight={600}\n                                        />\n\n                                        <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                            disabled={isSubmitting} onClick={submitForm}\n                                        >\n                                            Update\n                                        </Button>\n                                        <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                            onClick={() => { window.history.back(); }}\n                                        >\n                                            Cancel\n                                        </Button>\n                                        {isSubmitting && <LinearProgress />}\n                                    </Form>\n                                )}\n                            />\n                        </Box>\n                    </Paper>\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClientDetail);\n","import React from 'react';\nimport Picky from 'react-picky';\nimport 'react-picky/dist/picky.css';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress\n} from '@material-ui/core';\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n});\n\nclass NewStaff extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            staffList: [],\n            arrayValue: []\n        };\n        this.selectMultipleOption = this.selectMultipleOption.bind(this);\n    }\n\n    selectMultipleOption(value) {\n        this.setState({ arrayValue: value });\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await fetchAPI('GET', 'staffMgt/workingStaff');\n            this.setState({ staffList: response });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <AppLayout title=\"New Category\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            Service Category\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n                    <Formik\n                        initialValues={{ name: '' }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.name) { errors.name = 'Please enter category name' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting, setErrors }) => {\n                            try {\n\n                                const respObj = await fetchAPI('POST', 'serviceMgt/category', values);\n\n                                if (respObj && respObj.ok) {\n                                    window.history.back();\n                                } else {\n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"name\" label=\"Category Name\"\n                                />\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Create\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(NewStaff);","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Grid\n} from '@material-ui/core';\n\nimport MUIDataTable from \"mui-datatables\";\nimport Swal from 'sweetalert2';\nimport { fetchAPI } from '../../utils';\nimport AppLayout from '../../Component/Layout/Layout'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n});\n\nconst columns = [\n    {\n        name: \"client.displayName\",\n        label: \"Customer Name\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        name: \"paymentType\",\n        label: \"Payment Method\",\n        options: {\n            filter: true,\n            sort: true,\n        }\n    },\n    {\n        name: \"discount\",\n        label: \"Discount\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        name: \"addon\",\n        label: \"Add-ons\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        name: \"total\",\n        label: \"Total\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        name: \"createdAt\",\n        label: \"Date\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    }\n];\n\nclass Invoice extends React.Component {\n\n\n    state = {\n        invoiceList: [],\n        displayServiceList: []\n    };\n\n    getMuiTheme = () => createMuiTheme({\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: \"100px\"\n                },\n            }\n        }\n    })\n\n    async componentDidMount() {\n        try {\n            let invoiceList = await fetchAPI('GET', 'invoiceMgt/invoicelist');\n            invoiceList.map(invoice => {\n                invoice.createdAt = new Date(invoice.createdAt).toLocaleDateString()\n            })\n            this.setState({\n                invoiceList: invoiceList\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleRowClick = async (rowMeta) => {\n        let invoice = await fetchAPI('GET', `invoiceMgt/invoice/${this.state.invoiceList[rowMeta.dataIndex]._id}`)\n        const { history } = this.props;\n        history.push({\n            pathname: \"/invoice/detail\",\n            state: {\n                invoice: invoice\n            }\n        });\n    }\n\n    async handleRowDelete(rowsDeleted) {\n        try {\n            const deleteObjList = rowsDeleted.map((row) => {\n                return this.state.invoiceList[row.dataIndex]\n            });\n            const response = await fetchAPI('DELETE', 'invoiceMgt/invoice', deleteObjList);\n            if (response && response.ok) {\n                Swal.fire({\n                    type: 'success', text: response.ok,\n                    title: \"Success!\"\n                })\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: response.error\n                })\n            }\n        }\n        catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"Invoice\" {...this.props} >\n                <Grid container justify=\"flex-end\" spacing={32} >\n                    <Grid item xs={12}>\n                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                            <MUIDataTable\n                                title=\"Service List\"\n                                data={this.state.invoiceList}\n                                columns={columns}\n                                options={{\n                                    onRowClick: (rowData, rowMeta) => {\n                                        this.handleRowClick(rowMeta);\n                                    },\n                                    onRowsDelete: rowsDeleted => {\n                                        this.handleRowDelete(rowsDeleted.data);\n                                    },\n                                    filterType: 'checkbox',\n                                }}\n                            />\n                        </MuiThemeProvider>\n                    </Grid>\n                </Grid>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(Invoice);\n","import React from 'react';\nimport {\n    Grid, TextField, Paper, ListItem,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n    listitem: {\n        margin: theme.spacing(1),\n        width: '100%'\n    },\n});\n\nclass Invoice extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            // <Paper className={classes.paperMargin}>\n            <ListItem >\n                <Grid\n                    container\n                    direction=\"column\">\n                    <Grid item>\n                        <Grid\n                            container\n                            justify=\"space-between\"\n                            direction=\"row\">\n                            <h3><strong>{this.props.booking.service.name}</strong></h3>\n                            <h3><strong>S${this.props.booking.service.price}</strong></h3>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <light>{new Date(this.props.booking.start).toTimeString().split(' ')[0]} with {this.props.booking.staff.displayName} </light>\n                    </Grid>\n                </Grid>\n            </ListItem>\n            // </Paper>\n        )\n    }\n}\nexport default withStyles(styles)(Invoice);","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Grid, TextField, Paper, ListItem, Button, Divider, List, IconButton, AppBar, Toolbar, Typography, Container\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport Swal from 'sweetalert2';\nimport Invoice from '../../Component/Invoice/Invoice'\nimport { fetchAPI } from '../../utils';\n\nconst styles = theme => ({\n    checkoutBtn: {\n        marginTop: 5,\n        marginBottom: 5,\n        width: \"22%\",\n        minHeight: 100,\n    },\n    titleBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    paperMargin: {\n        margin: theme.spacing(1),\n        minWidth: 800,\n        maxWidth: 800\n    },\n});\n\nclass InvoiceDetail extends React.Component {\n\n    state = {\n        bookingList: [],\n        client: null,\n        total: null,\n        subtotal: null,\n        addon: null,\n        discount: null,\n        remark: \"\",\n        isCheckout: false,\n        createdAt: null,\n        paymentType: null,\n    }\n\n    async componentDidMount() {\n        try {\n            if (this.props.location.state.appointment) {\n                let appointment = this.props.location.state.appointment\n                let subtotal = 0\n                appointment.bookings.map(booking => {\n                    subtotal += parseFloat(booking.service.price)\n                })\n                this.setState({\n                    bookingList: appointment.bookings,\n                    client: appointment.bookings[0].client,\n                    subtotal: subtotal,\n                    total: subtotal,\n                    isCheckout: appointment.checkout,\n                })\n            } else {\n                let invoice = this.props.location.state.invoice\n                this.setState({\n                    bookingList: invoice.appointment.bookings,\n                    client: invoice.client.displayName,\n                    subtotal: invoice.subtotal,\n                    total: invoice.total,\n                    addon: invoice.addon,\n                    discount: invoice.discount,\n                    paymentType: invoice.paymentType,\n                    isCheckout: true,\n                    createdAt: invoice.createdAt\n                })\n            }\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleChange = (event, type) => {\n        if (type !== \"remark\") {\n            this.setState({\n                ...this.state, [type]: Math.abs(parseFloat(event.target.value)),\n            });\n            this.setState((prevState, props) => {\n                return { total: prevState.subtotal + prevState.addon - prevState.discount }\n            })\n        } else {\n            this.setState({ ...this.state, [type]: event.target.value });\n        }\n    };\n\n\n    handleConfirmCheckout = (type) => {\n        Swal.fire({\n            type: 'info',\n            title: \"Confirm to check out ?\",\n            animation: false,\n            showCancelButton: true,\n            cancelButtonColor: '#d33',\n            confirmButtonColor: '#08a325',\n            confirmButtonText: 'Confirm',\n            reverseButtons: true,\n            preConfirm: () => {\n                let values = {\n                    subtotal: this.state.subtotal,\n                    client: this.state.client._id,\n                    discount: this.state.discount ? this.state.discount : 0,\n                    addon: this.state.addon ? this.state.addon : 0,\n                    total: this.state.total,\n                    remark: this.state.remark,\n                    paymentType: type,\n                    appointment: this.state.bookingList[0].appointment,\n                }\n                if (type === \"Credit\") {\n                    fetchAPI('POST', `invoiceMgt/useCredit/${this.state.client._id}`, { total: this.state.total, bookings: this.state.bookingList }).then(respObj => {\n                        if (respObj && respObj.ok) {\n                            this.checkout(values)\n                        } else {\n                            Swal.fire({\n                                type: 'error',\n                                title: \"Opps... Something Wrong...\",\n                                text: respObj.error\n                            })\n                        }\n                    }).catch(error => {\n                        Swal.fire({\n                            type: 'error',\n                            title: \"Opps... Something Wrong...\",\n                            text: error\n                        })\n                    })\n                } else {\n                    this.checkout(values)\n                }\n\n            }\n\n        })\n    }\n\n    checkout = (values) => {\n        fetchAPI('POST', `invoiceMgt/invoice`, values).then(respObj => {\n            if (respObj && respObj.ok) {\n                let invoice = respObj.invoice\n                this.setState({\n                    bookingList: invoice.appointment.bookings,\n                    client: invoice.client.displayName,\n                    subtotal: invoice.subtotal,\n                    total: invoice.total,\n                    addon: invoice.addon,\n                    discount: invoice.discount,\n                    isCheckout: true,\n                    createdAt: invoice.createdAt\n                })\n                Swal.fire({\n                    type: 'success', text: respObj.ok,\n                    title: \"Success!\"\n                })\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        })\n    }\n\n    handleClose = () => {\n        window.history.back()\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <AppBar className={classes.titleBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            {this.state.isCheckout ? \"Invoice\" : \"Checkout\"}\n                        </Typography>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Grid\n                    container\n                    direction=\"column\"\n                    alignItems=\"center\">\n                    <Paper className={classes.paperMargin}>\n                        {\n                            this.state.bookingList.map(booking => {\n                                return <Invoice booking={booking}> </Invoice>\n                            })\n                        }\n                    </Paper>\n                    <Paper style={{ marginTop: 10 }}>\n                        <ListItem style={{ width: 800 }}>\n                            <Grid\n                                container\n                                justify=\"space-between\"\n                                direction=\"row\">\n                                {this.state.isCheckout ? null :\n                                    <React.Fragment>\n                                        <TextField variant=\"outlined\" margin=\"normal\" type=\"number\" label=\"Discount\" value={this.state.discount}\n                                            onChange={(event) => this.handleChange(event, 'discount')} ></TextField>\n                                        <TextField variant=\"outlined\" margin=\"normal\" type=\"number\" label=\"Add-on\" value={this.state.addon}\n                                            onChange={(event) => this.handleChange(event, 'addon')} ></TextField>\n                                        <TextField variant=\"outlined\" margin=\"normal\" label=\"Remark\" value={this.state.remark}\n                                            onChange={(event) => this.handleChange(event, 'remark')}></TextField>\n                                    </React.Fragment>\n                                }\n                                <Grid\n                                    container\n                                    alignItems=\"flex-end\"\n                                    direction=\"column\">\n                                    <Grid item>\n                                        <List style={{ minWidth: 350 }}>\n                                            <ListItem>\n                                                <Typography>\n                                                    <strong> Customer Name : {this.state.client ? this.state.client.displayName : null} </strong>\n                                                </Typography>\n                                            </ListItem>\n                                            <ListItem>\n                                                <Grid\n                                                    container\n                                                    justify=\"space-between\"\n                                                    direction=\"row\">\n                                                    <div>Subtotal</div>\n                                                    <div>${this.state.subtotal}</div>\n                                                </Grid>\n                                            </ListItem>\n                                            <Divider />\n                                            <ListItem>\n                                                <Grid\n                                                    container\n                                                    justify=\"space-between\"\n                                                    direction=\"row\">\n                                                    <div>Discount</div>\n                                                    <div>${this.state.discount ? this.state.discount : 0}</div>\n                                                </Grid>\n                                            </ListItem>\n                                            <ListItem>\n                                                <Grid\n                                                    container\n                                                    justify=\"space-between\"\n                                                    direction=\"row\">\n                                                    <div>Add-on</div>\n                                                    <div>${this.state.addon ? this.state.addon : 0}</div>\n                                                </Grid>\n                                            </ListItem>\n                                            <Divider />\n                                            <ListItem>\n                                                <Grid\n                                                    container\n                                                    justify=\"space-between\"\n                                                    direction=\"row\">\n                                                    <div>Total</div>\n                                                    <div>${this.state.total}</div>\n                                                </Grid>\n                                            </ListItem>\n                                            {this.state.isCheckout ?\n                                                <React.Fragment>\n                                                    <ListItem>\n                                                        <Grid\n                                                            container\n                                                            justify=\"space-between\"\n                                                            direction=\"row\">\n                                                            <div>Payment Method</div>\n                                                            <div>{this.state.paymentType}</div>\n                                                        </Grid>\n                                                    </ListItem>\n                                                    <ListItem>\n                                                        <Grid\n                                                            container\n                                                            justify=\"space-between\"\n                                                            direction=\"row\">\n                                                            <div>Date</div>\n                                                            <div>{new Date(this.state.createdAt).toLocaleString()}</div>\n                                                        </Grid>\n                                                    </ListItem>\n                                                </React.Fragment> : null\n                                            }\n                                        </List>\n                                    </Grid>\n                                </Grid>\n                                {\n                                    this.state.isCheckout ?\n                                        null :\n                                        <Grid\n                                            container\n                                            justify=\"space-evenly\"\n                                            direction=\"row\">\n                                            <Button className={classes.checkoutBtn} variant=\"contained\" color=\"primary\" onClick={() => this.handleConfirmCheckout(\"Credit\")}>\n                                                Credit\n                                            </Button>\n                                            <Button className={classes.checkoutBtn} variant=\"contained\" color=\"primary\" onClick={() => this.handleConfirmCheckout(\"Cash\")}>\n                                                Cash\n                                            </Button>\n                                            <Button className={classes.checkoutBtn} variant=\"contained\" color=\"primary\" onClick={() => this.handleConfirmCheckout(\"Card\")}>\n                                                Card\n                                            </Button>\n                                            <Button className={classes.checkoutBtn} variant=\"contained\" color=\"primary\" onClick={() => this.handleConfirmCheckout(\"Others\")}>\n                                                Others\n                                            </Button>\n                                        </Grid>\n                                }\n                            </Grid>\n                        </ListItem>\n                    </Paper>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(InvoiceDetail);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Typography, Fab, Hidden\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nimport AppLayout from '../Component/Layout/Layout'\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nclass Message extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppLayout title=\"Message\" {...this.props} >\n        <Typography component=\"div\"  >\n          <h3>\n            Hello World, i'm Message\n      </h3>\n        </Typography>\n        <Hidden mdUp>\n          <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n            <AddIcon />\n          </Fab>\n        </Hidden>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Message);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Typography, Fab, Hidden\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nimport AppLayout from '../Component/Layout/Layout'\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nclass Report extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppLayout title=\"Report\" {...this.props} >\n        <Typography component=\"div\"  >\n          <h3>\n            Hello World, i'm Report\n      </h3>\n        </Typography>\n        <Hidden mdUp>\n          <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n            <AddIcon />\n          </Fab>\n        </Hidden>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Report);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Typography, Fab, Hidden\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nimport AppLayout from '../Component/Layout/Layout'\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nclass Setting extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppLayout title=\"Setting\" {...this.props} >\n        <Typography component=\"div\"  >\n          <h3>\n            Hello World, i'm Setting\n      </h3>\n        </Typography>\n        <Hidden mdUp>\n          <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n            <AddIcon />\n          </Fab>\n        </Hidden>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Setting);\n","import React from 'react';\nimport { Animated } from \"react-animated-css\";\nimport { Paper, IconButton, Button, Typography } from '@material-ui/core';\nimport { Home as HomeIcon } from '@material-ui/icons';\nimport Swal from 'sweetalert2';\nimport BackGroundImage from '../../../images/kiosk_bg.png';\n\nconst HomeButton = (props) => {\n    if (!props.homePage) {\n        return (\n            <IconButton onClick={() => { props.history.push('/start'); }} color=\"primary\" style={{ position: 'fixed', top: 50, left: 50 }}>\n                <HomeIcon style={{ height: 50, width: 50 }} />\n            </IconButton>\n        )\n    } else {\n        return null;\n    }\n}\n\nconst SkipButton = (props) => {\n    if (props.skip) {\n        return (\n            <Button onClick={() => {\n                props.history.push('/start');\n                Swal.fire({\n                    type: 'success', text: \"Register Success\",\n                    title: \"Success!\"\n                })\n            }} color=\"primary\" style={{ position: 'fixed', fontSize: 30, right: 50, top: 50 }}>\n                Skip\n            </Button>\n        )\n    } else {\n        return null;\n    }\n}\n\nconst WelcomeMessage = (props) => {\n    if (props.displayName) {\n        return (\n            <Typography style={{ fontSize: 50, position: 'fixed', top: props.imageWidth + props.imagePadding }} color=\"primary\">\n                Welcome {props.displayName}\n            </Typography>\n        );\n    }\n    else {\n        return null;\n    }\n}\n\n\n\nconst KioskLayout = (props) => {\n    return (\n        <div>\n            <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n                <Paper style={{ zIndex: -1, display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"100vh\", backgroundImage: `url(${BackGroundImage})` }}>\n                    <img src={require('../../../images/logo.png')} alt=\"\" style={{ width: props.imageWidth, position: 'fixed', top: props.imagePadding }} />\n                    <WelcomeMessage {...props} displayName={props.displayName} />\n                    <HomeButton {...props} homePage={props.homePage} />\n                    <SkipButton {...props} skip={props.skip} />\n                    {props.children}\n                </Paper>\n            </Animated>\n        </div>\n    )\n}\n\nexport default KioskLayout;\n","import React from 'react';\nimport { Animated } from \"react-animated-css\";\nimport { ButtonBase, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { removeToken, removeLocalStorage, removeClient } from '../../utils';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport Swal from 'sweetalert2'\nimport LoginImage from '../../images/login.png';\nimport RegisterImage from '../../images/register.png';\n\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    container: {\n        display: 'flex',\n    },\n    paper: {\n        margin: theme.spacing(1),\n    },\n    svg: {\n        width: 100,\n        height: 100,\n    },\n    polygon: {\n        fill: theme.palette.common.white,\n        stroke: theme.palette.divider,\n        strokeWidth: 1,\n    },\n    button: {\n        height: \"10%\",\n        width: \"20%\",\n    },\n    image: {\n        position: 'relative',\n        height: 200,\n        [theme.breakpoints.down('xs')]: {\n            width: '100% !important', // Overrides inline-style\n            height: '100% !important', // Overrides inline-style\n        },\n        '&:hover, &$focusVisible': {\n            zIndex: 1,\n            '& $imageBackdrop': {\n                opacity: 0.15,\n            },\n            '& $imageMarked': {\n                opacity: 0,\n            },\n            '& $imageTitle': {\n                border: '4px solid currentColor',\n            },\n        },\n    },\n    imageSrc: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center 40%',\n    },\n});\n\nclass FacialLogin extends React.Component {\n\n    componentDidMount() {\n        try {\n            removeLocalStorage(\"userid\");\n            removeToken();\n            removeClient();\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleRegisterClick = () => {\n        const { history } = this.props;\n        setTimeout(function () {\n            history.push('/register');\n        }, 500);\n    }\n\n    handleFacialLoginClick = () => {\n        const { history } = this.props;\n        setTimeout(function () {\n            history.push('/mobilelogin');\n        }, 500);\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <KioskLayout {...this.props} imageWidth={320} imagePadding={50} homePage={true} >\n                <Grid\n                    container\n                    spacing={5}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <Animated animationInDelay={500} animationIn=\"bounceInLeft\" animationOut=\"fadeOut\" >\n                            <ButtonBase\n                                focusRipple\n                                className={classes.image}\n                                focusVisibleClassName={classes.focusVisible}\n                                style={{\n                                    width: 300,\n                                    height: 360,\n                                }}\n                                onClick={this.handleRegisterClick}\n                            >\n                                <span\n                                    className={classes.imageSrc}\n                                    style={{\n                                        backgroundImage: `url(${RegisterImage})`,\n                                    }}\n                                />\n                            </ButtonBase>\n                        </Animated>\n                    </Grid>\n                    <Grid item>\n                        <Animated animationInDelay={500} animationIn=\"bounceInRight\" animationOut=\"fadeOut\">\n                            <ButtonBase\n                                focusRipple\n                                className={classes.image}\n                                focusVisibleClassName={classes.focusVisible}\n                                style={{\n                                    width: 300,\n                                    height: 360,\n                                }}\n                                onClick={this.handleFacialLoginClick}\n                            >\n                                <span\n                                    className={classes.imageSrc}\n                                    style={{\n                                        backgroundImage: `url(${LoginImage})`,\n                                    }}\n                                />\n                            </ButtonBase>\n                        </Animated>\n                    </Grid>\n                </Grid>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(FacialLogin);\n","import React from 'react';\nimport { Animated } from \"react-animated-css\";\nimport {\n    Button, Grid, Typography,\n    InputLabel, FormControl, Select, Input, MenuItem,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fetchAPI, getClient } from '../../../utils';\nimport Swal from 'sweetalert2';\n\nconst fontSize = 40;\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    submit: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    cancel: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 500,\n    },\n    bold: {\n        margin: theme.spacing(1),\n        fontWeight: 500,\n    },\n});\n\nclass SelectService extends React.Component {\n\n    state = {\n        selectedServiceData: '',\n        selectedService: '',\n        selectedServiceCategory: '',\n        selectedStaff: '',\n        serviceList: [],\n        staffList: [],\n        displayName: '',\n        categoryList: [],\n        paddingTop: 10,\n    };\n\n    async componentWillMount() {\n        try {\n            const categoryList = await fetchAPI('GET', 'kioskMgt/category')\n            this.setState({\n                categoryList: categoryList\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleSelectStaffChange = (event) => {\n        this.setState({\n            selectedStaff: event.target.value,\n            paddingTop: 200\n        });\n    };\n\n    handleSelectServiceCategoryChange = async (event) => {\n        const serviceList = await fetchAPI('GET', `kioskMgt/availableservice/${event.target.value}`)\n        this.setState({\n            serviceList: serviceList,\n            selectedServiceCategory: event.target.value,\n            selectedService: ''\n        });\n    };\n\n    handleSelectServiceChange = (event, child) => {\n        this.setState({ selectedStaff: '' });\n        let index = child.props.id;\n        let start = new Date();\n        let end = new Date(start.getTime() + parseInt(this.state.selectedServiceData.duration) * 60000)\n        let values = {\n            ...this.state.serviceList[index],\n            start: start,\n            end: end,\n        }\n        fetchAPI('POST', 'kioskMgt/availablestaff', values).then(staffAvailable => {\n            if (staffAvailable.length === 0) {\n                staffAvailable = [\n                    {\n                        displayName: \"No Staff Available\"\n                    }\n                ]\n            }\n            this.setState({\n                selectedServiceData: this.state.serviceList[index],\n                selectedService: event.target.value,\n                staffList: staffAvailable\n            });\n        });\n    };\n\n    submit() {\n        let client = getClient()\n        let data = {}\n        data.total = this.state.selectedServiceData.price;\n        data.service = this.state.selectedServiceData.name\n        fetchAPI('POST', `kioskMgt/useCredit/${client._id}`, data).then(service => {\n            if (service.ok) {\n                let start = new Date();\n                let end = new Date(start.getTime() + parseInt(this.state.selectedServiceData.duration) * 60000)\n                let values = [{\n                    category: this.state.selectedServiceCategory,\n                    client: client._id,\n                    service: this.state.selectedService,\n                    start: start,\n                    end: end,\n                    staff: this.state.selectedStaff,\n                }]\n                fetchAPI('POST', 'kioskMgt/appointment', values).then(respObj => {\n                    if (respObj && respObj.ok) {\n                        let values = {\n                            subtotal: data.total,\n                            client: client._id,\n                            discount: 0,\n                            addon: 0,\n                            total: data.total,\n                            remark: '',\n                            paymentType: \"Credit\",\n                            appointment: respObj.appointmentId\n                        }\n                        this.checkout(values);\n                    } else {\n                        Swal.fire({\n                            type: 'error',\n                            title: \"Opps... Something Wrong...\",\n                            text: respObj.error,\n                            animation: false,\n                            customClass: {\n                                popup: 'animated tada'\n                            },\n                            preConfirm: () => {\n                                return this.props.history.push('/start')\n                            }\n                        })\n                    }\n                })\n            } else if (service.error) {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: service.error,\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    preConfirm: () => {\n                        return this.props.history.push('/start')\n                    }\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        });\n    }\n\n    checkout = (values) => {\n        fetchAPI('POST', `kioskMgt/invoice`, values).then(respObj => {\n            if (respObj && respObj.ok) {\n                Swal.fire({\n                    type: 'success',\n                    title: \"Please process to the waiting area!\",\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    allowOutsideClick: false,\n                    preConfirm: () => {\n                        return this.props.history.push('/start')\n                    }\n                })\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        let serviceDiv =\n            <FormControl className={classes.formControl} fullWidth >\n                <InputLabel htmlFor=\"age-native-simple\" style={{ fontSize: fontSize }}>Service Type</InputLabel>\n                <Select\n                    style={{ fontSize: fontSize, height: 100 }}\n                    value={this.state.selectedService}\n                    onChange={this.handleSelectServiceChange}\n                    input={<Input id=\"age-native-simple\" style={{ fontSize: fontSize }} />}\n                >\n                    {this.state.serviceList.map((service, i) => (\n                        <MenuItem id={i} value={service._id} style={{ fontSize: fontSize }}>\n                            {service.name}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n        let serviceInfoDiv =\n            <Animated key=\"serviceInfoDiv\" animationIn=\"fadeIn\" animationOut=\"fadeOut\" >\n                <FormControl className={classes.formControl} fullWidth>\n                    <InputLabel htmlFor=\"age-native-simple\" style={{ fontSize: fontSize }} >Staff Name</InputLabel>\n                    <Select\n                        style={{ fontSize: fontSize, height: 100 }}\n                        value={this.state.selectedStaff}\n                        onChange={this.handleSelectStaffChange}\n                        input={<Input id=\"age-native-simple\" style={{ fontSize: fontSize }} />}\n                    >\n                        {this.state.staffList.map(staff => (\n                            <MenuItem value={staff._id} style={{ fontSize: fontSize }}>\n                                {staff.displayName}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <Typography variant=\"h3\" className={classes.bold}> Price: ${this.state.selectedServiceData.price}</Typography>\n                <Typography variant=\"h3\" className={classes.bold}> Duration: {this.state.selectedServiceData.duration} mins</Typography>\n            </Animated>\n\n\n        let confirmDiv = <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\" key=\"confirmDiv\" >\n            <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                style={{ fontSize: fontSize }} onClick={() => this.submit()}\n            >\n                Confirm\n                </Button>\n            <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                onClick={() => { this.props.history.push('/start'); }} style={{ fontSize: fontSize }}\n            >\n                Cancel\n                </Button>\n        </Animated>\n\n        return (\n            <div style={{ display: \"block\", paddingTop: this.state.paddingTop }} >\n                <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\" animationInDelay={500} >\n                    <form >\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={12}>\n                                <FormControl className={classes.formControl} fullWidth >\n                                    <InputLabel htmlFor=\"age-native-simple\" style={{ fontSize: fontSize }}>Service Category</InputLabel>\n                                    <Select\n                                        style={{ fontSize: fontSize, height: 100 }}\n                                        value={this.state.selectedServiceCategory}\n                                        onChange={this.handleSelectServiceCategoryChange}\n                                        input={<Input id=\"age-native-simple\" style={{ fontSize: fontSize }} />}\n                                    >\n                                        {this.state.categoryList.map((category, i) => (\n                                            <MenuItem id={i} value={category._id} style={{ fontSize: fontSize }}>\n                                                {category.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item>\n                                {this.state.selectedServiceCategory ? serviceDiv : null}\n                            </Grid>\n                            <Grid item >\n                                {this.state.selectedService ? serviceInfoDiv : null}\n                            </Grid>\n                            <Grid item >\n                                {(this.state.selectedStaff && this.state.selectedService) ? confirmDiv : null}\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Animated>\n            </div >\n        )\n    }\n}\nexport default withStyles(styles)(SelectService);","import React from 'react';\nimport {\n    Button, Typography,\n} from '@material-ui/core';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport SelectService from '../../Component/Kiosk/Checkout/Checkout'\nimport { withStyles } from '@material-ui/styles';\nimport * as faceapi from 'face-api.js';\nimport Webcam from 'react-webcam';\nimport { fetchAPI, setToken, setClient } from '../../utils';\nimport Swal from 'sweetalert2';\n\nconst axios = require('axios');\nconst uriBase = 'https://spa-fr.cognitiveservices.azure.com/face/v1.0';\nconst subscriptionKey = '5463be0170e742d98bf5b3606727fbdb';\nconst STORAGE_URL = 'https://projectspa.blob.core.windows.net/spacontainer';\nconst MODEL_URL = '/models'\n\nlet faceBox = { detected: false, topLeftX: 0, topLeftY: 0, bottomRightX: 0, bottomRightY: 0 };\n\nconst videoConstraints = {\n    width: 800,\n    height: 600,\n    facingMode: 'user',\n};\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    submit: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    cancel: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    bold: {\n        margin: theme.spacing(3),\n        fontWeight: 500,\n    },\n});\n\nclass FacialLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            takingPicture: true,\n            timerOn: false,\n            timerTime: 3000,\n            displayName: '',\n            login: false,\n        }\n        this.webcam = React.createRef();\n        this.canvas = React.createRef();\n    }\n\n    componentDidMount() {\n        faceapi.loadFaceDetectionModel(MODEL_URL)\n            .then(() => faceapi.loadTinyFaceDetectorModel(MODEL_URL)\n                .then(() => {\n                    setTimeout(() => this.startDetection(), 1000);\n                })).catch(error => {\n                    Swal.fire({\n                        type: 'error',\n                        title: \"Opps... Something Wrong...\",\n                        text: error\n                    })\n                })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n        });\n        this.timer = setInterval(() => {\n            const newTime = this.state.timerTime - 1000;\n            if (newTime >= 0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({ timerOn: false });\n            }\n        }, 1000);\n    };\n\n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false, timerTime: 3000 });\n    };\n\n    getTL(v) {\n        v -= 70;\n        return ((v <= 0) ? 0 : v);\n    }\n    getBR(v, x) {\n        v += 70;\n        if (x) { return ((v > 640) ? 640 : v) }\n        else { return ((v > 480) ? 480 : v) }\n    }\n\n    faceAPIVerify(faceId, personId) {\n        const fullUrl = `${uriBase}/verify`\n\n        const options = {\n            method: 'POST',\n            url: fullUrl,\n            data: {\n                personGroupId: \"1\",\n                faceId: faceId,\n                personId: personId,\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n        };\n        axios(options).then(response => {\n            if (response.error) {\n                this.setState({ takingPicture: true });\n                Swal.fire({\n                    type: 'error',\n                    title: 'Oops...',\n                    text: 'Authendication fail!',\n                    showCancelButton: true,\n                    confirmButtonText: 'Re-try!',\n                    cancelButtonText: 'No, cancel!',\n                    reverseButtons: true,\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n                // return setTimeout(() => this.startDetection(), 500);\n            }\n            console.log(\"Verify:\")\n            console.log(response.data)\n            if (response.data.isIdentical) {\n                this.faceAPIGetPersonId(personId);\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: 'Oops...',\n                    text: 'Authendication fail!',\n                    showCancelButton: true,\n                    confirmButtonText: 'Re-try!',\n                    cancelButtonText: 'No, cancel!',\n                    reverseButtons: true,\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n            }\n        }).catch(error => {\n            console.log('Error: ', error);\n        });\n    }\n\n    faceAPIGetPersonId(personId) {\n        const fullUrl = `${uriBase}/persongroups/1/persons/${personId}`\n\n        const options = {\n            method: 'GET',\n            url: fullUrl,\n            headers: {\n                'Content-Type': 'application/json',\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n        };\n        axios(options).then(response => {\n            fetchAPI('GET', `kioskMgt/faciallogin/${response.data.name}`).then(respObj => {\n                if (respObj && respObj.ok) {\n                    console.log(\"Client: \")\n                    console.log(respObj)\n                    setToken(respObj.token);\n                    setClient(respObj.user);\n                    this.setState({\n                        displayName: respObj.user.displayName,\n                        login: true,\n                    })\n                } else {\n                    Swal.fire({\n                        type: 'error', text: 'Please try again.',\n                        title: \"Authentication fail!\",\n                        preConfirm: () => {\n                            return setTimeout(() => this.startDetection(), 500);\n                        }\n                    })\n                }\n            })\n        }).catch(error => {\n            console.log(error)\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: \"Authentication fail!\",\n                preConfirm: () => {\n                    return setTimeout(() => this.startDetection(), 500);\n                }\n            })\n        });\n    }\n\n    faceAPIIdentify(faceIdData) {\n        let faceIds = [];\n        for (let i = 0; i < faceIdData.length; i++) {\n            faceIds.push(faceIdData[i].faceId)\n        }\n        const fullUrl = `${uriBase}/identify`\n\n        const options = {\n            method: 'POST',\n            url: fullUrl,\n            data: {\n                personGroupId: \"1\",\n                faceIds: faceIds,\n                maxNumOfCandidatesReturned: 1,\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n        };\n        axios(options).then(response => {\n            if (response.error) {\n                this.setState({ takingPicture: true });\n                Swal.fire({\n                    type: 'error',\n                    title: 'Oops...',\n                    text: 'Authendication fail!',\n                    showCancelButton: true,\n                    confirmButtonText: 'Re-try!',\n                    cancelButtonText: 'No, cancel!',\n                    reverseButtons: true,\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n                // return setTimeout(() => this.startDetection(), 500);\n            }\n            console.log(\"Identify: \")\n            console.log(response.data)\n            if (response.data[0].candidates[0]) {\n                this.faceAPIVerify(response.data[0].faceId, response.data[0].candidates[0].personId)\n            } else {\n                Swal.fire({\n                    type: 'error', text: 'Please try again.',\n                    title: \"Authentication fail!\",\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n\n            }\n        }).catch(error => {\n            console.log('Error: ', error);\n        });\n    }\n\n    faceAPIDetect(imageUrl) {\n        const fullUrl = `${uriBase}/detect?returnFaceId=true`\n        const options = {\n            method: 'POST',\n            url: fullUrl,\n            data: { url: imageUrl },\n            headers: {\n                'Content-Type': 'application/json',\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n        };\n\n        axios(options).then(response => {\n            console.log(\"Detect: \")\n            console.log(response.data)\n            this.faceAPIIdentify(response.data);\n        }).catch(error => {\n            console.log('Error: ', error);\n        });\n    }\n\n    startDetection = () => {\n        try {\n            const { timerTime, timerOn } = this.state;\n            const canvas = document.getElementById('videoOverlay')\n            let video = this.webcam.current;\n            if (video && canvas && video.getCanvas()) {\n                video = video.getCanvas();\n                let inputSize = 512\n                let scoreThreshold = 0.5\n                faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions({ inputSize, scoreThreshold })).then((result) => {\n                    if (result) {\n                        if (!timerOn) {\n                            this.setState({ timerTime: 3000 });\n                            this.startTimer();\n                        }\n                        canvas.width = video.width;\n                        canvas.height = video.height;\n                        canvas.style.display = \"\";\n                        const dims = faceapi.matchDimensions(canvas, video, true)\n                        faceapi.draw.drawDetections(canvas, faceapi.resizeResults(result, dims))\n                        if (timerTime <= 0 && timerOn) {\n                            if (result.box) {\n                                let box = result.box;\n                                faceBox.detected = true;\n                                faceBox.topLeftX = this.getTL(box.x);\n                                faceBox.topLeftY = this.getTL(box.y);\n                                faceBox.bottomRightX = this.getBR((box.x + box.width), true);\n                                faceBox.bottomRightY = this.getBR((box.y + box.height), false);\n                            }\n                            canvas.getContext('2d').drawImage(video, 0, 0);\n                            this.capture(canvas.toDataURL('image/jpeg', 0.5))\n                            return;\n                        }\n                        return setTimeout(() => this.startDetection(), 300);\n                    } else {\n                        this.stopTimer();\n                        canvas.style.display = \"none\"\n                        return setTimeout(() => this.startDetection(), 300);\n                    }\n                });\n            }\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    capture = async (imageUrl) => {\n        try {\n            let data = {};\n            data.imagebase64 = imageUrl;\n            data.id = \"auth\";\n            const respObj = await fetchAPI('POST', 'kioskMgt/savephoto', data);\n            if (respObj && respObj.ok) {\n                this.faceAPIDetect(`${STORAGE_URL}/${data.id}.jpg`);\n            } else {\n                Swal.fire({\n                    type: 'error', text: 'Please try again.',\n                    title: \"Authentication fail!\",\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n            }\n        } catch (error) {\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: \"Authentication fail!\",\n                preConfirm: () => {\n                    return setTimeout(() => this.startDetection(), 500);\n                }\n            })\n        }\n    };\n\n    render() {\n        let displayText;\n        if (this.state.timerOn) {\n            displayText = `Identifying, please keep still`\n        } else {\n            displayText = `Face not detected, adjust your position...`\n        }\n\n        return (\n            <KioskLayout {...this.props} imageWidth={200} imagePadding={40} displayName={this.state.displayName}>\n                <div style={{ flexDirection: 'column', alignItems: 'center', display: 'flex' }}>\n                    {!this.state.login ?\n                        <div style={{ flexDirection: 'column', alignItems: 'center', display: 'flex' }} >\n                            <div style={{ height: 480, width: 600, alignItems: 'center' }}>\n                                <Webcam\n                                    style={{ position: 'absolute', zIndex: 1 }}\n                                    audio={false}\n                                    height={480}\n                                    ref={this.webcam}\n                                    screenshotFormat=\"image/jpeg\"\n                                    width={600}\n                                    videoConstraints={videoConstraints}\n                                />\n                                <canvas id='videoOverlay' ref={this.canvas} style={{ height: 480, width: 600, position: 'relative', zIndex: 2 }} />\n                            </div>\n                            <div>\n                                <Typography style={{ fontSize: 30, fontWeight: 500 }} align=\"center\" color=\"primary\" >\n                                    {displayText}\n                                </Typography>\n                            </div>\n                            <Button onClick={() => { this.props.history.push('/mobilelogin'); }} variant=\"outlined\" color=\"primary\" style={{ top: 30, fontSize: 30 }}>\n                                Login By Mobile\n                        </Button>\n                        </div> : null\n                    }\n                    {this.state.login ?\n                        <SelectService {...this.props} />\n                        : null\n                    }\n                </div>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(FacialLogin);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Button, Typography, Dialog, DialogContent, Slide, TextField,\n} from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport Keyboard from \"react-simple-keyboard\";\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport { fetchAPI, setClient, setToken } from '../../utils';\n\nconst mainFontSize = 35;\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    login: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    cancel: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    bold: {\n        margin: theme.spacing(3),\n        fontWeight: 500,\n    },\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass MobileLogin extends React.Component {\n    state = {\n        layoutName: \"default\",\n        input: {},\n        inputName: \"mobile\",\n        keyboardOpen: false,\n    };\n\n    onChangeAll = inputObj => {\n        this.setState({\n            input: inputObj\n        });\n    };\n\n    onKeyPress = button => {\n        if (button === \"{enter}\") {\n            this.setState({\n                keyboardOpen: false\n            });\n        } else if (button === \"{clear}\") {\n            this.clearScreen();\n        }\n    };\n\n    onChangeInput = event => {\n        let inputVal = event.target.value;\n\n        let updatedInputObj = {\n            ...this.state.input,\n            [this.state.inputName]: inputVal\n        };\n\n        this.setState(\n            {\n                input: updatedInputObj\n            },\n            () => {\n                this.keyboard.setInput(inputVal);\n            }\n        );\n    };\n\n    setActiveInput = () => {\n        this.setState(\n            {\n                keyboardOpen: true\n            },\n        );\n    };\n\n    handleKeyboardClose = () => {\n        this.setState({ keyboardOpen: false });\n    }\n\n    login = async () => {\n        const { input } = this.state;\n\n        if (!input.mobile) {\n            Swal.fire({\n                type: 'error', text: 'Please enter mobile number',\n                title: \"Error\"\n            })\n            return;\n        } else if (input.mobile.length < 8) {\n            Swal.fire({\n                type: 'error', text: 'Mobile must be 8 digit',\n                title: \"Error\"\n            })\n            return;\n        }\n        fetchAPI('GET', `kioskMgt/mobilelogin/${input.mobile}`).then(respObj => {\n            if (respObj && respObj.ok) {\n                setToken(respObj.token);\n                setClient(respObj.user);\n                this.props.history.push('/clientdetails');\n            } else {\n                Swal.fire({\n                    type: 'error', text: 'Please try again.',\n                    title: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: error\n            })\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { input } = this.state;\n\n\n        return (\n            <KioskLayout {...this.props} imageWidth={200} imagePadding={10} displayName={this.state.displayName}>\n\n                <div style={{ flexDirection: 'column', alignItems: 'center', display: 'flex' }} >\n                    <div style={{ display: \"block\" }} >\n                        <Typography style={{ fontSize: 50, }} color=\"primary\">\n                            Login\n                            </Typography>\n                        <form style={{ flexDirection: 'column', alignItems: 'center', display: 'flex', minWidth: 600 }}>\n                            <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                                InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                                variant=\"outlined\" margin=\"normal\" fullWidth\n                                name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                onClick={this.setActiveInput}\n                                value={input[\"mobile\"] || \"\"}\n                                onChange={e => this.onChangeInput(e)}\n                            />\n                            <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.login}\n                                style={{ fontSize: mainFontSize }} onClick={this.login}\n                            >\n                                Login\n                        </Button>\n                        </form>\n                    </div>\n                </div>\n                <Dialog\n                    fullWidth\n                    maxWidth=\"xl\"\n                    style={{ fontSize: mainFontSize }}\n                    open={this.state.keyboardOpen}\n                    onEnter={() => {\n                        //clear the display value when open\n                        var value = this.refs.displayValue;\n                        value.children[0].children[0].value = '';\n                    }}\n                    onClose={this.handleKeyboardClose}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogContent>\n                        <div>\n                            <TextField fullWidth InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                                ref=\"displayValue\" value={input[this.state.inputName]} placeholder={\"Tap to start\"} onChange={e => this.onChangeAll(e)} />\n                            <Keyboard\n                                keyboardRef={r => (this.keyboard = r)}\n                                inputName={this.state.inputName}\n                                layoutName={this.state.layoutName}\n                                onChangeAll={inputObj => this.onChangeAll(inputObj)}\n                                onKeyPress={button => this.onKeyPress(button)}\n                                theme={\"hg-theme-default hg-layout-default myTheme\"}\n                                layout={{\n                                    default: [\"1 2 3\", \"4 5 6\", \"7 8 9\", \"{bksp} 0 {enter}\"],\n                                }}\n                                display={{\n                                    '{bksp}': 'Bksp',\n                                    '{enter}': 'Enter',\n                                }}\n                            />\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(MobileLogin);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, Container, Dialog, DialogContent, Slide, TextField\n} from '@material-ui/core';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport { fetchAPI, setClient } from '../../utils';\nimport Swal from 'sweetalert2';\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    DatePicker,\n    MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nconst mainFontSize = 35;\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nconst genderOptions = [\n    { value: \"M\", label: 'M' },\n    { value: \"F\", label: 'F' },\n];\n\nclass Register extends React.Component {\n    state = {\n        layoutName: \"default\",\n        inputName: \"mobile\",\n        input: {},\n        submittedData: \"\",\n        gender: genderOptions[0],\n        keyboardOpen: false,\n        selectedDate: null,\n    };\n\n    handleGenderSelection = (gender) => {\n        this.setState({ gender });\n    }\n\n    onChangeAll = inputObj => {\n        this.setState({\n            input: inputObj\n        });\n    };\n\n    onKeyPress = button => {\n        if (button === \"{enter}\") {\n            this.setState({\n                keyboardOpen: false\n            });\n        } else if (button === \"{clear}\") {\n            this.clearScreen();\n        } else if (button === \"{shift}\") {\n            this.handleShift();\n        }\n    };\n\n    handleShift = () => {\n        let layoutName = this.state.layoutName;\n\n        this.setState({\n            layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n        });\n    };\n\n    clearScreen = () => {\n        let input = { ...this.state.input };\n        let inputName = this.state.inputName;\n        input[inputName] = \"\";\n\n        this.setState({ input }, () => {\n            this.keyboard.clearInput(inputName);\n        });\n    };\n\n    onChangeInput = event => {\n        let inputVal = event.target.value;\n\n        let updatedInputObj = {\n            ...this.state.input,\n            [this.state.inputName]: inputVal\n        };\n\n        this.setState(\n            {\n                input: updatedInputObj\n            },\n            () => {\n                this.keyboard.setInput(inputVal);\n            }\n        );\n    };\n\n    setActiveInput = inputName => {\n        if (inputName === 'mobile') {\n            this.setState({ layoutName: \"mobile\" })\n        } else {\n            this.setState({ layoutName: \"default\" })\n        }\n        var value = this.refs.displayValue;\n        // Disable password for register\n        // if (inputName === 'password' || inputName === 'confirmPassoword') {\n        //     value.children[0].children[0].type = 'password';\n        // } else {\n        value.children[0].children[0].type = 'text';\n        // }\n        this.setState(\n            {\n                inputName: inputName,\n                keyboardOpen: true\n            },\n        );\n    };\n\n    handleKeyboardClose = () => {\n        this.setState({ keyboardOpen: false });\n    }\n\n    submit = async () => {\n        const { input, gender } = this.state;\n        input.gender = gender.value;\n\n        if (!input.mobile) {\n            Swal.fire({\n                type: 'error', text: 'Please enter mobile number',\n                title: \"Error\"\n            })\n            return;\n        } else if (input.mobile.length < 8) {\n            Swal.fire({\n                type: 'error', text: 'Mobile must be 8 digit',\n                title: \"Error\"\n            })\n            return;\n        }\n        // Disable password for register\n        // else if (!input.password) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Please enter a password',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        // else if (!input.confirmPassoword) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Please enter a password',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        // else if (input.confirmPassoword !== input.password) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Password does not match',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        else if (!input.displayName) {\n            Swal.fire({\n                type: 'error', text: 'Please enter display name',\n                title: \"Error\"\n            })\n            return;\n        }\n        else if (!input.nric) {\n            Swal.fire({\n                type: 'error', text: 'Please enter NRIC',\n                title: \"Error\"\n            })\n            return;\n        }\n        try {\n            fetchAPI('POST', 'kioskMgt/clients', this.state.input).then(respObj => {\n                if (respObj && respObj.ok) {\n                    // disable for camera\n                    // setClient(respObj.user._id);\n                    // this.props.history.push('/snapshot');\n                    Swal.fire({\n                        type: 'success',\n                        title: \"Register Success!\",\n                        animation: false,\n                        customClass: {\n                            popup: 'animated tada'\n                        },\n                        preConfirm: () => {\n                            return this.props.history.push('/start')\n                        },\n                    })\n                } else {\n                    Swal.fire({\n                        type: 'error', text: 'Please try again.',\n                        title: respObj.error\n                    })\n                }\n            });\n        } catch (err) {\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: err.message\n            })\n        }\n    };\n\n    handleDateChange = (value) => {\n        this.setState({ selectedDate: value })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { input } = this.state;\n        return (\n            <KioskLayout {...this.props} imageWidth={160} imagePadding={10}>\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography style={{ fontSize: 50, }} color=\"primary\">\n                        New Client Onboard\n                            </Typography>\n                    <form>\n                        <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"mobile\" label=\"Mobile\" type=\"number\"\n                            onClick={() => this.setActiveInput(\"mobile\")}\n                            value={input[\"mobile\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        />\n\n                        {// Disable password for register\n                        /* <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"password\" label=\"Password\" type=\"password\"\n                            onClick={() => this.setActiveInput(\"password\")}\n                            value={input[\"password\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        /> */}\n                        {/* <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                            onClick={() => this.setActiveInput(\"confirmPassoword\")}\n                            value={input[\"confirmPassoword\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        /> */}\n                        <TextField style={{ backgroundColor: \"#f2f1ed\", fontSize: \"30px\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"displayName\" label=\"Display Name\"\n                            onClick={() => this.setActiveInput(\"displayName\")}\n                            value={input[\"displayName\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        />\n                        <TextField style={{ backgroundColor: \"#f2f1ed\", fontSize: \"30px\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"email\" label=\"Email\"\n                            onClick={() => this.setActiveInput(\"email\")}\n                            value={input[\"email\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        />\n                        <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"nric\" label=\"NRIC\"\n                            onClick={() => this.setActiveInput(\"nric\")}\n                            value={input[\"nric\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        />\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <DatePicker\n                                autoOk\n                                disableFuture\n                                disableToolbar\n                                openTo=\"year\"\n                                format=\"dd/MM/yyyy\"\n                                label=\"Date of birth\"\n                                views={[\"year\", \"month\", \"date\"]}\n                                style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                                InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ shrink: true, style: { fontSize: mainFontSize } }}\n                                fullWidth\n                                margin=\"normal\"\n                                inputVariant=\"outlined\"\n                                variant=\"outlined\"\n                                value={this.state.selectedDate} onChange={this.handleDateChange} />\n                        </MuiPickersUtilsProvider>\n                        <Typography variant='h3' color='primary' gutterBottom>\n                            Gender\n                                </Typography>\n                        <Select className={classes.select}\n                            onChange={this.handleGenderSelection}\n                            options={genderOptions}\n                            value={this.state.gender}\n                            styles={{\n                                control: base => ({\n                                    ...base,\n                                    fontSize: mainFontSize,\n                                }),\n                                menu: base => ({\n                                    ...base,\n                                    fontSize: mainFontSize,\n                                })\n                            }}\n                        />\n\n                        <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                            style={{ fontSize: mainFontSize }} onClick={this.submit}\n                        >\n                            Register\n                                </Button>\n                        <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                            onClick={() => { window.history.back(); }} style={{ fontSize: mainFontSize }}\n                        >\n                            Cancel\n                                </Button>\n                    </form>\n                </Container>\n                <Dialog\n                    fullWidth\n                    maxWidth=\"xl\"\n                    style={{ fontSize: mainFontSize }}\n                    open={this.state.keyboardOpen}\n                    onEnter={() => {\n                        //clear the display value when open\n                        var value = this.refs.displayValue;\n                        value.children[0].children[0].value = '';\n                    }}\n                    onClose={this.handleKeyboardClose}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogContent>\n                        <div>\n                            <TextField InputProps={{ style: { fontSize: 30 } }} fullWidth\n                                ref=\"displayValue\" value={input[this.state.inputName]} placeholder={\"Tap to start\"} onChange={e => this.onChangeAll(e)} />\n                            <Keyboard\n                                keyboardRef={r => (this.keyboard = r)}\n                                inputName={this.state.inputName}\n                                layoutName={this.state.layoutName}\n                                onChangeAll={inputObj => this.onChangeAll(inputObj)}\n                                onKeyPress={button => this.onKeyPress(button)}\n                                theme={\"hg-theme-default hg-layout-default myTheme\"}\n                                layout={{\n                                    'default': [\n                                        '` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\n                                        'q w e r t y u i o p [ ] \\\\',\n                                        'a s d f g h j k l ; \\' {enter}',\n                                        'z x c v b n m , . / {shift}',\n                                        '.com @ {space}'\n                                    ],\n                                    'shift': [\n                                        '~ ! @ # $ % ^ & * ( ) _ + {bksp}',\n                                        'Q W E R T Y U I O P { } |',\n                                        'A S D F G H J K L : \" {enter}',\n                                        'Z X C V B N M < > ? {shift}',\n                                        '{space}'\n                                    ],\n                                    mobile: [\"1 2 3\", \"4 5 6\", \"7 8 9\", \"{bksp} 0 {enter}\"],\n                                }}\n                                display={{\n                                    '{bksp}': 'Bksp',\n                                    '{enter}': 'Enter',\n                                    '{shift}': 'Shift',\n                                    '{space}': ' '\n                                }}\n                            />\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(Register);\n","\nconst axios = require('axios');\nconst uriBase = 'https://spa-fr.cognitiveservices.azure.com/face/v1.0';\nconst subscriptionKey = '5463be0170e742d98bf5b3606727fbdb';\n\nexport const faceAPITrainStatus = () => {\n    const fullUrl = `${uriBase}/persongroups/1/training`\n    const options = {\n        method: 'GET',\n        url: fullUrl,\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        console.log(response.data);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}\n\nexport const faceAPITrain = () => {\n    const fullUrl = `${uriBase}/persongroups/1/train`\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        console.log(response.data);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}\n\nexport const faceAPIAddFace = (personId, imageUrl) => {\n    const fullUrl = `${uriBase}/persongroups/1/persons/${personId}/persistedFaces`\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        data: { url: imageUrl },\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        // response.data;\n        faceAPITrain();\n        console.log(response.data);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}\n\nexport const faceAPIAddPerson = (imageUrl, userid) => {\n    const fullUrl = `${uriBase}/persongroups/1/persons`\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        data: { name: userid },\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        faceAPIAddFace(response.data.personId, imageUrl)\n        console.log(response.data.personId);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}\n\nexport const faceAPIIdentify = (faceIdData) => {\n    let faceIds = [];\n    for (let i = 0; i < faceIdData.length; i++) {\n        faceIds.push(faceIdData[i].faceId)\n    }\n    const fullUrl = `${uriBase}/identify`\n\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        data: {\n            personGroupId: \"1\",\n            faceIds: faceIds,\n            maxNumOfCandidatesReturned: 1,\n        },\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n    axios(options).then(response => {\n        console.log(response);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n\n}\n\nexport const faceAPIDetect = (imageUrl) => {\n    const fullUrl = `${uriBase}/detect?returnFaceId=true`\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        data: { url: imageUrl },\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        console.log(response.data);\n        faceAPIIdentify(response.data);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}","import React from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport * as faceapi from 'face-api.js';\nimport Webcam from 'react-webcam';\nimport { fetchAPI, getClient, removeClient } from '../../utils';\nimport { faceAPIAddPerson } from './faceAPI';\nimport Swal from 'sweetalert2';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\n\nconst STORAGE_URL = 'https://projectspa.blob.core.windows.net/spacontainer';\nconst MODEL_URL = '/models'\n\nlet faceBox = { detected: false, topLeftX: 0, topLeftY: 0, bottomRightX: 0, bottomRightY: 0 };\n\nconst videoConstraints = {\n    width: 800,\n    height: 600,\n    facingMode: 'user',\n};\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    submit: {\n        margin: theme.spacing(5),\n    },\n});\n\nclass Snapshot extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            takingPicture: true,\n            timerOn: false,\n            timerTime: 3000,\n            imageUrl: '',\n        }\n        this.webcam = React.createRef();\n        this.canvas = React.createRef();\n        this.canvasPicWebCam = React.createRef();\n    }\n\n    startTimer = () => {\n        console.log(\"Start timer\")\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n        });\n        this.timer = setInterval(() => {\n            console.log(\"in interval\")\n            const newTime = this.state.timerTime - 1000;\n            if (newTime >= 0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({ timerOn: false });\n            }\n        }, 1000);\n    };\n\n    stopTimer = () => {\n        console.log(\"stopTimer\")\n        clearInterval(this.timer);\n        this.setState({ timerOn: false, timerTime: 3000 });\n    };\n\n    componentDidMount() {\n        faceapi.loadFaceDetectionModel(MODEL_URL)\n            .then(() => faceapi.loadTinyFaceDetectorModel(MODEL_URL)\n                .then(() => {\n                    setTimeout(() => this.startDetection(), 1000);\n                })).catch(error => {\n                    Swal.fire({\n                        type: 'error',\n                        title: \"Opps... Something Wrong...\",\n                        text: error\n                    })\n                });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    getTL(v) {\n        v -= 70;\n        return ((v <= 0) ? 0 : v);\n    }\n    getBR(v, x) {\n        v += 70;\n        if (x) { return ((v > 640) ? 640 : v) }\n        else { return ((v > 480) ? 480 : v) }\n    }\n\n\n\n    startDetection = () => {\n        try {\n            const { timerTime, timerOn } = this.state;\n            const canvas = document.getElementById('videoOverlay')\n            let video = this.webcam.current;\n            if (video && canvas && video.getCanvas()) {\n                video = video.getCanvas();\n                let inputSize = 512\n                let scoreThreshold = 0.5\n                faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions({ inputSize, scoreThreshold })).then((result) => {\n                    if (result) {\n                        if (!timerOn) {\n                            this.setState({ timerTime: 3000 });\n                            this.startTimer();\n                        }\n                        console.log(timerTime)\n                        console.log(\"Result:  \" + result);\n                        canvas.width = video.width;\n                        canvas.height = video.height;\n                        canvas.style.display = \"\";\n                        const dims = faceapi.matchDimensions(canvas, video, true)\n                        faceapi.draw.drawDetections(canvas, faceapi.resizeResults(result, dims))\n                        if (timerTime <= 0 && timerOn) {\n                            if (result.box) {\n                                let box = result.box;\n                                faceBox.detected = true;\n                                faceBox.topLeftX = this.getTL(box.x);\n                                faceBox.topLeftY = this.getTL(box.y);\n                                faceBox.bottomRightX = this.getBR((box.x + box.width), true);\n                                faceBox.bottomRightY = this.getBR((box.y + box.height), false);\n                            }\n                            canvas.getContext('2d').drawImage(video, 0, 0);\n                            this.capture(canvas.toDataURL('image/jpeg', 0.5))\n                            return;\n                        }\n                        return setTimeout(() => this.startDetection(), 300);\n                    } else {\n                        console.log(\"not detected\")\n                        this.stopTimer();\n                        canvas.style.display = \"none\"\n                        return setTimeout(() => this.startDetection(), 300);\n                    }\n                });\n            }\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    capture = async (imageUrl) => {\n        try {\n\n            console.log(\"capture\")\n            this.setState({ takingPicture: false })\n            const taking = document.getElementById('photoTaking')\n            const showing = document.getElementById('photoShowing')\n            taking.style.display = 'none';\n            showing.style.display = 'block';\n            var photoCanvas = document.getElementById('showPhoto')\n            var photoctx = photoCanvas.getContext(\"2d\");\n            var img = new Image();\n            img.onload = async () => {\n                photoctx.drawImage(img, 0, 0, photoCanvas.width, photoCanvas.height);\n            };\n            img.src = imageUrl;\n            this.setState({ imageUrl: imageUrl })\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    retakePhoto() {\n        console.log(\"retake\")\n        this.setState({ takingPicture: true });\n        const taking = document.getElementById('photoTaking')\n        const showing = document.getElementById('photoShowing')\n        taking.style.display = 'block';\n        showing.style.display = 'none'\n        this.startDetection();\n    }\n\n    createUser() {\n        const userid = getClient();\n        let data = {\n            imagebase64: this.state.imageUrl,\n            id: userid\n        };\n        fetchAPI('POST', 'kioskMgt/savephoto', data).then(respObj => {\n            if (respObj && respObj.ok) {\n                faceAPIAddPerson(`${STORAGE_URL}/${data.id}.jpg`, data.id);\n                removeClient();\n                this.props.history.push('/start')\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        let displayText, button;\n        if (this.state.timerOn) {\n            displayText = `Keep still photo will be taken in ${this.state.timerTime / 1000}`\n        } else {\n            displayText = `Face not detected, adjust your position...`\n        }\n        if (this.state.takingPicture) {\n            button = (\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                    style={{ display: 'block', fontSize: 40 }} onClick={() => {\n                        this.setState({ takingPicture: false })\n                        // this.capture();\n                        this.props.history.push('/snapshotmanual');\n                    }}\n                >\n                    Manual Mode\n                </Button>\n            );\n        } else {\n            button = [\n                <Button key=\"btnRetake\" variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                    style={{ display: 'block', fontSize: 40 }} onClick={() => this.retakePhoto()}\n                >\n                    Retake A Snapshot\n                </Button>,\n                <Button key=\"btnDone\" variant=\"contained\" color=\"primary\" fullWidth\n                    style={{ display: 'block', fontSize: 40 }} onClick={() => this.createUser()}\n                >\n                    Done\n                </Button>\n            ]\n        }\n\n        return (\n            <KioskLayout {...this.props} imageWidth={320} imagePadding={40} skip={true}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <div id=\"photoTaking\" >\n                        <div style={{ height: 480, width: 600, alignItems: 'center' }}>\n                            <Webcam\n                                style={{ position: 'absolute', zIndex: 1 }}\n                                audio={false}\n                                height={480}\n                                ref={this.webcam}\n                                screenshotFormat=\"image/jpeg\"\n                                width={600}\n                                videoConstraints={videoConstraints}\n                            />\n                            <canvas id='videoOverlay' ref={this.canvas} style={{ height: 480, width: 600, position: 'relative', zIndex: 2 }} />\n                        </div>\n                        <div>\n                            <Typography style={{ fontSize: 30 }} align=\"center\" color=\"primary\" >\n                                {displayText}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div id=\"photoShowing\" style={{ display: \"none\" }}>\n                        <canvas id='showPhoto' style={{ height: 480, width: 600 }} />\n                    </div>\n                    {button}\n                </div>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(Snapshot);\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Webcam from 'react-webcam';\nimport Swal from 'sweetalert2';\nimport { faceAPIAddPerson } from './faceAPI';\nimport { fetchAPI, getClient, removeClient } from '../../utils';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\n\nconst STORAGE_URL = 'https://projectspa.blob.core.windows.net/spacontainer';\n\nconst videoConstraints = {\n    width: 800,\n    height: 600,\n    facingMode: 'user',\n};\n\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    submit: {\n        margin: theme.spacing(5),\n    },\n});\n\nclass FacialLogin extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: '',\n            takingPicture: true,\n        }\n        this.webcam = React.createRef();\n        this.canvasPicWebCam = React.createRef();\n    }\n\n    capture = () => {\n        this.setState({ takingPicture: false })\n        const imageUrl = this.webcam.current.getScreenshot();\n        const ctx = this.canvasPicWebCam.current.getContext(\"2d\");\n        var image = new Image();\n\n        image.onload = async () => {\n            ctx.drawImage(image, 0, 0);\n        };\n        image.src = imageUrl;\n        this.setState({ imageUrl: imageUrl })\n    };\n\n    createUser() {\n        const userid = getClient();\n        let data = {\n            imagebase64: this.state.imageUrl,\n            id: userid\n        };\n        fetchAPI('POST', 'kioskMgt/savephoto', data).then(respObj => {\n            if (respObj && respObj.ok) {\n                faceAPIAddPerson(`${STORAGE_URL}/${data.id}.jpg`, data.id);\n                removeClient();\n                this.props.history.push('/start')\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        let showCanvas, showWebcam, button;\n        if (this.state.takingPicture) {\n            showWebcam = { display: 'block' }\n            showCanvas = { display: 'none' }\n        } else {\n            showWebcam = { display: 'none' }\n            showCanvas = { display: 'block' }\n        }\n\n        if (this.state.takingPicture) {\n            button = [\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                    style={{ display: 'block', fontSize: 40 }} onClick={() => {\n                        this.setState({ takingPicture: false })\n                        // this.capture();\n                        this.props.history.push('/snapshot');\n                    }}\n                >\n                    Auto Mode\n                </Button>,\n                <Button variant=\"contained\" color=\"primary\" fullWidth\n                    style={{ display: 'block', fontSize: 40 }} onClick={this.capture}\n                >\n                    Take A Snapshot\n            </Button>\n            ]\n\n        } else {\n            button = [\n                <Button key=\"btnRetake\" variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                    style={{ display: 'block', fontSize: 40, paddingTop: 10 }} onClick={() => this.setState({ takingPicture: true })}\n                >\n                    Retake A Snapshot\n                </Button>,\n                <Button key=\"btnDone\" variant=\"contained\" color=\"primary\" fullWidth\n                    style={{ display: 'block', fontSize: 40, paddingTop: 10 }} onClick={() => this.createUser()}\n                >\n                    Done\n                </Button>\n            ]\n        }\n        return (\n            <KioskLayout {...this.props} imageWidth={320} imagePadding={40} skip={true}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <Webcam\n                        style={showWebcam}\n                        audio={false}\n                        height={480}\n                        ref={this.webcam}\n                        screenshotFormat=\"image/jpg\"\n                        width={600}\n                        videoConstraints={videoConstraints}\n                    />\n                    <canvas ref={this.canvasPicWebCam} width={600} height={480} style={showCanvas} />\n                    {button}\n                </div>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(FacialLogin);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Button, Typography, Dialog, DialogContent, Slide, TextField,\n} from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport Keyboard from \"react-simple-keyboard\";\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport SelectService from '../../Component/Kiosk/Checkout/Checkout'\nimport { fetchAPI, setClient, setToken, getClient } from '../../utils';\n\nconst mainFontSize = 35;\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    login: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    cancel: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    bold: {\n        margin: theme.spacing(3),\n        fontWeight: 500,\n    },\n});\n\nclass Appointment extends React.Component {\n    state = {\n        input: {},\n    };\n\n    componentDidMount() {\n        try {\n            let user = getClient();\n            this.setState({ displayName: user.displayName })\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    onChangeInput = event => {\n        let inputVal = event.target.value;\n\n        let updatedInputObj = {\n            ...this.state.input,\n            [this.state.inputName]: inputVal\n        };\n\n        this.setState(\n            {\n                input: updatedInputObj\n            },\n            () => {\n                this.keyboard.setInput(inputVal);\n            }\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { input } = this.state;\n\n        return (\n            <KioskLayout {...this.props} imageWidth={200} imagePadding={10} displayName={this.state.displayName}>\n\n                <div style={{ flexDirection: 'column', alignItems: 'center', display: 'flex' }} >\n                    <SelectService {...this.props} />\n                </div>\n\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(Appointment);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, Container, Dialog, DialogContent, Slide, TextField\n} from '@material-ui/core';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport { fetchAPI, getClient } from '../../utils';\nimport Swal from 'sweetalert2';\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { green } from '@material-ui/core/colors';\nimport {\n    DatePicker,\n    MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nconst mainFontSize = 35;\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nconst genderOptions = [\n    { value: \"M\", label: 'M' },\n    { value: \"F\", label: 'F' },\n];\n\nclass ClientDetails extends React.Component {\n    state = {\n        layoutName: \"default\",\n        inputName: null,\n        input: {},\n        submittedData: \"\",\n        gender: genderOptions[0],\n        keyboardOpen: false,\n        selectedDate: null,\n        edit: true\n    };\n\n    componentDidMount() {\n        try {\n            let client = getClient();\n            this.setState({\n                input: client,\n                displayName: client.displayName,\n                gender: { value: client.gender, label: client.gender },\n                selectedDate: client.birthday\n            })\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleGenderSelection = (gender) => {\n        this.setState({ gender });\n    }\n\n    onChangeInput = event => {\n        let inputVal = event.target.value;\n\n        let updatedInputObj = {\n            ...this.state.input,\n            [this.state.inputName]: inputVal\n        }\n\n        this.setState(\n            {\n                input: updatedInputObj\n            },\n            () => {\n                this.keyboard.setInput(inputVal);\n            }\n        );\n    };\n\n    onChangeAll = inputObj => {\n        let input = { ...this.state.input, ...inputObj }\n        this.setState({\n            input: input\n        });\n    };\n\n    onKeyPress = button => {\n        if (button === \"{enter}\") {\n            this.setState({\n                keyboardOpen: false\n            });\n        } else if (button === \"{clear}\") {\n            this.clearScreen();\n        } else if (button === \"{shift}\") {\n            this.handleShift();\n        }\n    };\n\n    handleShift = () => {\n        let layoutName = this.state.layoutName;\n\n        this.setState({\n            layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n        });\n    };\n\n    clearScreen = () => {\n        let input = { ...this.state.input };\n        let inputName = this.state.inputName;\n        input[inputName] = \"\";\n\n        this.setState({ input }, () => {\n            this.keyboard.clearInput(inputName);\n        });\n    };\n\n    setActiveInput = inputName => {\n        if (inputName === 'mobile') {\n            this.setState({ layoutName: \"mobile\" })\n        } else {\n            this.setState({ layoutName: \"default\" })\n        }\n        var value = this.refs.displayValue;\n        // Disable password for register\n        // if (inputName === 'password' || inputName === 'confirmPassoword') {\n        //     value.children[0].children[0].type = 'password';\n        // } else {\n        value.children[0].children[0].type = 'text';\n        // }\n        this.setState(\n            {\n                inputName: inputName,\n                keyboardOpen: true\n            },\n        );\n    };\n\n    handleKeyboardClose = () => {\n        this.setState({ keyboardOpen: false });\n    }\n\n    update = async () => {\n        const { input, gender } = this.state;\n        input.gender = gender.value;\n\n        if (!input.mobile) {\n            Swal.fire({\n                type: 'error', text: 'Please enter mobile number',\n                title: \"Error\"\n            })\n            return;\n        } else if (input.mobile.length < 8) {\n            Swal.fire({\n                type: 'error', text: 'Mobile must be 8 digit',\n                title: \"Error\"\n            })\n            return;\n        }\n        // Disable password for register\n        // else if (!input.password) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Please enter a password',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        // else if (!input.confirmPassoword) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Please enter a password',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        // else if (input.confirmPassoword !== input.password) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Password does not match',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        else if (!input.displayName) {\n            Swal.fire({\n                type: 'error', text: 'Please enter display name',\n                title: \"Error\"\n            })\n            return;\n        }\n        else if (!input.nric) {\n            Swal.fire({\n                type: 'error', text: 'Please enter NRIC',\n                title: \"Error\"\n            })\n            return;\n        }\n        try {\n            fetchAPI('PATCH', `kioskMgt/clients/${this.state.input._id}`, this.state.input).then(respObj => {\n                if (respObj && respObj.ok) {\n                    Swal.fire({\n                        type: 'success',\n                        title: \"Update Success!\",\n                        animation: false,\n                        customClass: {\n                            popup: 'animated tada'\n                        },\n                        preConfirm: () => {\n                            return this.props.history.push('/start')\n                        },\n                    })\n                } else {\n                    Swal.fire({\n                        type: 'error', text: 'Please try again.',\n                        title: respObj.error\n                    })\n                }\n            });\n        } catch (err) {\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: err.message\n            })\n        }\n    };\n\n    handleDateChange = (value) => {\n        this.setState({ selectedDate: value })\n    }\n\n    handleCancelClick = () => {\n        let client = getClient();\n\n        this.setState({\n            edit: true,\n            input: client\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { input, edit } = this.state;\n        return (\n            <KioskLayout {...this.props} imageWidth={130} imagePadding={10} displayName={this.state.displayName}>\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n\n                    <form>\n                        <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"mobile\" label=\"Mobile\" type=\"number\"\n                            onClick={edit ? null : () => this.setActiveInput(\"mobile\")}\n                            value={input[\"mobile\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        />\n\n                        {// Disable password for register\n                        /* <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"password\" label=\"Password\" type=\"password\"\n                            onClick={edit ? null : () => this.setActiveInput(\"password\")}\n                            value={input[\"password\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        /> */}\n                        {/* <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                            onClick={edit ? null : () => this.setActiveInput(\"confirmPassoword\")}\n                            value={input[\"confirmPassoword\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        /> */}\n                        <TextField style={{ backgroundColor: \"#f2f1ed\", fontSize: \"30px\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"displayName\" label=\"Display Name\"\n                            onClick={edit ? null : () => this.setActiveInput(\"displayName\")}\n                            value={input[\"displayName\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        />\n                        <TextField style={{ backgroundColor: \"#f2f1ed\", fontSize: \"30px\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"email\" label=\"Email\"\n                            onClick={edit ? null : () => this.setActiveInput(\"email\")}\n                            value={input[\"email\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        />\n                        <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"nric\" label=\"NRIC\"\n                            onClick={edit ? null : () => this.setActiveInput(\"nric\")}\n                            value={input[\"nric\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        />\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <DatePicker\n                                autoOk\n                                disableFuture\n                                disableToolbar\n                                openTo=\"year\"\n                                format=\"dd/MM/yyyy\"\n                                label=\"Date of birth\"\n                                views={[\"year\", \"month\", \"date\"]}\n                                style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                                InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ shrink: true, style: { fontSize: mainFontSize } }}\n                                fullWidth\n                                margin=\"normal\"\n                                inputVariant=\"outlined\"\n                                variant=\"outlined\"\n                                value={this.state.selectedDate} onChange={this.handleDateChange}\n                                disabled={edit} />\n                        </MuiPickersUtilsProvider>\n                        <Typography variant='h5' gutterBottom>\n                            Gender\n                                </Typography>\n                        <Select className={classes.select}\n                            onChange={this.handleGenderSelection}\n                            options={genderOptions}\n                            value={this.state.gender}\n                            styles={{\n                                control: base => ({\n                                    ...base,\n                                    fontSize: mainFontSize,\n                                }),\n                                menu: base => ({\n                                    ...base,\n                                    fontSize: mainFontSize,\n                                })\n                            }}\n                            isDisabled={edit}\n                        />\n                        <div style={{ textAlign: \"center\" }}>\n                            <Typography style={{ fontSize: 50, marginTop: 20 }} color=\"primary\">\n                                Credit: {this.state.input.credit}\n                            </Typography>\n                        </div>\n                        {this.state.edit ?\n                            <React.Fragment>\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    style={{ fontSize: mainFontSize }} onClick={() => this.setState({ edit: false })}\n                                >\n                                    Edit\n                            </Button>\n                                <ColorButton variant=\"contained\" fullWidth className={classes.cancel}\n                                    onClick={() => { this.props.history.push('/selectservice') }} style={{ fontSize: mainFontSize }}\n                                >\n                                    Check In\n                                </ColorButton>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    style={{ fontSize: mainFontSize }} onClick={this.update}\n                                >\n                                    Update\n                            </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    style={{ fontSize: mainFontSize }} onClick={this.handleCancelClick}\n                                >\n                                    Cancel\n                            </Button>\n                            </React.Fragment>\n                        }\n                    </form>\n                </Container>\n                <Dialog\n                    fullWidth\n                    maxWidth=\"xl\"\n                    style={{ fontSize: mainFontSize }}\n                    open={this.state.keyboardOpen}\n                    onEnter={() => {\n                        //clear the display value when open\n                        var value = this.refs.displayValue;\n                        value.children[0].children[0].value = input[this.state.inputName];\n                    }}\n                    onClose={this.handleKeyboardClose}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogContent>\n                        <div>\n                            <TextField InputProps={{ style: { fontSize: 30 } }} fullWidth\n                                ref=\"displayValue\" value={input[this.state.inputName]} placeholder={\"Tap to start\"} onChange={e => this.onChangeAll(e)} />\n                            <Keyboard\n                                keyboardRef={r => (this.keyboard = r)}\n                                inputName={this.state.inputName}\n                                layoutName={this.state.layoutName}\n                                onChangeAll={inputObj => this.onChangeAll(inputObj)}\n                                onKeyPress={button => this.onKeyPress(button)}\n                                theme={\"hg-theme-default hg-layout-default myTheme\"}\n                                layout={{\n                                    'default': [\n                                        '` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\n                                        'q w e r t y u i o p [ ] \\\\',\n                                        'a s d f g h j k l ; \\' {enter}',\n                                        'z x c v b n m , . / {shift}',\n                                        '.com @ {space}'\n                                    ],\n                                    'shift': [\n                                        '~ ! @ # $ % ^ & * ( ) _ + {bksp}',\n                                        'Q W E R T Y U I O P { } |',\n                                        'A S D F G H J K L : \" {enter}',\n                                        'Z X C V B N M < > ? {shift}',\n                                        '{space}'\n                                    ],\n                                    mobile: [\"1 2 3\", \"4 5 6\", \"7 8 9\", \"{bksp} 0 {enter}\"],\n                                }}\n                                display={{\n                                    '{bksp}': 'Bksp',\n                                    '{enter}': 'Enter',\n                                    '{shift}': 'Shift',\n                                    '{space}': ' '\n                                }}\n                            />\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </KioskLayout>\n        );\n    }\n}\n\nconst ColorButton = withStyles(theme => ({\n    root: {\n        color: theme.palette.getContrastText(green[600]),\n        backgroundColor: green[600],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n        marginTop: 30\n    },\n}))(Button);\n\nexport default withStyles(styles)(ClientDetails);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport 'typeface-roboto';\n\nimport { getUser } from './utils';\nimport Login from './Container/login';\nimport ErrorPage from './Container/error';\nimport Dashboard from './Container/dashboard';\n\nimport Appointment from './Container/Appointment/appointment';\n\nimport Client from './Container/Client/client';\nimport NewClient from './Container/Client/newClient';\nimport ClientDetail from './Container/Client/clientDetail';\nimport UpdateClient from './Container/Client/updateClient';\n\nimport Staff from './Container/Staff/staff';\nimport NewStaff from './Container/Staff/newStaff';\nimport StaffDetail from './Container/Staff/staffDetail';\n\nimport Service from './Container/Service/service';\nimport NewService from './Container/Service/newService';\nimport ServiceDetail from './Container/Service/serviceDetail';\nimport NewCategory from './Container/Service/newCategory'\n\nimport Invoice from './Container/Invoice/invoices'\nimport InvoiceDetail from './Container/Invoice/invoiceDetail'\n\nimport Message from './Container/message';\nimport Report from './Container/report';\nimport Setting from './Container/setting';\n\n//Kiosk\nimport Start from './Container/Kiosk/start';\nimport FacialLogin from './Container/Kiosk/facialLogin';\nimport MobileLogin from './Container/Kiosk/mobileLogin';\nimport Register from './Container/Kiosk/register';\nimport Snapshot from './Container/Kiosk/snapshot';\nimport SnapshotManual from './Container/Kiosk/snapshotManual';\nimport SelectService from './Container/Kiosk/selectservice';\nimport ClientDetails from './Container/Kiosk/clientDetails';\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                props.user = getUser();\n                if (props.user) { return <Component {...props} /> }\n                else { return <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} /> }\n            }}\n        />\n    );\n}\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#1976d2',\n        },\n        secondary: {\n            main: '#d32f2f',\n        },\n    }\n});\nfunction Routers() {\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Router basename={\"/spa\"}>\n                <Switch>\n                    <Route exact path=\"/start\" component={Start} />\n                    <Route exact path=\"/faciallogin\" component={FacialLogin} />\n                    <Route exact path=\"/mobilelogin\" component={MobileLogin} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/snapshot\" component={Snapshot} />\n                    <Route exact path=\"/snapshotmanual\" component={SnapshotManual} />\n                    <Route exact path=\"/clientdetails\" component={ClientDetails} />\n                    <Route exact path=\"/selectservice\" component={SelectService} />\n\n\n                    <Route path=\"/login\" component={Login} />\n                    <Route exact path=\"/\" component={Login} />\n                    <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n\n                    <PrivateRoute exact path=\"/appointment\" component={Appointment} />\n\n                    <PrivateRoute exact path=\"/message\" component={Message} />\n                    <PrivateRoute exact path=\"/report\" component={Report} />\n\n                    <PrivateRoute exact path=\"/client\" component={Client} />\n                    <PrivateRoute exact path=\"/client/new\" component={NewClient} />\n                    <PrivateRoute exact path=\"/client/detail\" component={ClientDetail} />\n                    <PrivateRoute exact path=\"/client/update\" component={UpdateClient} />\n\n                    <PrivateRoute exact path=\"/staff\" component={Staff} />\n                    <PrivateRoute exact path=\"/staff/new\" component={NewStaff} />\n                    <PrivateRoute exact path=\"/staff/detail\" component={StaffDetail} />\n\n                    <PrivateRoute exact path=\"/service\" component={Service} />\n                    <PrivateRoute exact path=\"/service/new\" component={NewService} />\n                    <PrivateRoute exact path=\"/service/detail\" component={ServiceDetail} />\n                    <PrivateRoute exact path=\"/service/newcategory\" component={NewCategory} />\n\n                    <PrivateRoute exact path=\"/invoice\" component={Invoice} />\n                    <PrivateRoute exact path=\"/invoice/detail\" component={InvoiceDetail} />\n\n                    <PrivateRoute exact path=\"/setting\" component={Setting} />\n\n                    <Route component={ErrorPage} />\n                </Switch>\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nReactDOM.render(<Routers />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.caf36d34.png\";","module.exports = __webpack_public_path__ + \"static/media/kiosk_bg.1a6fdb78.png\";","module.exports = __webpack_public_path__ + \"static/media/login.fc0b7b37.png\";","module.exports = __webpack_public_path__ + \"static/media/register.e228c75f.png\";"],"sourceRoot":""}