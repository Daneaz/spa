{"version":3,"sources":["serviceWorker.js","utils.js","Container/login.js","Container/error.js","Component/Layout/Layout.js","Container/dashboard.js","Component/BookingOverview/BookingOverview.js","Container/Appointment/appointment.js","Container/Client/client.js","Container/Client/newClient.js","Component/Invoice/AppointmentListView.js","Component/Invoice/InvoiceListView.js","Component/TabView/TabView.js","Container/Client/clientDetail.js","Container/Client/updateClient.js","Container/Staff/staff.js","Container/Staff/newStaff.js","Container/Staff/staffDetail.js","Container/Service/service.js","Container/Service/newService.js","Container/Service/serviceDetail.js","Container/Service/newCategory.js","Container/Invoice/invoices.js","Component/Invoice/Invoice.js","Container/Invoice/invoiceDetail.js","Container/message.js","Container/report.js","Container/setting.js","Component/Kiosk/KioskLayout/KioskLayout.js","Container/Kiosk/start.js","Component/Kiosk/Checkout/Checkout.js","Container/Kiosk/facialLogin.js","Container/Kiosk/mobileLogin.js","Container/Kiosk/register.js","Container/Kiosk/faceAPI.js","Container/Kiosk/snapshot.js","Container/Kiosk/snapshotManual.js","Container/Kiosk/selectservice.js","Container/Kiosk/clientDetails.js","index.js","images/logo.png","images/kiosk_bg.png","images/login.png","images/register.png"],"names":["Boolean","window","location","hostname","match","setLocalStorage","key","val","localStorage","setItem","getLocalStorage","getItem","removeLocalStorage","removeItem","removeToken","setToken","tokenStr","getToken","removeUser","removeClient","setClient","clientObj","JSON","stringify","getClient","parse","_unused","getUser","userObj","_id","username","displayName","role","_unused2","getAvatarLetter","fullText","textArr","trim","toUpperCase","split","letter","forEach","t","length","substr","getApiConf","method","jsonObj","conf","headers","Content-Type","token","body","fetchAPI","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","url","wrap","_context2","prev","next","abrupt","Promise","_ref2","_callee","resolve","reject","resp","respJson","_context","fetch","path","concat","process","startsWith","sent","json","status","document","href","error","statusText","t0","stop","_x4","_x5","apply","this","arguments","_x","_x2","_x3","Login","state","redirectToReferrer","_this2","classes","props","from","pathname","react_default","createElement","react_router","to","Container","component","maxWidth","CssBaseline","className","paper","Box","m","src","require","alt","style","width","Typography","variant","formik_esm","initialValues","password","validate","values","errors","onSubmit","_ref3","setSubmitting","setErrors","respObj","ok","user","setState","Swal","fire","type","text","title","render","_ref4","submitForm","isSubmitting","setFieldValue","TextField","margin","fullWidth","autoFocus","name","label","Button","color","submit","disabled","LinearProgress","React","Component","withRouter","withStyles","theme","@global","backgroundColor","palette","common","white","marginTop","spacing","display","flexDirection","alignItems","Error","noWrap","Link","NavMenu","toolbar","marginBottom","marginLeft","Divider","List","ListItem","ListItemAvatar","Avatar","menuAvatar","ListItemText","primary","secondary","email","activeClassName","activeListItem","listItem","NavLink","ListItemIcon","listItemIcon","esm_Dashboard","listItemText","CalendarToday","People","Work","Spa","Payment","esm_Message","BarChart","Settings","AccountMenu","_React$useState","useState","_React$useState2","slicedToArray","anchorEl","setAnchorEl","open","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","AccountCircle","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","history","push","AppLayout","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDrawerToggle","mobileOpen","root","AppBar","position","appBar","Toolbar","aria-label","edge","menuButton","esm_Menu","drawer","Hidden","smUp","implementation","Drawer","anchor","drawerPaper","ModalProps","xsDown","content","children","defineProperty","breakpoints","up","flexShrink","marginRight","flexGrow","height","mixins","padding","grey","& $listItemText","& $listItemIcon","cursor","&:hover","& + &","unit","fontWeight","Dashboard","bookingList","appointments","response","bookingsByStaff","Layout","assign","Paper","es6","data","top","right","left","bottom","dataKey","stroke","strokeDasharray","fill","extendedIcon","SelectService","paperMargin","Grid","container","direction","justify","item","xs","useUtils_cfb96ac9","utils","DateFnsUtils","TimePicker","ampm","minutesStep","autoOk","value","start","onChange","changeTime","KeyboardButtonProps","disable","FormControl","serviceControl","InputLabel","htmlFor","Select","category","changeCategory","input","Input","categoryList","map","i","service","changeService","serviceList","duration","price","staffControl","staff","changeStaff","staffList","removeBooking","Close_default","formControl","minWidth","localizer","momentLocalizer","moment","DragAndDropCalendar","withDragAndDrop","Calendar","Transition","forwardRef","ref","Slide","minTime","Date","setHours","maxTime","CalendarView","eventOpen","clientList","selectedClient","events","editFlag","fullStaffList","bookings","end","availableServiceList","serviceStaffList","checkout","handleSelectClientChange","selectedOption","handleConfirmBookings","_this$state","customClass","alert","newbookings","booking","client","submitUpdateBooking","submitNewBooking","handleEventClose","moveBooking","resourceId","idx","indexOf","updatedEvent","objectSpread","nextEvents","toConsumableArray","splice","handleUpdateBackendEvent","resizeBooking","existingEvent","newBooking","handleEditBooking","appointment","findIndex","deleteAppointment","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","_this$state2","_loop","handleAddBooking","handleRemoveBooking","index","handleChangeBooking","child","bookingIndex","_service","staffAvailable","_args2","undefined","find","getTime","target","handleCheckOut","handleInvoice","_callee3","invoice","_context3","navigateToCheckoutDetail","_callee4","_context4","options","mobile","_context5","resBookings","filterIds","filter","e","removedBooking","resBooking","appointmentId","catch","_this3","_this4","p","selectable","resizable","onEventDrop","onEventResize","onSelectSlot","onSelectEvent","defaultView","Views","DAY","views","defaultDate","step","timeslots","resources","resourceIdAccessor","resourceTitleAccessor","min","max","Dialog","fullScreen","TransitionComponent","titleBar","DialogContent","dividers","minHeight","BookingOverview","react_select_browser_esm","placeholder","isDisabled","Add_default","fontSize","ColorButton","Fragment","getContrastText","green","flexWrap","flex","zIndex","columns","sort","Client","handleAddClient","handleRowClick","rowMeta","dataIndex","birthday","getMonth","nric","s","substitute","substring","rowsDeleted","deleteObjList","row","dist_default","customToolbar","Tooltip","PersonAdd_default","onRowClick","rowData","onRowsDelete","handleRowDelete","filterType","fab","genderOptions","NewClient","gender","handleGenderSelection","handleChangeBirthday","back","confirmPassoword","InputLabelProps","shrink","select","cancel","InvoiceList","button","click","toLocaleString","total","getTotal","listitem","addon","discount","Appointment","AppointmentListView","Invoice","InvoiceListView","Record","creditRecord","amount","createdAt","services","TabPanel","other","objectWithoutProperties","hidden","aria-labelledby","a11yProps","TabView","handleChange","newValue","handleChangeIndex","_this$props","invoices","creditRecords","Tabs","indicatorColor","textColor","Tab","TabView_Appointment","TabView_Invoice","background","ClientDetail","addCreditDialog","credit","totalBookings","totalCompleted","totalSales","totalMiss","handleEditClick","addCreditValueChange","handleAddCreditOpen","handleAddCreditClose","handleAddCreditConfirm","statistics","creditRecordList","list","listAvatar","bigAvatar","labelColor","toLocaleDateString","ButtonGroup","Component_TabView_TabView","DialogTitle","DialogActions","justifyContent","listButton","UpdateClient","Staff","handleAddStaff","handleAddRole","userList","NewStaff","roleList","selectedLeaves","selectedOff","offDays","leaveOpen","offOpen","handleLeaveClickOpen","handleLeaveOpen","handleLeaveClose","handleOffClickOpen","handleOffOpen","handleOffClose","handleOffReset","selectedDate","selectedLeave","defaultMultipleDateInterpolation","disabledDays","day","getDay","leaveDays","es","withMultipleDates","selected","minDate","interpolateSelection","onSelect","handleLeaveSelection","Service","getMuiTheme","createMuiTheme","overrides","MUIDataTableBodyCell","handleAddService","handleAddCategory","displayServiceList","displayService","staffs","tempStaffs","slice","ThemeProvider","Category_default","handleChangeCategory","selectedCategory","arrayValue","selectMultipleOption","bind","assertThisInitialized","rawStaffList","react_picky_dist_default","numberDisplayed","valueKey","labelKey","multiple","includeSelectAll","includeFilter","dropdownHeight","invoiceList","toTimeString","InvoiceDetail","subtotal","remark","isCheckout","paymentType","Math","abs","parseFloat","prevState","handleConfirmCheckout","animation","reverseButtons","preConfirm","handleClose","Component_Invoice_Invoice","checkoutBtn","Message","mdUp","Fab","Report","Setting","HomeButton","homePage","Home","SkipButton","skip","WelcomeMessage","imageWidth","imagePadding","KioskLayout","react_animated_css_lib","animationIn","animationOut","backgroundImage","BackGroundImage","KioskLayout_WelcomeMessage","KioskLayout_HomeButton","KioskLayout_SkipButton","FacialLogin","handleRegisterClick","setTimeout","handleFacialLoginClick","Kiosk_KioskLayout_KioskLayout","animationInDelay","ButtonBase","focusRipple","image","focusVisibleClassName","focusVisible","imageSrc","RegisterImage","LoginImage","_image","svg","polygon","divider","strokeWidth","down","& $imageBackdrop","opacity","& $imageMarked","& $imageTitle","border","backgroundSize","backgroundPosition","selectedServiceData","selectedService","selectedServiceCategory","selectedStaff","paddingTop","handleSelectStaffChange","handleSelectServiceCategoryChange","handleSelectServiceChange","parseInt","popup","allowOutsideClick","serviceDiv","serviceInfoDiv","bold","confirmDiv","axios","uriBase","subscriptionKey","STORAGE_URL","faceBox","detected","topLeftX","topLeftY","bottomRightX","bottomRightY","videoConstraints","facingMode","startTimer","timerOn","timerTime","timer","setInterval","newTime","clearInterval","stopTimer","startDetection","canvas","getElementById","video","webcam","current","getCanvas","faceapi","inputSize","scoreThreshold","dims","drawDetections","box","getTL","x","y","getBR","getContext","drawImage","capture","toDataURL","console","log","imageUrl","imagebase64","faceAPIDetect","takingPicture","login","createRef","v","faceId","personId","fullUrl","personGroupId","Ocp-Apim-Subscription-Key","cancelButtonText","isIdentical","faceAPIGetPersonId","faceIdData","_this5","faceIds","maxNumOfCandidatesReturned","candidates","faceAPIVerify","_this6","faceAPIIdentify","displayText","_this7","react_webcam_default","audio","screenshotFormat","align","Checkout","MobileLogin","layoutName","inputName","keyboardOpen","onChangeAll","inputObj","onKeyPress","clearScreen","onChangeInput","inputVal","updatedInputObj","keyboard","setInput","setActiveInput","handleKeyboardClose","autoComplete","InputProps","onEnter","refs","displayValue","aria-describedby","build_default","keyboardRef","r","layout","default","{bksp}","{enter}","Register","submittedData","handleShift","clearInput","err","message","handleDateChange","DatePicker","disableFuture","disableToolbar","openTo","format","inputVariant","gutterBottom","styles","control","base","menu","shift","{shift}","{space}","faceAPIAddFace","faceAPITrain","faceAPIAddPerson","userid","Snapshot","taking","showing","photoCanvas","photoctx","img","Image","onload","canvasPicWebCam","retakePhoto","createUser","getScreenshot","ctx","showCanvas","showWebcam","ClientDetails","edit","update","handleCancelClick","textAlign","clientDetails_ColorButton","PrivateRoute","rest","main","ReactDOM","react_router_dom","basename","exact","Start","SnapshotManual","StaffDetail","NewService","ServiceDetail","NewCategory","ErrorPage","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.1d05e09c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//local storage\nexport const setLocalStorage = (key, val) => { localStorage.setItem(key, val) };\nexport const getLocalStorage = (key) => { return localStorage.getItem(key) };\nexport const removeLocalStorage = (key) => { localStorage.removeItem(key) };\n\nconst APIURL = process.env.REACT_APP_API_URL\n\n//auth token\nexport const removeToken = () => { removeLocalStorage('token') };\nexport const setToken = (tokenStr) => { return setLocalStorage('token', tokenStr) };\nexport const getToken = () => { return getLocalStorage('token') };\nexport const removeUser = () => { removeLocalStorage('user') };\nexport const removeClient = () => { removeLocalStorage('client') };\nexport const setUser = (userObj) => { setLocalStorage('user', JSON.stringify(userObj)) };\nexport const setClient = (clientObj) => { setLocalStorage('client', JSON.stringify(clientObj)) };\nexport const getClient = () => {\n    try {\n        return JSON.parse(getLocalStorage('client'));\n    } catch{ return null }\n};\nexport const getUser = () => {\n    try {\n        const userObj = JSON.parse(getLocalStorage('user'));\n        if (userObj._id && userObj.username && userObj.displayName && userObj.role && getToken()) { return userObj } else { return null }\n    } catch{ return null }\n};\nexport const getAvatarLetter = (fullText) => {\n    const textArr = fullText.trim().toUpperCase().split(' ');\n    let letter = \"\";\n    textArr.forEach(t => { if (t.length > 0) { letter += t.substr(0, 1); if (letter.letter >= 2) { return } } });\n    return letter;\n};\n\n//RESTful API fetch\nconst getApiUrl = (path) => {\n    return `${APIURL}/api${path.startsWith('/') ? '' : '/'}${path}`\n};\nconst getApiConf = (method, jsonObj) => {\n    let conf = { 'method': method, headers: {} };\n    if (method.toUpperCase() !== \"GET\") { conf.headers = { 'Content-Type': 'application/json' } }\n    //add token into header if token existed\n    if (getToken()) { conf.headers.token = getToken() }\n    if (jsonObj) { conf.body = JSON.stringify(jsonObj) }\n    return conf;\n};\nexport const fetchAPI = async (method, url, jsonObj) => {\n    return new Promise(async function (resolve, reject) {\n        try {\n            //send request\n            const resp = await fetch(getApiUrl(url), getApiConf(method, jsonObj));\n            const respJson = await resp.json();\n            if (resp.status === 200) { //success respones\n                resolve(respJson);\n            } else if (resp.status === 401) { //if no login\n                removeToken();\n                removeUser();\n                document.location.href = \"/\";\n            } else { //failed respones cdx, return error message\n                throw respJson.error || resp.statusText;\n            }\n        } catch (err) { reject(err) }\n    });\n};\n","import React from 'react';\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nimport { CssBaseline } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { Container, Box, Button, Typography, LinearProgress } from '@material-ui/core';\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport Swal from 'sweetalert2';\n\nimport { fetchAPI, setToken, setUser, removeToken, removeUser } from '../utils';\n\nconst styles = theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass Login extends React.Component {\n\n  state = { redirectToReferrer: false };\n\n  render() {\n\n    const { classes } = this.props;\n\n    let { from } = this.props.location.state || { from: { pathname: \"/dashboard\" } };\n    let { redirectToReferrer } = this.state;\n    if (redirectToReferrer) return <Redirect to={from} />;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Box m={3}><img src={require('../images/logo.png')} alt=\"Logo\" style={{ width: 320 }} /></Box>\n          <Typography component=\"h1\" variant=\"h5\">\n            Spa Management System\n        </Typography>\n          <Formik\n            initialValues={{ username: '', password: '' }}\n            validate={values => {\n              const errors = {};\n              if (!values.username) { errors.username = 'Please enter username' }\n              //else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.username)) { errors.username = 'Invalid email address' }\n              if (!values.password) { errors.password = 'Please enter password' }\n              return errors;\n            }}\n            onSubmit={async (values, { setSubmitting, setErrors }) => {\n              try {\n                const respObj = await fetchAPI('POST', 'auth/login', values);\n                if (respObj && respObj.ok && respObj.token && respObj.user) {\n                  setToken(respObj.token);\n                  setUser(respObj.user);\n                  this.setState({ redirectToReferrer: true });\n                } else {\n                  Swal.fire({\n                    type: 'error', text: 'Please try again.',\n                    title: 'Invalid email or password!'\n                  })\n                }\n              } catch (err) {\n                removeToken(); removeUser();\n                setErrors({ username: \"Invalid username\", password: \"Invalid password\" });\n                Swal.fire({\n                  type: 'error', text: 'Please try again.',\n                  title: 'Invalid email or password!'\n                })\n              }\n              setSubmitting(false);\n            }}\n            render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n              <Form>\n                <Field\n                  component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth autoFocus\n                  name=\"username\" label=\"Username\"\n                />\n                <Field\n                  component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                  name=\"password\" label=\"Password\" type=\"password\"\n                />\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                  disabled={isSubmitting} type=\"submit\"\n                >\n                  Login\n              </Button>\n                {isSubmitting && <LinearProgress />}\n              </Form>\n            )} />\n          <small>{process.env.REACT_APP_VERSION}</small>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(Login));\n","import React from 'react';\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport { CssBaseline } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { Container, Box, Typography, Button } from '@material-ui/core';\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n});\n\nclass Error extends React.Component {\n\n  render() {\n\n    const { classes } = this.props;\n\n    let { from } = this.props.location.state || { from: { pathname: \"/\" } };\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n            <Box m={2}>\n                <Typography variant=\"h3\" noWrap>\n                    Page not found\n                </Typography>\n            </Box>\n            <Box m={2}>\n                <Typography variant=\"subtitle1\" >\n                    Ooooups! Looks like you got lost.\n                </Typography>\n            </Box>\n            <Box>\n                <Button component={Link} to={from} >Go back</Button>\n            </Box>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(Error));","import React from 'react';\nimport { Link, NavLink } from \"react-router-dom\";\nimport { withStyles } from '@material-ui/styles';\nimport {\n    CssBaseline, Hidden, Container,\n    AppBar, Toolbar, Drawer,\n    List, ListItem, ListItemIcon, ListItemAvatar, ListItemText, Divider,\n    Typography,\n    IconButton, Avatar,\n    Menu, MenuItem,\n} from '@material-ui/core';\nimport {\n    Menu as MenuIcon,\n    Spa as SpaIcon,\n    Dashboard as DashboardIcon,\n    CalendarToday as CalendarIcon,\n    Work as StaffIcon,\n    BarChart as BarChartIcon,\n    People as PeopleIcon,\n    Message as MessageIcon,\n    AccountCircle as AccountCircleIcon,\n    Settings as SettingsIcon,\n    Payment as InvoiceIcon\n} from '@material-ui/icons';\nimport { removeToken, removeUser, getAvatarLetter } from '../../utils';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        flexGrow: 1,\n    },\n    menuAvatar: {\n        width: 40,\n        height: 40,\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    activeListItem: {\n        //borderLeft: `4px solid ${theme.palette.primary.main}`,\n        //borderRadius: '4px',\n        backgroundColor: theme.palette.grey[300],\n        '& $listItemText': {\n            color: theme.palette.text.primary\n        },\n        '& $listItemIcon': {\n            color: theme.palette.text.primary,\n            marginLeft: '-4px'\n        }\n    },\n    listItem: {\n        cursor: 'pointer',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n            //borderLeft: `4px solid ${theme.palette.primary.main}`,\n            //borderRadius: '4px',\n            '& $listItemIcon': {\n                color: theme.palette.text.primary,\n                marginLeft: '-4px'\n            }\n        },\n        '& + &': {\n            marginTop: theme.spacing.unit\n        }\n    },\n    listItemText: {\n        fontWeight: 500,\n        color: theme.palette.text.secondary\n    },\n});\n\nfunction NavMenu(props) {\n    return (\n        <div>\n            <div className={props.classes.toolbar}>\n                <img src={require('../../images/logo.png')} alt=\"Logo\" style={{ width: 180, marginTop: 12, marginBottom: 8, marginLeft: 30 }} />\n            </div>\n            <Divider />\n            <List>\n                <ListItem>\n                    <ListItemAvatar>\n                        <Avatar className={props.classes.menuAvatar}>{getAvatarLetter(props.user.displayName)}</Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={props.user.displayName} secondary={(props.user.email.length > 20) ? `${props.user.email.substr(0, 20)}...` : props.user.email} />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/dashboard\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <DashboardIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Dashboard\"\n                    />\n                </ListItem>\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/appointment\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <CalendarIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Appointment\"\n                    />\n                </ListItem>\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/client\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <PeopleIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Clients\"\n                    />\n                </ListItem>\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/staff\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <StaffIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Staffs\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/service\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <SpaIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Services\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/invoice\"\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <InvoiceIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Invoice\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/message\" style={{display: \"none\"}}\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <MessageIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Client Message\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/report\" style={{display: \"none\"}}\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <BarChartIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Reports\"\n                    />\n                </ListItem>\n\n                <ListItem\n                    activeClassName={props.classes.activeListItem}\n                    className={props.classes.listItem}\n                    component={NavLink}\n                    to=\"/setting\" style={{display: \"none\"}}\n                >\n                    <ListItemIcon className={props.classes.listItemIcon}>\n                        <SettingsIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        classes={{ primary: props.classes.listItemText }}\n                        primary=\"Settings\"\n                    />\n                </ListItem>\n\n            </List>\n        </div>\n    );\n}\n\nfunction AccountMenu(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    function handleMenu(event) { setAnchorEl(event.currentTarget) }\n    function handleClose() { setAnchorEl(null) }\n\n    return (\n        <div>\n            <IconButton\n                aria-controls=\"menu-appbar\" aria-haspopup=\"true\"\n                onClick={handleMenu} color=\"inherit\"\n            >\n                <AccountCircleIcon />\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right', }}\n                keepMounted\n                transformOrigin={{ vertical: 'top', horizontal: 'right', }}\n                open={open} onClose={handleClose}\n            >\n                {/* <MenuItem onClick={handleClose} button component={Link} to=\"/profile\">Profile</MenuItem> */}\n                <MenuItem onClick={() => {\n                    removeToken(); removeUser();\n                    props.history.push(\"/login\")\n                }\n                }>Logout</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\n\nclass AppLayout extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { mobileOpen: false };\n    }\n\n    handleDrawerToggle = () => { this.setState({ mobileOpen: !this.state.mobileOpen }) };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar} >\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            edge=\"start\"\n                            onClick={this.handleDrawerToggle}\n                            className={classes.menuButton}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            {this.props.title}\n                        </Typography>\n                        <AccountMenu {...this.props} />\n                    </Toolbar>\n                </AppBar>\n                <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            variant=\"temporary\"\n                            anchor='left'\n                            open={this.state.mobileOpen}\n                            onClose={this.handleDrawerToggle}\n                            classes={{ paper: classes.drawerPaper }}\n                            ModalProps={{\n                                keepMounted: true, // Better open performance on mobile.\n                            }}\n                        >\n                            <NavMenu {...this.props} />\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{ paper: classes.drawerPaper }}\n                            variant=\"permanent\"\n                            open\n                        >\n                            <NavMenu {...this.props} />\n                        </Drawer>\n                    </Hidden>\n                </nav>\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Container maxWidth={false} >\n                        {this.props.children}\n                    </Container>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(AppLayout);\n","import React from 'react';\nimport {withStyles} from '@material-ui/styles';\n\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line\n} from 'recharts';\n\nimport {\n    Paper\n} from '@material-ui/core';\n\nimport AppLayout from '../Component/Layout/Layout'\nimport {fetchAPI} from '../utils';\nimport Swal from 'sweetalert2';\n\nconst styles = theme => ({\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n});\n\nclass Dashboard extends React.Component {\n\n    state = {\n        bookingList: null,\n        appointments: null,\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await fetchAPI('GET', 'dashboardMgt/dashboard');\n            this.setState({\n                bookingList: response.bookingsByStaff,\n                appointments: response.appointments\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    render() {\n        return (\n            <AppLayout title=\"Dashboard\" {...this.props} >\n                <Paper style={{marginTop: 20}}>\n                    <ResponsiveContainer width=\"100%\" height={400}>\n                        <LineChart data={this.state.appointments}\n                                   margin={{\n                                       top: 20, right: 40, left: 20, bottom: 20,\n                                   }}>\n                            <XAxis dataKey=\"_id\"/>\n                            <YAxis/>\n                            <Tooltip/>\n                            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\n                            <Line type=\"monotone\" dataKey=\"Total\" stroke=\"#4287f5\"/>\n                            <Line type=\"monotone\" dataKey=\"Missed\" stroke=\"#ba3091\"/>\n                            <Line type=\"monotone\" dataKey=\"Completed\" stroke=\"#82ca9d\"/>\n                        </LineChart>\n                    </ResponsiveContainer>\n                </Paper>\n                <Paper style={{marginTop: 20}}>\n                    <ResponsiveContainer width=\"100%\" height={400}>\n                        <BarChart\n                            data={this.state.bookingList}\n                            margin={{\n                                top: 20, right: 40, left: 20, bottom: 20,\n                            }}\n                        >\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <XAxis dataKey=\"staff\"/>\n                            <YAxis/>\n                            <Tooltip/>\n                            <Legend/>\n                            <Bar dataKey=\"Bookings\" fill=\"#82ca9d\"/>\n                        </BarChart>\n                    </ResponsiveContainer>\n                </Paper>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dashboard);\n","import React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    Grid, IconButton, Paper, ListItem,\n    InputLabel, FormControl, Select, Input, MenuItem,\n} from '@material-ui/core';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n} from '@material-ui/pickers';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    serviceControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    staffControl: {\n        margin: theme.spacing(3),\n        minWidth: 150,\n    },\n    paperMargin: {\n        margin: theme.spacing(1),\n    },\n});\n\nclass SelectService extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.paperMargin}>\n                <ListItem>\n                    <Grid\n                        container\n                        direction=\"column\">\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\">\n                            <Grid item xs={2}>\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                    <KeyboardTimePicker\n                                        ampm={false}\n                                        minutesStep={5}\n                                        autoOk\n                                        label=\"Start Time\"\n                                        value={this.props.start}\n                                        onChange={this.props.changeTime}\n                                        KeyboardButtonProps={{\n                                            'aria-label': 'change time',\n                                        }}\n                                        disabled={this.props.disable}\n                                    />\n                                </MuiPickersUtilsProvider>\n                            </Grid>\n                            <Grid item>\n                                <FormControl className={classes.serviceControl} >\n                                    <InputLabel htmlFor=\"age-native-simple\" >Service Category</InputLabel>\n                                    <Select\n                                        value={this.props.category}\n                                        onChange={this.props.changeCategory}\n                                        input={<Input id=\"age-native-simple\" />}\n                                        disabled={this.props.disable}\n                                    >\n                                        {this.props.categoryList.map((category, i) => (\n                                            <MenuItem id={i} value={category.value}>\n                                                {category.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\">\n                            <Grid item>\n                                <FormControl className={classes.serviceControl} >\n                                    <InputLabel htmlFor=\"age-native-simple\" >Service Type</InputLabel>\n                                    <Select\n                                        value={this.props.service}\n                                        onChange={this.props.changeService}\n                                        input={<Input id=\"age-native-simple\" />}\n                                        disabled={this.props.disable}\n                                    >\n                                        {this.props.serviceList.map((service, i) => (\n                                            <MenuItem id={i} value={service._id}>\n                                                {`${service.name} ( ${service.duration} mins $${service.price} )`}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item>\n                                <FormControl className={classes.staffControl}>\n                                    <InputLabel htmlFor=\"age-native-simple\" >Staff Name</InputLabel>\n                                    <Select\n                                        value={this.props.staff}\n                                        onChange={this.props.changeStaff}\n                                        input={<Input id=\"age-native-simple\" />}\n                                        disabled={this.props.disable}\n                                    >\n                                        {this.props.staffList && this.props.staffList.map(staff => (\n                                            <MenuItem value={staff._id}>\n                                                {staff.displayName}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <IconButton color=\"secondary\" onClick={this.props.removeBooking} aria-label=\"close\" disabled={this.props.disable}>\n                        <CloseIcon />\n                    </IconButton>\n                </ListItem>\n            </Paper>\n        )\n    }\n}\nexport default withStyles(styles)(SelectService);\n","import React from 'react'\nimport {Calendar, momentLocalizer, Views} from 'react-big-calendar'\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport moment from \"moment\";\nimport ReactSelect from 'react-select'\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.scss'\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport {withStyles} from '@material-ui/styles';\nimport {\n    AppBar,\n    Box,\n    Button,\n    Dialog,\n    DialogContent,\n    FormControl,\n    Grid,\n    IconButton,\n    Paper,\n    Slide,\n    Toolbar,\n    Typography\n} from '@material-ui/core';\nimport {green} from '@material-ui/core/colors';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\nimport {fetchAPI} from '../../utils';\nimport BookingOverview from '../../Component/BookingOverview/BookingOverview'\n\nconst localizer = momentLocalizer(moment);\nconst DragAndDropCalendar = withDragAndDrop(Calendar)\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    titleBar: {\n        position: 'relative',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 600,\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    alert: {\n        zIndex: 2000,\n    }\n});\n\nconst minTime = new Date();\nminTime.setHours(10, 0, 0);\nconst maxTime = new Date();\nmaxTime.setHours(23, 0, 0);\n\nclass CalendarView extends React.Component {\n\n\n    state = {\n        eventOpen: false,\n        categoryList: [],\n        staffList: [],\n        serviceList: [],\n        clientList: [],\n        selectedClient: null,\n        events: [],\n        editFlag: false,\n        fullStaffList: [],\n        bookings: [{\n            _id: null,\n            start: null,\n            end: null,\n            staff: null,\n            service: null,\n            availableServiceList: [],\n            serviceStaffList: [],\n        }],\n        checkout: false,\n        minTime: minTime,\n        maxTime: maxTime,\n    }\n\n\n    async componentDidMount() {\n        try {\n            const fullStaffList = await fetchAPI('GET', 'staffMgt/workingStaff');\n            const serviceList = await fetchAPI('GET', 'serviceMgt/services');\n            const events = await fetchAPI('GET', 'appointmentMgt/bookings');\n            const clientList = await fetchAPI('GET', 'clientMgt/clients');\n            const categoryList = await fetchAPI('GET', 'serviceMgt/category')\n            let options = clientList.map(client => {\n                return {value: client._id, label: `${client.mobile} (${client.displayName})`};\n            })\n            events.map(event => {\n                event.start = new Date(event.start);\n                event.end = new Date(event.end);\n            })\n            this.setState({\n                fullStaffList: fullStaffList,\n                staffList: fullStaffList,\n                serviceList: serviceList,\n                clientList: options,\n                events: events,\n                appointment: null,\n                categoryList: categoryList,\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleSelectClientChange = (selectedOption) => {\n        this.setState({\n            selectedClient: selectedOption\n        });\n    };\n\n    handleConfirmBookings = () => {\n        const {bookings, selectedClient} = this.state\n        if (bookings.length <= 0) {\n            Swal.fire({\n                customClass: {\n                    container: this.props.classes.alert\n                },\n                type: 'error',\n                title: \"Please Select Service !!!\"\n            })\n            return\n        } else {\n            for (let i = 0; i < bookings.length; i++) {\n                if (!bookings[i].service) {\n                    Swal.fire({\n                        customClass: {\n                            container: this.props.classes.alert\n                        },\n                        type: 'error',\n                        title: \"Please Select Service!!!\"\n                    })\n                    return\n                } else if (!bookings[i].staff) {\n                    Swal.fire({\n                        customClass: {\n                            container: this.props.classes.alert\n                        },\n                        type: 'error',\n                        title: \"Please Select Staff!!!\"\n                    })\n                    return\n                }\n            }\n            if (!selectedClient) {\n                Swal.fire({\n                    customClass: {\n                        container: this.props.classes.alert\n                    },\n                    type: 'error',\n                    title: \"Please Select Customer!!!\"\n                })\n                return\n            }\n\n            if (!this.state.editFlag) {\n                let newbookings = bookings.map(booking => {\n                    booking.client = this.state.selectedClient.value\n                    delete booking._id\n                    return booking\n                })\n                this.submitNewBooking(newbookings)\n            } else {\n                let newbookings = bookings.map(booking => {\n                    booking.client = this.state.selectedClient.value\n                    return booking\n                })\n                this.submitUpdateBooking(newbookings)\n            }\n            this.handleEventClose()\n        }\n    }\n\n    submitUpdateBooking(bookings) {\n        if (bookings) {\n            const {appointment} = this.state\n            fetchAPI('PATCH', `appointmentMgt/appointment/${appointment._id}`, bookings).then(respObj => {\n                if (respObj && respObj.ok) {\n                    let resBookings = respObj.bookings\n                    let filterIds = []\n                    resBookings.map(booking => {\n                        filterIds.push(booking._id)\n                    })\n                    var removedBookings = appointment.bookings.filter((e) => {\n                        return filterIds.indexOf(e._id) === -1\n                    })\n                    removedBookings.map(removedBooking => {\n                        const {events} = this.state\n                        let idx = events.findIndex(event => {\n                            return event.id === removedBooking._id\n                        })\n                        if (idx !== -1) {\n                            const nextEvents = [...events]\n                            nextEvents.splice(idx, 1)\n                            this.setState({\n                                events: nextEvents,\n                            })\n                        }\n                    })\n\n                    resBookings.map(resBooking => {\n                        let booking = {\n                            _id: resBooking._id,\n                            id: resBooking._id,\n                            title: resBooking.title,\n                            start: new Date(resBooking.start),\n                            end: new Date(resBooking.end),\n                            resourceId: resBooking.staff,\n                            client: resBooking.client,\n                            service: resBooking.service,\n                            appointment: resBooking.appointment\n                        }\n\n                        const {events} = this.state\n                        let idx = events.findIndex(event => {\n                            return event.id === booking.id\n                        })\n                        if (idx !== -1) {\n                            const nextEvents = [...events]\n                            nextEvents.splice(idx, 1, booking)\n                            this.setState({\n                                events: nextEvents,\n                            })\n                        } else {\n                            this.setState({\n                                events: this.state.events.concat([booking]),\n                            })\n                        }\n                    })\n                    this.navigateToCheckoutDetail(respObj.appointmentId)\n                } else {\n                    Swal.fire({\n                        type: 'error',\n                        title: \"Opps... Something Wrong...\",\n                        text: respObj.error,\n                        customClass: {\n                            container: this.props.classes.alert\n                        },\n                    })\n                }\n            }).catch(error => {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: error,\n                    customClass: {\n                        container: this.props.classes.alert\n                    },\n                })\n            })\n        } else {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: 'No Booking found',\n                customClass: {\n                    container: this.props.classes.alert\n                },\n            })\n        }\n    }\n\n    submitNewBooking(bookings) {\n        fetchAPI('POST', 'appointmentMgt/appointment', bookings).then(respObj => {\n            if (respObj && respObj.ok) {\n                let resBookings = respObj.bookings\n                resBookings.map(resBooking => {\n                    let booking = {\n                        id: resBooking._id,\n                        title: resBooking.title,\n                        start: new Date(resBooking.start),\n                        end: new Date(resBooking.end),\n                        resourceId: resBooking.staff,\n                        client: resBooking.client,\n                        service: resBooking.service,\n                        appointment: resBooking.appointment\n                    }\n                    this.setState({\n                        events: this.state.events.concat([booking]),\n                    })\n                })\n                this.navigateToCheckoutDetail(respObj.appointmentId)\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error,\n                    customClass: {\n                        container: this.props.classes.alert\n                    },\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error,\n                customClass: {\n                    container: this.props.classes.alert\n                },\n            })\n        })\n    }\n\n    handleEventClose = () => {\n        this.setState({\n            editFlag: false,\n            eventOpen: false,\n            selectedClient: null,\n            staffList: this.state.fullStaffList,\n            bookings: [{\n                _id: null,\n                start: null,\n                end: null,\n                staff: null,\n                service: null,\n                availableServiceList: [],\n                serviceStaffList: []\n            }],\n\n        });\n    }\n\n    moveBooking = ({event, start, end, resourceId}) => {\n        if (event.client && event.service) {\n            const {events} = this.state\n\n            const idx = events.indexOf(event)\n\n            const updatedEvent = {...event, start, resourceId, end}\n\n            const nextEvents = [...events]\n            nextEvents.splice(idx, 1, updatedEvent)\n\n            let values = {\n                start: updatedEvent.start,\n                end: updatedEvent.end,\n                staff: updatedEvent.resourceId,\n            }\n            this.handleUpdateBackendEvent(values, updatedEvent, nextEvents);\n        } else {\n            Swal.fire({\n                type: 'error',\n                title: \"Unable to edit leave from booking. Please edit in staff page!!!\"\n            })\n        }\n    };\n\n    async handleUpdateBackendEvent(values, updatedEvent, nextEvents) {\n        const respObj = await fetchAPI('PATCH', `appointmentMgt/bookings/${updatedEvent.id}`, values);\n        if (respObj && respObj.ok) {\n            this.setState({\n                events: nextEvents,\n            })\n        } else {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: respObj.error\n            })\n        }\n    }\n\n    resizeBooking = ({event, start, end}) => {\n        if (event.client && event.service) {\n            const {events} = this.state\n\n            const nextEvents = events.map(existingEvent => {\n                return existingEvent.id === event.id\n                    ? {...existingEvent, start, end}\n                    : existingEvent\n            });\n\n            let values = {\n                start: start,\n                end: end,\n            }\n            this.handleUpdateBackendEvent(values, event, nextEvents)\n        } else {\n            Swal.fire({\n                type: 'error',\n                title: \"Unable to edit leave from booking. Please edit in staff page!!!\"\n            })\n        }\n    }\n\n    newBooking = newBooking => {\n        const booking = {...this.state.bookings[0]}\n        booking.start = newBooking.start\n        booking.staff = newBooking.resourceId\n        booking._id = 0\n        const bookings = [...this.state.bookings]\n        bookings[0] = booking\n\n        this.setState({\n            eventOpen: true,\n            bookings: bookings,\n        });\n    }\n\n    handleEditBooking = async (event) => {\n        if (event.client && event.service) {\n            let appointment = await fetchAPI('GET', `appointmentMgt/appointment/${event.appointment}`)\n            let idx = this.state.clientList.findIndex(client => {\n                return client.value === event.client\n            })\n            for (let i = 0; i < appointment.bookings.length; i++) {\n                appointment.bookings[i].availableServiceList = await fetchAPI('GET', `appointmentMgt/availableservice/${appointment.bookings[i].service.category}`)\n                appointment.bookings[i].category = appointment.bookings[i].service.category\n                appointment.bookings[i].service = appointment.bookings[i].service._id\n            }\n            this.setState({\n                selectedClient: this.state.clientList[idx],\n                bookings: appointment.bookings,\n                appointment: appointment,\n                editFlag: true,\n                eventOpen: true,\n            })\n        } else {\n            Swal.fire({\n                type: 'error',\n                title: \"Unable to edit leave from booking. Please edit in staff page!!!\"\n            })\n        }\n    }\n\n    deleteAppointment = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!',\n            customClass: {\n                container: this.props.classes.alert\n            },\n        }).then((result) => {\n            const {appointment, events} = this.state\n            if (result.value) {\n                fetchAPI('DELETE', `appointmentMgt/appointment/${appointment._id}`).then((result) => {\n                    if (result && result.ok) {\n                        const nextEvents = [...events]\n                        for (let i = 0; i < appointment.bookings.length; i++) {\n                            let idx = nextEvents.findIndex(event => {\n                                return event.id === appointment.bookings[i]._id\n                            })\n                            nextEvents.splice(idx, 1)\n                            this.setState({\n                                events: nextEvents,\n                            })\n                        }\n                    }\n                    this.handleEventClose();\n                    Swal.fire(\n                        'Deleted!',\n                        'Your file has been deleted.',\n                        'success'\n                    )\n                })\n            }\n        })\n    }\n\n    handleAddBooking = () => {\n        const booking = {...this.state.bookings[this.state.bookings.length - 1]}\n        if (typeof booking._id === \"number\") {\n            booking._id = ++booking._id\n        } else {\n            booking._id = 0\n        }\n\n        booking.staff = null\n        const bookings = [...this.state.bookings]\n        bookings.push(booking)\n        this.setState({\n            eventOpen: true,\n            bookings: bookings,\n        });\n    }\n\n    handleRemoveBooking = (index) => {\n        let bookings = [...this.state.bookings]\n        bookings.splice(index, 1)\n        this.setState({bookings: bookings})\n    }\n\n    handleChangeBooking = async (event, id, type, child = null) => {\n\n        const bookingIndex = this.state.bookings.findIndex(booking => {\n            return booking._id === id\n        })\n\n        const booking = {...this.state.bookings[bookingIndex]}\n\n        if (type === \"Time\") {\n            booking.start = event\n            if (booking.service != null) {\n                let service = this.state.bookings[bookingIndex].availableServiceList.find(service => {\n                    return service._id === booking.service\n                })\n                booking.end = new Date((booking.start).getTime() + service.duration * 60000);\n            }\n        } else if (type === \"Category\") {\n            booking.category = event.target.value\n            booking.availableServiceList = await fetchAPI('GET', `appointmentMgt/availableservice/${booking.category}`)\n        } else if (type === \"Service\") {\n            let index = child.props.id;\n            let service = this.state.bookings[bookingIndex].availableServiceList[index]\n            if (this.state.editFlag) {\n                service.start = new Date(booking.start)\n            } else {\n                service.start = booking.start\n            }\n            service.end = new Date((service.start).getTime() + service.duration * 60000);\n            booking.service = event.target.value\n            booking.end = service.end\n\n            let staffAvailable = await fetchAPI('POST', 'appointmentMgt/availablestaff', service)\n            if (staffAvailable.length === 0) {\n                staffAvailable = [\n                    {\n                        \"displayName\": \"No Staff Available\"\n                    }\n                ]\n            }\n            booking.serviceStaffList = staffAvailable\n            if (!staffAvailable.find(staff => staff._id === booking.staff)) {\n                booking.staff = null\n            }\n            this.setState({staffList: staffAvailable})\n        } else {\n            booking.staff = event.target.value\n        }\n\n        const bookings = [...this.state.bookings]\n        bookings[bookingIndex] = booking\n\n        this.setState({\n            bookings: bookings\n        })\n    }\n\n    handleCheckOut = () => {\n        this.setState({checkout: true})\n        this.handleConfirmBookings();\n    }\n\n    handleInvoice = async () => {\n        let invoice = await fetchAPI('GET', `invoiceMgt/appointmentToInvoice/${this.state.appointment._id}`)\n        const {history} = this.props;\n        history.push({\n            pathname: \"/invoice/detail\",\n            state: {\n                invoice: invoice\n            }\n        });\n    }\n\n    navigateToCheckoutDetail = async (id) => {\n        if (this.state.checkout) {\n            let appointment = await fetchAPI('GET', `invoiceMgt/appointment/${id}`)\n            const {history} = this.props;\n            history.push({\n                pathname: \"/invoice/detail\",\n                state: {\n                    appointment: appointment\n                }\n            });\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <AppLayout title=\"Calendar\" {...this.props} >\n                <Paper> <Box p={2}>\n                    <DragAndDropCalendar\n                        selectable\n                        resizable\n                        localizer={localizer}\n                        events={this.state.events}\n                        onEventDrop={this.moveBooking}\n                        onEventResize={this.resizeBooking}\n                        onSelectSlot={this.newBooking}\n                        onSelectEvent={this.handleEditBooking}\n                        defaultView={Views.DAY}\n                        views={['day', 'week']}\n                        defaultDate={new Date()}\n                        step={10}\n                        timeslots={3}\n                        resources={this.state.staffList}\n                        resourceIdAccessor=\"_id\"\n                        resourceTitleAccessor=\"displayName\"\n                        min={this.state.minTime}\n                        max={this.state.maxTime}\n                        // style={{ height: \"100vh\" }}\n                    />\n                    <Dialog fullScreen open={this.state.eventOpen} onClose={this.handleEventClose}\n                            TransitionComponent={Transition}>\n                        <AppBar className={classes.titleBar}>\n                            <Toolbar>\n                                <Typography variant=\"h6\" className={classes.title}>\n                                    {!this.state.editFlag ? \"New Appointment\" : \"Update Appointment\"}\n                                </Typography>\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleEventClose}\n                                            aria-label=\"close\">\n                                    <CloseIcon/>\n                                </IconButton>\n                            </Toolbar>\n                        </AppBar>\n                        <DialogContent dividers=\"paper\">\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\"\n                                style={{minHeight: 500}}>\n                                {\n                                    !this.state.editFlag ?\n                                        this.state.bookings.map((booking, index) =>\n                                            <BookingOverview key={booking._id} category={booking.category}\n                                                             staff={booking.staff} service={booking.service}\n                                                             start={booking.start}\n                                                             staffList={this.state.staffList}\n                                                             serviceList={booking.availableServiceList}\n                                                             categoryList={this.state.categoryList}\n                                                             changeTime={(event) => this.handleChangeBooking(event, booking._id, \"Time\")}\n                                                             changeService={(event, child) => this.handleChangeBooking(event, booking._id, \"Service\", child)}\n                                                             changeStaff={(event) => this.handleChangeBooking(event, booking._id, \"Staff\")}\n                                                             changeCategory={(event) => this.handleChangeBooking(event, booking._id, \"Category\")}\n                                                             removeBooking={() => this.handleRemoveBooking(index)}\n                                            />\n                                        )\n                                        :\n                                        this.state.bookings.map((booking, index) =>\n                                            <BookingOverview key={booking._id} category={booking.category}\n                                                             staff={booking.staff} service={booking.service}\n                                                             start={booking.start}\n                                                             staffList={this.state.staffList}\n                                                             serviceList={booking.availableServiceList}\n                                                             categoryList={this.state.categoryList}\n                                                             disable={this.state.appointment.checkout}\n                                                             changeTime={(event) => this.handleChangeBooking(event, booking._id, \"Time\")}\n                                                             changeService={(event, child) => this.handleChangeBooking(event, booking._id, \"Service\", child)}\n                                                             changeStaff={(event) => this.handleChangeBooking(event, booking._id, \"Staff\")}\n                                                             changeCategory={(event) => this.handleChangeBooking(event, booking._id, \"Category\")}\n                                                             removeBooking={() => this.handleRemoveBooking(index)}\n                                            />\n                                        )\n                                }\n\n                                <FormControl className={classes.formControl}>\n                                    <ReactSelect\n                                        onChange={this.handleSelectClientChange}\n                                        options={this.state.clientList}\n                                        value={this.state.selectedClient}\n                                        placeholder={\"Please Select a Customer...\"}\n                                        isDisabled={this.state.editFlag ? this.state.appointment.checkout : false}\n                                    />\n                                </FormControl>\n\n                                {(this.state.editFlag ? this.state.appointment.checkout : false) ? null :\n                                    <IconButton color=\"primary\" onClick={this.handleAddBooking} aria-label=\"close\">\n                                        <AddIcon fontSize=\"large\"/>\n                                    </IconButton>\n                                }\n                            </Grid>\n\n                            {\n                                !this.state.editFlag ?\n                                    (\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"flex-end\"\n                                            spacing={10}>\n                                            <Grid item xs={3}>\n                                                <Button fullWidth variant=\"contained\" color=\"primary\"\n                                                        onClick={this.handleConfirmBookings}>\n                                                    Save Appointment\n                                                </Button>\n                                            </Grid>\n                                            <Grid item xs={3}>\n                                                <ColorButton fullWidth variant=\"contained\" color=\"primary\"\n                                                             onClick={this.handleCheckOut}>\n                                                    Express Checkout\n                                                </ColorButton>\n                                            </Grid>\n                                        </Grid>\n                                    )\n                                    :\n                                    (\n                                        <Grid\n                                            container\n                                            direction=\"row\"\n                                            justify=\"center\"\n                                            alignItems=\"flex-end\"\n                                            spacing={10}>\n                                            {!this.state.appointment.checkout ?\n                                                <React.Fragment>\n                                                    <Grid item xs={3}>\n                                                        <Button fullWidth variant=\"contained\" color=\"secondary\"\n                                                                onClick={this.deleteAppointment}>\n                                                            Delete\n                                                        </Button>\n                                                    </Grid>\n                                                    <Grid item xs={3}>\n                                                        <Button fullWidth variant=\"contained\" color=\"primary\"\n                                                                onClick={this.handleConfirmBookings}>\n                                                            Update Appointment\n                                                        </Button>\n                                                    </Grid>\n                                                    <Grid item xs={3}>\n                                                        <ColorButton fullWidth variant=\"contained\" color=\"primary\"\n                                                                     onClick={this.handleCheckOut}>\n                                                            Checkout\n                                                        </ColorButton>\n                                                    </Grid>\n                                                </React.Fragment> :\n                                                <Grid item xs={3}>\n                                                    <ColorButton fullWidth variant=\"contained\"\n                                                                 onClick={this.handleInvoice}>\n                                                        Invoice\n                                                    </ColorButton>\n                                                </Grid>\n                                            }\n                                        </Grid>\n                                    )\n                            }\n                        </DialogContent>\n                    </Dialog>\n                </Box>\n                </Paper>\n            </AppLayout>\n        );\n    }\n}\n\nconst ColorButton = withStyles(theme => ({\n    root: {\n        color: theme.palette.getContrastText(green[600]),\n        backgroundColor: green[600],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n        marginTop: 30\n    },\n}))(Button);\n\nexport default withStyles(styles)(CalendarView);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Grid,\n} from '@material-ui/core';\nimport AppLayout from '../../Component/Layout/Layout'\nimport MUIDataTable from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/PersonAdd\";\nimport Swal from 'sweetalert2';\nimport { fetchAPI } from '../../utils';\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n});\n\nconst columns = [\n  {\n    name: \"displayName\",\n    label: \"Display Name\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"mobile\",\n    label: \"Mobile\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"credit\",\n    label: \"Credit\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"gender\",\n    label: \"Gender\",\n    options: {\n      filter: true,\n      sort: true,\n    }\n  },\n  {\n    name: \"nric\",\n    label: \"NRIC\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"birthday\",\n    label: \"Birthday Month\",\n    options: {\n      filter: true,\n      sort: true,\n    }\n  },\n];\n\nfunction replaceRange(s, start, end, substitute) {\n  return s.substring(0, start) + substitute + s.substring(end);\n}\n\nclass Client extends React.Component {\n\n  state = {\n    clientList: [],\n  };\n\n  async componentDidMount() {\n    try {\n      const clientList = await fetchAPI('GET', 'clientMgt/clients');\n      clientList.map(client => {\n        client.birthday = client.birthday ? new Date(client.birthday).getMonth() + 1 : \"-\"\n        return client.nric = replaceRange(client.nric, 0, 5, \"*****\")\n      })\n      this.setState({ clientList: clientList });\n    } catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  handleAddClient = () => {\n    const { history } = this.props;\n    history.push('/client/new');\n  }\n\n  handleRowClick = (rowMeta) => {\n    const { history } = this.props;\n    history.push({\n      pathname: \"/client/detail\",\n      state: {\n        data: this.state.clientList[rowMeta.dataIndex]\n      }\n    });\n  }\n  async handleRowDelete(rowsDeleted) {\n    try {\n      const deleteObjList = rowsDeleted.map((row) => {\n        return this.state.clientList[row.dataIndex]\n      });\n      const response = await fetchAPI('DELETE', 'clientMgt/clients', deleteObjList);\n      if (response && response.ok) {\n        Swal.fire({\n          type: 'success', text: response.ok,\n          title: \"Success!\"\n        })\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: \"Opps... Something Wrong...\",\n          text: response.error\n        })\n      }\n    }\n    catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  render() {\n    return (\n      <AppLayout title=\"Clients\" {...this.props} >\n        <Grid container justify=\"flex-end\" spacing={32} >\n          <Grid item xs={12}>\n            <MUIDataTable\n              title=\"Client List\"\n              data={this.state.clientList}\n              columns={columns}\n              options={{\n                customToolbar: () => {\n                  return (\n                    <Tooltip title={\"Add Client\"}>\n                      <IconButton onClick={this.handleAddClient}>\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                  );\n                },\n                // customToolbarSelect: () => {\n                //   return (\n                //     <React.Fragment>\n                //       <Tooltip title={\"Add Client\"}>\n                //         <IconButton onClick={this.handleAddClient}>\n                //           <AddIcon />\n                //         </IconButton>\n                //       </Tooltip>\n                //       <Tooltip title={\"Add Client\"}>\n                //         <IconButton onClick={this.handleAddClient}>\n                //           <AddIcon />\n                //         </IconButton>\n                //       </Tooltip>\n                //     </React.Fragment>\n                //   );\n                // },\n                onRowClick: (rowData, rowMeta) => {\n                  this.handleRowClick(rowMeta);\n                },\n                onRowsDelete: rowsDeleted => {\n                  this.handleRowDelete(rowsDeleted.data);\n                },\n                filterType: 'checkbox',\n              }}\n            />\n          </Grid>\n        </Grid>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Client);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress,\n} from '@material-ui/core';\n\nimport DatePicker from '@material-ui/core/TextField'\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nconst genderOptions = [\n    { value: \"M\", label: 'M' },\n    { value: \"F\", label: 'F' },\n];\n\nclass NewClient extends React.Component {\n\n    state = {\n        gender: genderOptions[0],\n        birthday: null,\n    }\n\n    handleCancel() {\n        window.history.back();\n    }\n\n    handleGenderSelection = (gender) => {\n        this.setState({ gender });\n    }\n    handleChangeBirthday = (event) => {\n        this.setState({ birthday: event.target.value });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"New Client\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            New Client Onboard\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n                    <Formik\n                        initialValues={{ mobile: '', password: '', confirmPassoword: '', email: '', displayName: '', nric: '' }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.mobile) { errors.mobile = 'Please enter mobile number' }\n                            if (!values.displayName) { errors.displayName = 'Please enter display name' }\n                            // if (!values.password) { errors.password = 'Please enter password' }\n                            // if (!values.confirmPassoword) { errors.confirmPassoword = 'Please enter password' }\n                            if (values.password !== values.confirmPassoword) { errors.confirmPassoword = 'Password does not match' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting, setErrors }) => {\n                            try {\n                                values.gender = this.state.gender.value\n                                values.birthday = this.state.birthday\n                                const respObj = await fetchAPI('POST', 'clientMgt/clients', values);\n\n                                if (respObj && respObj.ok) {\n\n                                    window.history.back();\n                                } else { \n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                 }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"password\" label=\"Password\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                                /> */}\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"displayName\" label=\"Display Name\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"email\" label=\"Email\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"nric\" label=\"NRIC\"\n                                />\n                                <DatePicker\n                                    fullWidth\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    id=\"date\"\n                                    label=\"Birthday\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={this.handleChangeBirthday}\n                                />\n                                <Typography>\n                                    <h5>\n                                        Gender\n                                    </h5>\n                                </Typography>\n                                <Select className={classes.select}\n                                    onChange={this.handleGenderSelection}\n                                    options={genderOptions}\n                                    value={this.state.gender}\n                                />\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Register\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(NewClient);","import React from 'react';\nimport {\n    Grid, TextField, Paper, ListItem,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n    listitem: {\n        margin: theme.spacing(1),\n        width: '100%'\n    },\n});\n\nfunction getTotal(bookings) {\n    let total = 0\n    for (let i = 0; i < bookings.length; i++) {\n        total += bookings[i].service.price\n    }\n    return total\n}\n\nclass InvoiceList extends React.Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <ListItem button onClick={this.props.click} >\n                <Grid\n                    container\n                    direction=\"column\">\n                    {\n                        this.props.bookings.map(booking => {\n\n                            return (\n                                <React.Fragment>\n                                    <Grid item>\n                                        <Grid\n                                            container\n                                            justify=\"space-between\"\n                                            direction=\"row\">\n                                            <h3><strong>{booking.service.name}</strong></h3>\n                                            <h3><strong>S${booking.service.price}</strong></h3>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <light>{new Date(booking.start).toLocaleString()} with {booking.staff.displayName} </light>\n                                    </Grid>\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                    <Grid item>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"flex-end\"\n                            alignItems=\"center\">\n                            <h3><strong>Total: ${getTotal(this.props.bookings)} </strong></h3>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </ListItem>\n        )\n    }\n}\nexport default withStyles(styles)(InvoiceList);","import React from 'react';\nimport {\n    Grid, TextField, Paper, ListItem,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n    listitem: {\n        margin: theme.spacing(1),\n        width: '100%'\n    },\n});\n\nclass InvoiceList extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <ListItem button onClick={this.props.click} >\n                <Grid\n                    container\n                    direction=\"column\">\n                    {\n                        this.props.invoice.appointment.bookings.map(booking => {\n\n                            return (\n                                <React.Fragment>\n                                    <Grid item>\n                                        <Grid\n                                            container\n                                            justify=\"space-between\"\n                                            direction=\"row\">\n                                            <h3><strong>{booking.service.name}</strong></h3>\n                                            <h3><strong>S${booking.service.price}</strong></h3>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <light>{new Date(booking.start).toLocaleString()} with {booking.staff.displayName} </light>\n                                    </Grid>\n                                </React.Fragment>\n                            )\n                        })\n                    }\n                    <Grid item>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"space-between\"\n                            alignItems=\"center\">\n                                    <h3><strong>Addon: ${this.props.invoice.addon} </strong></h3>\n                                    <h3><strong>Discount: ${this.props.invoice.discount} </strong></h3>\n                                    <h3><strong>Total: ${this.props.invoice.total} </strong></h3>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </ListItem>\n        )\n    }\n}\nexport default withStyles(styles)(InvoiceList);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { withStyles } from '@material-ui/styles';\n// import { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Tabs, Tab, Typography, Box, Divider, ListItem, Grid } from '@material-ui/core';\nimport AppointmentListView from '../Invoice/AppointmentListView'\nimport InvoiceListView from '../Invoice/InvoiceListView'\n\nfunction Appointment(props) {\n    return (\n        <AppointmentListView bookings={props.bookings} click={props.click} />\n    )\n}\n\nfunction Invoice(props) {\n    return (\n        <InvoiceListView invoice={props.invoice} click={props.click} />\n    )\n}\n\nfunction Record(props) {\n    return (\n        <ListItem button>\n            {props.creditRecord.staff ?\n                <Grid\n                    container\n                    justify=\"space-between\"\n                    alignItems=\"center\"\n                    direction=\"row\">\n                    <div>\n                        <h3><strong>S${props.creditRecord.amount}</strong></h3>\n                        <light>{new Date(props.creditRecord.createdAt).toLocaleString()}</light>\n                    </div>\n                    Added By {props.creditRecord.staff.displayName}\n                </Grid>\n                :\n                <Grid\n                    container\n                    justify=\"space-between\"\n                    alignItems=\"center\"\n                    direction=\"row\">\n                    <div>\n                        <h3><strong>S${props.creditRecord.amount}</strong></h3>\n                        <light>{new Date(props.creditRecord.createdAt).toLocaleString()}</light>\n                    </div>\n                    <div>\n                        {props.creditRecord.services.map(service => {\n                            return <div>{service}</div>\n                        })}\n                    </div>\n                </Grid>\n            }\n\n        </ListItem>\n    )\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n});\n\nclass TabView extends React.Component {\n    state = {\n        value: 0,\n        index: null,\n    }\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue })\n    };\n\n    handleChangeIndex = index => {\n        this.setState({ index: index })\n    };\n\n    render() {\n        const { appointments, invoices, creditRecords } = this.props\n        const { value } = this.state\n        return (\n            <div>\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab label=\"Appointments\" {...a11yProps(0)} />\n                    <Tab label=\"Invoices\" {...a11yProps(1)} />\n                    <Tab label=\"Credit Record\" {...a11yProps(2)} />\n                </Tabs>\n                <TabPanel value={value} index={0} >\n                    {\n                        appointments ?\n                            appointments.map(appointment => {\n                                return (\n                                    <React.Fragment>\n                                        <Divider />\n                                        <Appointment bookings={appointment.bookings} click={() => {\n                                            const { history } = this.props;\n                                            history.push({\n                                                pathname: \"/invoice/detail\",\n                                                state: {\n                                                    appointment: appointment\n                                                }\n                                            });\n                                        }} />\n                                        <Divider />\n                                    </React.Fragment>\n                                )\n                            }) : null\n                    }\n                </TabPanel>\n                <TabPanel value={value} index={1} >\n                    {\n                        invoices ?\n                            invoices.map(invoice => {\n                                return (\n                                    <React.Fragment>\n                                        <Divider />\n                                        <Invoice invoice={invoice} click={() => {\n                                            const { history } = this.props;\n                                            history.push({\n                                                pathname: \"/invoice/detail\",\n                                                state: {\n                                                    invoice: invoice\n                                                }\n                                            });\n                                        }} />\n                                        <Divider />\n                                    </React.Fragment>\n                                )\n                            }) : null\n                    }\n                </TabPanel>\n                <TabPanel value={value} index={2} >\n                    {\n\n                        creditRecords ?\n                            creditRecords.map(creditRecord => {\n                                return (\n                                    <React.Fragment>\n                                        <Divider />\n                                        <Record creditRecord={creditRecord} />\n                                        <Divider />\n                                    </React.Fragment>\n                                )\n                            }) : null\n                    }\n                </TabPanel>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(TabView);","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, Grid, Avatar, Paper, Divider, List, ListItem, ListItemAvatar, Dialog, DialogActions, DialogContent,\n    DialogTitle, TextField, ButtonGroup\n} from '@material-ui/core';\nimport { fetchAPI, getAvatarLetter } from '../../utils';\nimport AppLayout from '../../Component/Layout/Layout'\nimport TabView from '../../Component/TabView/TabView'\nimport Swal from 'sweetalert2';\n\nconst styles = theme => ({\n    bigAvatar: {\n        margin: 10,\n        width: 100,\n        height: 100,\n    },\n    list: {\n        width: \"100%\",\n    },\n    listAvatar: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    listButton: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    labelColor: {\n        color: '#969590',\n    },\n});\n\nfunction replaceRange(s, start, end, substitute) {\n    return s.substring(0, start) + substitute + s.substring(end);\n}\n\nclass ClientDetail extends React.Component {\n\n    state = {\n        addCreditDialog: false,\n        credit: '',\n        client: '',\n        totalBookings: 0,\n        totalCompleted: 0,\n        totalSales: 0,\n        totalMiss: 0,\n        appointments: null,\n        invoices: null,\n    }\n\n    async componentDidMount() {\n        try {\n            let respObj = await fetchAPI('GET', `clientMgt/clients/${this.props.location.state.data._id}`)\n            const statistics = await fetchAPI('GET', `clientMgt/statistics/${this.props.location.state.data._id}`)\n            const appointments = await fetchAPI('GET', `clientMgt/appointments/${this.props.location.state.data._id}`)\n            const invoices = await fetchAPI('GET', `clientMgt/invoices/${this.props.location.state.data._id}`)\n            const creditRecords = await fetchAPI('GET', `clientMgt/creditRecordList/${this.props.location.state.data._id}`)\n            if (respObj) {\n                respObj.nric = replaceRange(respObj.nric, 0, 5, \"*****\")\n                this.setState({\n                    client: respObj\n                })\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n            if (statistics && statistics.ok) {\n                if (statistics.totalCompleted) {\n                    this.setState({\n                        totalBookings: statistics.totalBookings,\n                        totalCompleted: statistics.totalCompleted,\n                        totalSales: statistics.totalSales,\n                        totalMiss: statistics.totalBookings - statistics.totalCompleted\n                    })\n                } else if (statistics.totalBookings) {\n                    this.setState({\n                        totalBookings: statistics.totalBookings,\n                    })\n                }\n            }\n            if (appointments && appointments.ok) {\n                this.setState({\n                    appointments: appointments.appointments\n                })\n            }\n            if (invoices && invoices.ok) {\n                this.setState({\n                    invoices: invoices.invoices\n                })\n\n            }\n            if (creditRecords && creditRecords.ok) {\n                this.setState({\n                    creditRecords: creditRecords.creditRecordList\n                })\n            }\n\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n    handleEditClick = () => {\n        const { history } = this.props;\n        history.push({\n            pathname: \"/client/update\",\n            state: {\n                data: this.state.client,\n            }\n        });\n    }\n    addCreditValueChange = (event) => {\n        this.setState({ credit: event.target.value })\n    }\n    handleAddCreditOpen = () => {\n        this.setState({ addCreditDialog: true });\n    }\n    handleAddCreditClose = () => {\n        this.setState({\n            addCreditDialog: false,\n            credit: '',\n        });\n    };\n\n    handleAddCreditConfirm = () => {\n        this.handleAddCreditClose();\n        if (this.state.credit) {\n            let values = {\n                credit: this.state.credit\n            }\n            fetchAPI('POST', `creditRecordMgt/addcredit/${this.state.client._id}`, values).then(respObj => {\n                if (respObj && respObj.ok) {\n                    this.setState({\n                        client: respObj.client,\n                        creditRecords: this.state.creditRecords.concat([respObj.creditRecord]),\n                    })\n                    Swal.fire({\n                        type: 'success', text: respObj.ok,\n                        title: \"Success!\"\n                    })\n                } else {\n                    Swal.fire({\n                        type: 'error',\n                        title: \"Opps... Something Wrong...\",\n                        text: respObj.error\n                    })\n                }\n            }).catch(error => {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: error\n                })\n            })\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"Client Details\" {...this.props} >\n\n                <Grid container justify=\"center\" spacing={3} >\n                    <Grid item xs={5}>\n                        <Paper>\n                            <List className={classes.list}>\n                                <ListItemAvatar className={classes.listAvatar}>\n                                    <Grid container direction='column' alignItems=\"center\">\n                                        <Avatar alt=\"Remy Sharp\" className={classes.bigAvatar}>{getAvatarLetter(this.props.location.state.data.displayName)} </Avatar>\n                                        <Typography variant='h4' style={{ marginTop: \"10px\" }}> {this.state.client.displayName} </Typography>\n                                    </Grid>\n                                </ListItemAvatar>\n                                <Divider />\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> Email </Typography>\n                                        <Typography> {this.state.client.email ? this.state.client.email : \"-\"} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> Gender </Typography>\n                                        <Typography> {this.state.client.gender} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> NRIC </Typography>\n                                        <Typography> {this.state.client.nric} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> Mobile </Typography>\n                                        <Typography> {this.state.client.mobile} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem>\n                                    <Grid>\n                                        <Typography className={classes.labelColor}> Birthday </Typography>\n                                        <Typography> {this.state.client.birthday ? new Date(this.state.client.birthday).toLocaleDateString() : \"-\"} </Typography>\n                                    </Grid>\n                                </ListItem>\n                                <ListItem >\n                                    <ButtonGroup fullWidth >\n                                        <Button onClick={this.handleEditClick}>Edit</Button>\n                                        <Button onClick={this.handleAddCreditOpen}>Add Credit</Button>\n                                        <Button onClick={() => this.props.history.push(\"/appointment\")}>New Appointment</Button>\n                                    </ButtonGroup>\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={7}>\n                        <Grid container spacing={3} direction=\"column\">\n                            <Grid item>\n                                <Paper>\n                                    <List>\n                                        <ListItem style={{ minHeight: 100 }}>\n                                            <Grid container direction='row' justify=\"space-evenly\" alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h5'> {this.state.client.credit} </Typography>\n                                                        <Typography className={classes.labelColor} > Credit Balance </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h5'> ${this.state.totalSales} </Typography>\n                                                        <Typography className={classes.labelColor}> Total Sales </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                        <Divider />\n                                        <ListItem>\n                                            <Grid container direction='row' justify=\"space-evenly\" alignItems=\"center\">\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h6'> {this.state.totalBookings} </Typography>\n                                                        <Typography className={classes.labelColor}> All Bookings </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h6'> {this.state.totalCompleted} </Typography>\n                                                        <Typography className={classes.labelColor}> Completed </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid item xs={3}>\n                                                    <Grid container direction='column' alignItems=\"center\">\n                                                        <Typography variant='h6'> {this.state.totalMiss} </Typography>\n                                                        <Typography className={classes.labelColor}> Missed </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </ListItem>\n                                    </List>\n                                </Paper>\n                            </Grid>\n                            <Grid item>\n                                <Paper>\n                                    <TabView {...this.props}\n                                        appointments={this.state.appointments ? this.state.appointments : null}\n                                        invoices={this.state.invoices ? this.state.invoices : null}\n                                        creditRecords={this.state.creditRecords ? this.state.creditRecords : null}>\n                                    </TabView>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Dialog open={this.state.addCreditDialog} onClose={this.handleAddCreditClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Add Credit</DialogTitle>\n                    <DialogContent style={{ minWidth: 400 }}>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Amount\"\n                            type=\"number\"\n                            fullWidth\n                            placeholder=\"Please enter amount...\"\n                            onChange={this.addCreditValueChange}\n                            value={this.state.credit}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleAddCreditClose} color=\"primary\">\n                            Cancel\n                    </Button>\n                        <Button onClick={this.handleAddCreditConfirm} color=\"primary\">\n                            Confirm\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            </AppLayout >\n        );\n    }\n}\n\nexport default withStyles(styles)(ClientDetail);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress\n} from '@material-ui/core';\nimport Datepicker from '@material-ui/core/TextField'\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n});\nconst genderOptions = [\n    { value: \"M\", label: 'M' },\n    { value: \"F\", label: 'F' },\n];\nclass UpdateClient extends React.Component {\n\n    state = {\n        gender: { value: this.props.location.state.data.gender, label: this.props.location.state.data.gender },\n        birthday: null,\n    }\n\n    handleGenderSelection = (gender) => {\n        this.setState({ gender });\n    }\n    handleChangeBirthday = (event) => {\n        this.setState({ birthday: event.target.value });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"Staff Details\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            Update Client Details\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n\n                    <Formik\n                        initialValues={{ mobile: this.props.location.state.data.mobile, displayName: this.props.location.state.data.displayName, email: this.props.location.state.data.email, nric: this.props.location.state.data.nric, credit: this.props.location.state.data.credit }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.mobile) { errors.mobile = 'Please enter mobile number' }\n                            if (!values.displayName) { errors.displayName = 'Please enter display name' }\n                            if (values.password !== values.confirmPassoword) { errors.confirmPassoword = 'Password does not match' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting }) => {\n                            try {\n                                values.gender = this.state.gender.value\n                                values.birthday = this.state.birthday\n                                const respObj = await fetchAPI('PATCH', `clientMgt/clients/${this.props.location.state.data._id}`, values);\n                                if (respObj && respObj.ok) {\n                                    const { history } = this.props;\n\n                                    history.push({\n                                        pathname: \"/client/detail\",\n                                        state: {\n                                            data: respObj.client\n                                        }\n                                    });\n                                } else {\n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"password\" label=\"New Passowrd\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"displayName\" label=\"Display Name\"\n                                />\n\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"email\" label=\"Email\"\n                                />\n\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"nric\" label=\"NRIC\"\n                                />\n                                <Datepicker\n                                    fullWidth\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    id=\"date\"\n                                    label=\"Birthday\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={this.handleChangeBirthday}\n                                />\n                                <Typography>\n                                    <h5>\n                                        Gender\n                                    </h5>\n                                </Typography>\n                                <Select className={classes.select}\n                                    onChange={this.handleGenderSelection}\n                                    options={genderOptions}\n                                    value={this.state.gender}\n                                />\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Update\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(UpdateClient);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Grid,\n} from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\nimport MUIDataTable from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport RoleIcon from \"@material-ui/icons/Add\";\nimport AddIcon from \"@material-ui/icons/PersonAdd\";\nimport { fetchAPI } from '../../utils';\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  row: {\n    height: '42px',\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n});\n\nconst columns = [\n  {\n    name: \"username\",\n    label: \"Userame\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"displayName\",\n    label: \"Display Name\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"mobile\",\n    label: \"Mobile\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"role.name\",\n    label: \"Role\",\n    options: {\n      filter: true,\n      sort: true,\n    }\n  },\n];\n\nclass Staff extends React.Component {\n  constructor() {\n    super();\n    this.state = { userList: [] };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetchAPI('GET', 'staffMgt/staffs');\n      this.setState({ userList: response });\n    } catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  handleAddStaff = () => {\n    const { history } = this.props;\n    history.push('/staff/new');\n  }\n\n  handleAddRole = () => {\n\n  }\n\n  handleRowClick = (rowMeta) => {\n    const { history } = this.props;\n    history.push({\n      pathname: \"/staff/detail\",\n      state: {\n        data: this.state.userList[rowMeta.dataIndex]\n      }\n    });\n  }\n\n  async handleRowDelete(rowsDeleted) {\n    try {\n      const deleteObjList = rowsDeleted.map((row) => {\n        return this.state.userList[row.dataIndex]\n      });\n      const response = await fetchAPI('DELETE', 'staffMgt/staffs', deleteObjList);\n      if (response && response.ok) {\n        Swal.fire({\n          type: 'success', text: response.ok,\n          title: \"Success!\"\n        })\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: \"Opps... Something Wrong...\",\n          text: response.error\n        })\n      }\n    }\n    catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  render() {\n    return (\n      <AppLayout title=\"Staff List\" {...this.props} >\n        <Grid container justify=\"flex-end\" spacing={32} >\n          <Grid item xs={12}>\n            <MUIDataTable\n              title=\"Client List\"\n              data={this.state.userList}\n              columns={columns}\n              options={{\n                customToolbar: () => {\n                  return (\n                    <React.Fragment>\n                      <Tooltip title={\"Add Staff\"}>\n                        <IconButton onClick={this.handleAddStaff}>\n                          <AddIcon />\n                        </IconButton>\n                      </Tooltip>\n                    </React.Fragment>\n                  );\n                },\n                onRowClick: (rowData, rowMeta) => {\n                  this.handleRowClick(rowMeta);\n                },\n                onRowsDelete: rowsDeleted => {\n                  this.handleRowDelete(rowsDeleted.data);\n                },\n                filterType: 'checkbox',\n              }}\n            />\n          </Grid>\n        </Grid>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Staff);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress, Dialog, DialogActions, DialogContent, DialogTitle\n} from '@material-ui/core';\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\nimport InfiniteCalendar, { Calendar, defaultMultipleDateInterpolation, withMultipleDates } from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css'\n\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n\n});\n\nclass NewStaff extends React.Component {\n\n    state = {\n        selectedOption: {},\n        roleList: [],\n        selectedLeaves: [],\n        selectedOff: [],\n        offDays: [],\n        leaveOpen: false,\n        offOpen: false,\n    };\n\n    async componentDidMount() {\n        try {\n            const roleList = await fetchAPI('GET', 'staffMgt/roles');\n            this.setState({\n                roleList: roleList,\n                selectedOption: roleList[0]\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n    };\n\n    handleLeaveSelection(selectedDate) {\n        let selectedLeave = defaultMultipleDateInterpolation(selectedDate, this.state.selectedLeaves)\n        this.setState({\n            selectedLeaves: selectedLeave\n        })\n    }\n\n    handleOffSelection(selectedDate) {\n        let selectedOff = defaultMultipleDateInterpolation(selectedDate, this.state.selectedOff)\n        let disabledDays = selectedOff.map(day => {\n            return day.getDay();\n        })\n        this.setState({\n            offDays: disabledDays,\n            selectedOff: selectedOff\n        })\n    }\n\n    handleLeaveClickOpen = () => {\n        this.setState({ leaveOpen: true });\n    };\n\n    handleLeaveOpen = () => {\n        this.setState({ leaveOpen: false });\n    }\n\n    handleLeaveClose = () => {\n        this.setState({ leaveOpen: false });\n    }\n\n    handleOffClickOpen = () => {\n        this.setState({ offOpen: true });\n    };\n\n    handleOffOpen = () => {\n        this.setState({ offOpen: false });\n    }\n\n    handleOffClose = () => {\n        this.setState({ offOpen: false });\n    }\n\n    handleOffReset = () => {\n        this.setState({\n            offDays: [],\n            selectedOff: [],\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        const { selectedOption } = this.state;\n        return (\n            <AppLayout title=\"New Staff\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            Personal Infomation\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n                    <Formik\n                        initialValues={{ username: '', password: '', confirmPassoword: '', mobile: '', email: '', }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.username) { errors.username = 'Please enter username' }\n                            if (!values.password) { errors.password = 'Please enter password' }\n                            if (!values.confirmPassoword) { errors.confirmPassoword = 'Please enter password' }\n                            if (!values.displayName) { errors.displayName = 'Please enter display name' }\n                            if (!values.mobile) { errors.mobile = 'Please enter mobile number' }\n                            if (!values.email) { errors.email = 'Please enter email address' }\n                            if (values.password !== values.confirmPassoword) { errors.confirmPassoword = 'Password does not match' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting, setErrors }) => {\n                            try {\n                                values.role = this.state.selectedOption.value;\n                                values.offDays = this.state.offDays;\n                                values.leaveDays = this.state.selectedLeaves;\n\n                                const respObj = await fetchAPI('POST', 'staffMgt/staffs', values);\n\n                                if (respObj && respObj.ok) {\n                                    window.history.back();\n                                } else {\n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth autoFocus\n                                    name=\"username\" label=\"Username\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"password\" label=\"Password\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"displayName\" label=\"Display Name\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"email\" label=\"Email\"\n                                />\n                                <Typography>\n                                    <h5>\n                                        Role\n                                    </h5>\n                                </Typography>\n                                <Select className={classes.select}\n                                    onChange={this.handleChange}\n                                    options={this.state.roleList}\n                                    value={selectedOption}\n                                />\n                                <Typography>\n                                    <h5>\n                                        On Leave\n                                    </h5>\n                                </Typography>\n                                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleLeaveClickOpen}>\n                                    Please Select Leave Days...\n                                </Button>\n                                <Dialog open={this.state.leaveOpen} onClose={this.handleLeaveClose} aria-labelledby=\"form-dialog-title\">\n                                    <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                                    <DialogContent>\n                                        <InfiniteCalendar id=\"leaveCalendar\"\n                                            Component={withMultipleDates(Calendar)}\n                                            selected={this.state.selectedLeaves}\n                                            minDate={new Date()}\n                                            disabledDays={this.state.offDays}\n                                            interpolateSelection={defaultMultipleDateInterpolation}\n                                            onSelect={(selectedDate) => { this.handleLeaveSelection(selectedDate) }}\n                                        />\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={this.handleLeaveClose} color=\"primary\">\n                                            Done\n                                        </Button>\n                                    </DialogActions>\n                                </Dialog>\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Register\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(NewStaff);","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress, Dialog, DialogActions, DialogContent, DialogTitle, Paper, Box\n} from '@material-ui/core';\nimport InfiniteCalendar, { Calendar, defaultMultipleDateInterpolation, withMultipleDates } from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css'\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nclass ClientDetail extends React.Component {\n    state = {\n        selectedOption: { value: this.props.location.state.data.role._id, label: this.props.location.state.data.role.name },\n        roleList: [],\n        selectedLeaves: this.props.location.state.data.leaveDays,\n        selectedOff: [],\n        leaveOpen: false,\n    };\n\n    async componentDidMount() {\n        try {\n            const roleList = await fetchAPI('GET', 'staffMgt/roles');\n\n            this.setState({\n                roleList: roleList,\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n    };\n\n    handleLeaveSelection(selectedDate) {\n        let selectedLeave = defaultMultipleDateInterpolation(selectedDate, this.state.selectedLeaves)\n        this.setState({\n            selectedLeaves: selectedLeave\n        })\n    }\n\n    handleLeaveClickOpen = () => {\n        this.setState({ leaveOpen: true });\n    };\n\n    handleLeaveOpen = () => {\n        this.setState({ leaveOpen: false });\n    }\n\n    handleLeaveClose = () => {\n        this.setState({ leaveOpen: false });\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"Staff Details\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Paper>\n                        <Box p={2}>\n                            <Typography>\n                                <h3>\n                                    Personal Infomation\n                        </h3>\n                            </Typography>\n                            <CssBaseline />\n                            <Formik\n                                initialValues={{ username: this.props.location.state.data.username, displayName: this.props.location.state.data.displayName, mobile: this.props.location.state.data.mobile, email: this.props.location.state.data.email }}\n                                validate={values => {\n                                    const errors = {};\n                                    if (!values.username) { errors.username = 'Please enter username' }\n                                    if (!values.displayName) { errors.displayName = 'Please enter password' }\n                                    if (!values.mobile) { errors.mobile = 'Please enter mobile number' }\n                                    if (!values.email) { errors.email = 'Please enter email address' }\n                                    if (values.password !== values.confirmPassoword) { errors.confirmPassoword = 'Password does not match' }\n                                    return errors;\n                                }}\n                                onSubmit={async (values, { setSubmitting }) => {\n                                    try {\n                                        values.role = this.state.selectedOption.value;\n                                        values.leaveDays = this.state.selectedLeaves;\n\n                                        const respObj = await fetchAPI('PATCH', `staffMgt/staffs/${this.props.location.state.data._id}`, values);\n\n                                        if (respObj && respObj.ok) {\n                                            window.history.back();\n                                        } else {\n                                            Swal.fire({\n                                                type: 'error',\n                                                title: \"Opps... Something Wrong...\",\n                                                text: respObj.error\n                                            })\n                                        }\n                                    } catch (error) {\n                                        Swal.fire({\n                                            type: 'error',\n                                            title: \"Opps... Something Wrong...\",\n                                            text: error\n                                        })\n                                    }\n                                    setSubmitting(false);\n                                }}\n                                render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                                    <Form>\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth autoFocus\n                                            name=\"username\" label=\"Username\" disabled\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"password\" label=\"New Passowrd\" type=\"password\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"displayName\" label=\"Display Name\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"email\" label=\"Email\"\n                                        />\n                                        <Typography>\n                                            <h5>\n                                                Role\n                                    </h5>\n                                        </Typography>\n                                        <Select className={classes.select}\n                                            onChange={this.handleChange}\n                                            options={this.state.roleList}\n                                            value={this.state.selectedOption}\n                                        />\n\n                                        <Typography>\n                                            <h5>\n                                                On Leave\n                                    </h5>\n                                        </Typography>\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleLeaveClickOpen}>\n                                            Please Select Leave Days...\n                                        </Button>\n                                        <Dialog open={this.state.leaveOpen} onClose={this.handleLeaveClose} aria-labelledby=\"form-dialog-title\">\n                                            <DialogTitle id=\"form-dialog-title\">Leave</DialogTitle>\n                                            <DialogContent>\n                                                <InfiniteCalendar id=\"leaveCalendar\"\n                                                    Component={withMultipleDates(Calendar)}\n                                                    selected={this.state.selectedLeaves}\n                                                    minDate={new Date()}\n                                                    interpolateSelection={defaultMultipleDateInterpolation}\n                                                    onSelect={(selectedDate) => { this.handleLeaveSelection(selectedDate) }}\n                                                />\n                                            </DialogContent>\n                                            <DialogActions>\n                                                <Button onClick={this.handleLeaveClose} color=\"primary\">\n                                                    Done\n                                        </Button>\n                                            </DialogActions>\n                                        </Dialog>\n\n                                        <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                            disabled={isSubmitting} onClick={submitForm}\n                                        >\n                                            Update\n                                        </Button>\n                                        <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                            onClick={() => { window.history.back(); }}\n                                        >\n                                            Cancel\n                                </Button>\n                                        {isSubmitting && <LinearProgress />}\n                                    </Form>\n                                )}\n                            />\n                        </Box>\n                    </Paper>\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClientDetail);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Grid\n} from '@material-ui/core';\nimport MUIDataTable from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport Swal from 'sweetalert2';\nimport { fetchAPI } from '../../utils';\nimport AppLayout from '../../Component/Layout/Layout'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nconst columns = [\n  {\n    name: \"name\",\n    label: \"Service Name\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"category.name\",\n    label: \"Category\",\n    options: {\n      filter: true,\n      sort: true,\n    }\n  },\n  {\n    name: \"price\",\n    label: \"Price($)\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"duration\",\n    label: \"Duration(min)\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"staff\",\n    label: \"Staff Name\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n];\n\nclass Service extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      serviceList: [],\n      displayServiceList: []\n    };\n  }\n\n  getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          width: \"100px\"\n        },\n      }\n    }\n  })\n\n  async componentDidMount() {\n    try {\n      let displayService = await fetchAPI('GET', 'serviceMgt/services');\n      let staffs = await fetchAPI('GET', 'staffMgt/totalstaffs');\n      let services = displayService;\n\n      displayService.map(service => {\n        let tempStaffs = \"\";\n        if (service.staff.length === staffs.total) {\n          tempStaffs = \"All Staff\";\n        } else {\n          service.staff.map(staff => {\n            tempStaffs += staff.displayName + ', ';\n          });\n          tempStaffs = tempStaffs.slice(0, -2);\n        }\n        service.staff = tempStaffs;\n      });\n      this.setState({\n        serviceList: services,\n        displayServiceList: displayService\n      });\n    } catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  handleAddService = () => {\n    const { history } = this.props;\n    history.push('/service/new');\n  }\n\n  handleAddCategory = () => {\n    const { history } = this.props;\n    history.push('/service/newcategory');\n  }\n\n  handleRowClick = (rowMeta) => {\n    const { history } = this.props;\n    history.push({\n      pathname: \"/service/detail\",\n      state: {\n        data: this.state.serviceList[rowMeta.dataIndex]\n      }\n    });\n  }\n\n  async handleRowDelete(rowsDeleted) {\n    try {\n      const deleteObjList = rowsDeleted.map((row) => {\n        return this.state.serviceList[row.dataIndex]\n      });\n      const response = await fetchAPI('DELETE', 'serviceMgt/services', deleteObjList);\n      if (response && response.ok) {\n        Swal.fire({\n          type: 'success', text: response.ok,\n          title: \"Success!\"\n        })\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: \"Opps... Something Wrong...\",\n          text: response.error\n        })\n      }\n    }\n    catch (error) {\n      Swal.fire({\n        type: 'error',\n        title: \"Opps... Something Wrong...\",\n        text: error\n      })\n    }\n  }\n\n  render() {\n    return (\n      <AppLayout title=\"Service\" {...this.props} >\n        <Grid container justify=\"flex-end\" spacing={32} >\n          <Grid item xs={12}>\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n              <MUIDataTable\n                title=\"Service List\"\n                data={this.state.serviceList}\n                columns={columns}\n                options={{\n                  customToolbar: () => {\n                    return (\n                      <React.Fragment>\n                        <Tooltip title={\"Add Category\"}>\n                          <IconButton onClick={this.handleAddCategory}>\n                            <CategoryIcon />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title={\"Add Service\"}>\n                          <IconButton onClick={this.handleAddService}>\n                            <AddIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </React.Fragment>\n                    );\n                  },\n                  onRowClick: (rowData, rowMeta) => {\n                    this.handleRowClick(rowMeta);\n                  },\n                  onRowsDelete: rowsDeleted => {\n                    this.handleRowDelete(rowsDeleted.data);\n                  },\n                  filterType: 'checkbox',\n                }}\n              />\n            </MuiThemeProvider>\n          </Grid>\n        </Grid>\n\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Service);\n","import React from 'react';\nimport Select from 'react-select';\nimport Picky from 'react-picky';\nimport 'react-picky/dist/picky.css';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress,\n} from '@material-ui/core';\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n\n});\n\nclass NewStaff extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            staffList: [],\n            arrayValue: [],\n            categoryList: [],\n            selectedCategory: null,\n        };\n        this.selectMultipleOption = this.selectMultipleOption.bind(this);\n    }\n\n    selectMultipleOption(value) {\n        this.setState({ arrayValue: value });\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await fetchAPI('GET', 'staffMgt/workingStaff');\n            const categoryList = await fetchAPI('GET', 'serviceMgt/category');\n            this.setState({\n                staffList: response,\n                categoryList: categoryList,\n                selectedCategory: categoryList[0]\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleChangeCategory = (event) => {\n        this.setState({\n            selectedCategory: event\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <AppLayout title=\"New Service\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            Service Details\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n                    <Formik\n                        initialValues={{ name: '', price: '', duration: '' }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.name) { errors.name = 'Please enter service name' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting, setErrors }) => {\n                            try {\n                                let rawStaffList = this.state.arrayValue;\n                                if (rawStaffList.length <= 0) {\n                                    Swal.fire({\n                                        type: 'error', text: 'Please try again.',\n                                        title: \"Please select a staff\"\n                                    })\n                                    setSubmitting(false);\n                                    return\n                                } else {\n                                    let staffList = [];\n                                    for (let i = 0; i < rawStaffList.length; i++) {\n                                        staffList.push(rawStaffList[i]._id)\n                                    }\n                                    values.staff = staffList;\n                                }\n                                values.category = this.state.selectedCategory.value;\n\n                                const respObj = await fetchAPI('POST', 'serviceMgt/services', values);\n\n                                if (respObj && respObj.ok) {\n\n                                    window.history.back();\n                                } else {\n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"name\" label=\"Service Name\"\n                                />\n\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"price\" label=\"Price ($)\" type=\"number\"\n                                />\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"duration\" label=\"Duration (min)\" type=\"number\"\n                                />\n                                <Typography>\n                                    <h5>\n                                        Category\n                                    </h5>\n                                </Typography>\n                                <Select className={classes.select}\n                                    onChange={this.handleChangeCategory}\n                                    options={this.state.categoryList}\n                                    value={this.state.selectedCategory}\n                                />\n                                <Typography>\n                                    <h5>\n                                        Select staff who perform this service.\n                                    </h5>\n                                </Typography>\n                                <Picky\n                                    value={this.state.arrayValue}\n                                    options={this.state.staffList}\n                                    onChange={this.selectMultipleOption}\n                                    numberDisplayed={10}\n                                    valueKey=\"_id\"\n                                    labelKey=\"displayName\"\n                                    multiple={true}\n                                    includeSelectAll={true}\n                                    includeFilter={true}\n                                    dropdownHeight={600}\n                                />\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Register\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(NewStaff);","import React from 'react';\nimport Select from 'react-select';\nimport Picky from 'react-picky';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress, Paper, Box,\n} from '@material-ui/core';\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nclass ClientDetail extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            staffList: [],\n            arrayValue: [],\n            categoryList: [],\n            selectedCategory: { value: this.props.location.state.data.category.value, label: this.props.location.state.data.category.name },\n        };\n        this.selectMultipleOption = this.selectMultipleOption.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await fetchAPI('GET', 'staffMgt/workingStaff');\n            const categoryList = await fetchAPI('GET', 'serviceMgt/category');\n            if (this.props.location.state.data.staff === \"All Staff\") {\n                this.setState({ arrayValue: response });\n            } else {\n                const service = await fetchAPI('GET', `serviceMgt/services/${this.props.location.state.data._id}`);\n                this.setState({ arrayValue: service.staff });\n            }\n            this.setState({\n                staffList: response,\n                categoryList: categoryList\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    selectMultipleOption(value) {\n        this.setState({ arrayValue: value });\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n    };\n\n    handleChangeCategory = (event) => {\n        this.setState({\n            selectedCategory: event\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <AppLayout title=\"Service Details\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Paper>\n                        <Box p={2}>\n                            <Typography>\n                                <h3>\n                                    Service Details\n                        </h3>\n                            </Typography>\n                            <CssBaseline />\n                            <Formik\n                                initialValues={{ name: this.props.location.state.data.name, category: this.props.location.state.data.category, price: this.props.location.state.data.price, duration: this.props.location.state.data.duration }}\n                                validate={values => {\n                                    const errors = {};\n                                    if (!values.name) { errors.name = 'Please enter service name' }\n                                    return errors;\n                                }}\n                                onSubmit={async (values, { setSubmitting, setErrors }) => {\n                                    try {\n                                        let rawStaffList = this.state.arrayValue;\n                                        if (rawStaffList.length <= 0) {\n                                            Swal.fire({\n                                                type: 'error',\n                                                title: \"Please select a staff...\",\n                                            })\n                                            setSubmitting(false);\n                                            return\n                                        } else {\n                                            let staffList = [];\n                                            for (let i = 0; i < rawStaffList.length; i++) {\n                                                staffList.push(rawStaffList[i]._id)\n                                            }\n                                            values.staff = staffList;\n                                        }\n                                        values.category = this.state.selectedCategory.value;\n                                        const respObj = await fetchAPI('PATCH', `serviceMgt/services/${this.props.location.state.data._id}`, values);\n\n                                        if (respObj && respObj.ok) {\n\n                                            window.history.back();\n                                        } else {\n                                            Swal.fire({\n                                                type: 'error', text: respObj.error,\n                                                title: \"Opps... Something Wrong...\"\n                                            })\n                                        }\n                                    } catch (error) {\n                                        Swal.fire({\n                                            type: 'error', text: error,\n                                            title: \"Opps... Something Wrong...\"\n                                        })\n                                    }\n                                    setSubmitting(false);\n                                }}\n                                render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                                    <Form>\n\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth autoFocus\n                                            name=\"name\" label=\"Service Name\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"price\" label=\"Price ($)\" type=\"number\"\n                                        />\n                                        <Field\n                                            component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                            name=\"duration\" label=\"Duration (min)\" type=\"number\"\n                                        />\n                                        <Typography>\n                                            <h5>\n                                                Category\n                                            </h5>\n                                        </Typography>\n                                        <Select className={classes.select}\n                                            onChange={this.handleChangeCategory}\n                                            options={this.state.categoryList}\n                                            value={this.state.selectedCategory}\n                                        />\n                                        <Typography>\n                                            <h5>\n                                                Select staff who perform this service.\n                                            </h5>\n                                        </Typography>\n                                        <Picky\n                                            value={this.state.arrayValue}\n                                            options={this.state.staffList}\n                                            onChange={this.selectMultipleOption}\n                                            numberDisplayed={10}\n                                            valueKey=\"_id\"\n                                            labelKey=\"displayName\"\n                                            multiple={true}\n                                            includeSelectAll={true}\n                                            includeFilter={true}\n                                            dropdownHeight={600}\n                                        />\n\n                                        <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                            disabled={isSubmitting} onClick={submitForm}\n                                        >\n                                            Update\n                                        </Button>\n                                        <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                            onClick={() => { window.history.back(); }}\n                                        >\n                                            Cancel\n                                        </Button>\n                                        {isSubmitting && <LinearProgress />}\n                                    </Form>\n                                )}\n                            />\n                        </Box>\n                    </Paper>\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(ClientDetail);\n","import React from 'react';\nimport Picky from 'react-picky';\nimport 'react-picky/dist/picky.css';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, CssBaseline, Container, LinearProgress\n} from '@material-ui/core';\n\nimport { Formik, Field, Form } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { fetchAPI } from '../../utils';\nimport Swal from 'sweetalert2';\nimport AppLayout from '../../Component/Layout/Layout'\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n});\n\nclass NewStaff extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            staffList: [],\n            arrayValue: []\n        };\n        this.selectMultipleOption = this.selectMultipleOption.bind(this);\n    }\n\n    selectMultipleOption(value) {\n        this.setState({ arrayValue: value });\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await fetchAPI('GET', 'staffMgt/workingStaff');\n            this.setState({ staffList: response });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <AppLayout title=\"New Category\" {...this.props} >\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography>\n                        <h3>\n                            Service Category\n                        </h3>\n                    </Typography>\n                    <CssBaseline />\n                    <Formik\n                        initialValues={{ name: '' }}\n                        validate={values => {\n                            const errors = {};\n                            if (!values.name) { errors.name = 'Please enter category name' }\n                            return errors;\n                        }}\n                        onSubmit={async (values, { setSubmitting, setErrors }) => {\n                            try {\n\n                                const respObj = await fetchAPI('POST', 'serviceMgt/category', values);\n\n                                if (respObj && respObj.ok) {\n                                    window.history.back();\n                                } else {\n                                    Swal.fire({\n                                        type: 'error',\n                                        title: \"Opps... Something Wrong...\",\n                                        text: respObj.error\n                                    })\n                                }\n                            } catch (error) {\n                                Swal.fire({\n                                    type: 'error',\n                                    title: \"Opps... Something Wrong...\",\n                                    text: error\n                                })\n                            }\n                            setSubmitting(false);\n                        }}\n                        render={({ submitForm, isSubmitting, values, setFieldValue, errors, setErrors }) => (\n                            <Form>\n                                <Field\n                                    component={TextField} variant=\"outlined\" margin=\"normal\" fullWidth\n                                    name=\"name\" label=\"Category Name\"\n                                />\n\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    disabled={isSubmitting} onClick={submitForm}\n                                >\n                                    Create\n                                </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    onClick={() => { window.history.back(); }}\n                                >\n                                    Cancel\n                                </Button>\n                                {isSubmitting && <LinearProgress />}\n                            </Form>\n                        )}\n                    />\n                </Container>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(NewStaff);","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Grid\n} from '@material-ui/core';\n\nimport MUIDataTable from \"mui-datatables\";\nimport Swal from 'sweetalert2';\nimport { fetchAPI } from '../../utils';\nimport AppLayout from '../../Component/Layout/Layout'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n});\n\nconst columns = [\n    {\n        name: \"client.displayName\",\n        label: \"Customer Name\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        name: \"paymentType\",\n        label: \"Payment Method\",\n        options: {\n            filter: true,\n            sort: true,\n        }\n    },\n    {\n        name: \"discount\",\n        label: \"Discount\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        name: \"addon\",\n        label: \"Add-ons\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        name: \"total\",\n        label: \"Total\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    },\n    {\n        name: \"createdAt\",\n        label: \"Date\",\n        options: {\n            filter: false,\n            sort: true,\n        }\n    }\n];\n\nclass Invoice extends React.Component {\n\n\n    state = {\n        invoiceList: [],\n        displayServiceList: []\n    };\n\n    getMuiTheme = () => createMuiTheme({\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: \"100px\"\n                },\n            }\n        }\n    })\n\n    async componentDidMount() {\n        try {\n            let invoiceList = await fetchAPI('GET', 'invoiceMgt/invoicelist');\n            invoiceList.map(invoice => {\n                invoice.createdAt = new Date(invoice.createdAt).toLocaleDateString()\n            })\n            this.setState({\n                invoiceList: invoiceList\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleRowClick = async (rowMeta) => {\n        let invoice = await fetchAPI('GET', `invoiceMgt/invoice/${this.state.invoiceList[rowMeta.dataIndex]._id}`)\n        const { history } = this.props;\n        history.push({\n            pathname: \"/invoice/detail\",\n            state: {\n                invoice: invoice\n            }\n        });\n    }\n\n    async handleRowDelete(rowsDeleted) {\n        try {\n            const deleteObjList = rowsDeleted.map((row) => {\n                return this.state.invoiceList[row.dataIndex]\n            });\n            const response = await fetchAPI('DELETE', 'invoiceMgt/invoice', deleteObjList);\n            if (response && response.ok) {\n                Swal.fire({\n                    type: 'success', text: response.ok,\n                    title: \"Success!\"\n                })\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: response.error\n                })\n            }\n        }\n        catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppLayout title=\"Invoice\" {...this.props} >\n                <Grid container justify=\"flex-end\" spacing={32} >\n                    <Grid item xs={12}>\n                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                            <MUIDataTable\n                                title=\"Service List\"\n                                data={this.state.invoiceList}\n                                columns={columns}\n                                options={{\n                                    onRowClick: (rowData, rowMeta) => {\n                                        this.handleRowClick(rowMeta);\n                                    },\n                                    onRowsDelete: rowsDeleted => {\n                                        this.handleRowDelete(rowsDeleted.data);\n                                    },\n                                    filterType: 'checkbox',\n                                }}\n                            />\n                        </MuiThemeProvider>\n                    </Grid>\n                </Grid>\n            </AppLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(Invoice);\n","import React from 'react';\nimport {\n    Grid, TextField, Paper, ListItem,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n    listitem: {\n        margin: theme.spacing(1),\n        width: '100%'\n    },\n});\n\nclass Invoice extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            // <Paper className={classes.paperMargin}>\n            <ListItem >\n                <Grid\n                    container\n                    direction=\"column\">\n                    <Grid item>\n                        <Grid\n                            container\n                            justify=\"space-between\"\n                            direction=\"row\">\n                            <h3><strong>{this.props.booking.service.name}</strong></h3>\n                            <h3><strong>S${this.props.booking.service.price}</strong></h3>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <light>{new Date(this.props.booking.start).toTimeString().split(' ')[0]} with {this.props.booking.staff.displayName} </light>\n                    </Grid>\n                </Grid>\n            </ListItem>\n            // </Paper>\n        )\n    }\n}\nexport default withStyles(styles)(Invoice);","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Grid, TextField, Paper, ListItem, Button, Divider, List, IconButton, AppBar, Toolbar, Typography, Container\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport Swal from 'sweetalert2';\nimport Invoice from '../../Component/Invoice/Invoice'\nimport { fetchAPI } from '../../utils';\n\nconst styles = theme => ({\n    checkoutBtn: {\n        marginTop: 5,\n        marginBottom: 5,\n        width: \"22%\",\n        minHeight: 100,\n    },\n    titleBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    paperMargin: {\n        margin: theme.spacing(1),\n        minWidth: 800,\n        maxWidth: 800\n    },\n});\n\nclass InvoiceDetail extends React.Component {\n\n    state = {\n        bookingList: [],\n        client: null,\n        total: null,\n        subtotal: null,\n        addon: null,\n        discount: null,\n        remark: \"\",\n        isCheckout: false,\n        createdAt: null,\n        paymentType: null,\n    }\n\n    async componentDidMount() {\n        try {\n            if (this.props.location.state.appointment) {\n                let appointment = this.props.location.state.appointment\n                let subtotal = 0\n                appointment.bookings.map(booking => {\n                    subtotal += parseFloat(booking.service.price)\n                })\n                this.setState({\n                    bookingList: appointment.bookings,\n                    client: appointment.bookings[0].client,\n                    subtotal: subtotal,\n                    total: subtotal,\n                    isCheckout: appointment.checkout,\n                })\n            } else {\n                let invoice = this.props.location.state.invoice\n                this.setState({\n                    bookingList: invoice.appointment.bookings,\n                    client: invoice.client.displayName,\n                    subtotal: invoice.subtotal,\n                    total: invoice.total,\n                    addon: invoice.addon,\n                    discount: invoice.discount,\n                    paymentType: invoice.paymentType,\n                    isCheckout: true,\n                    createdAt: invoice.createdAt\n                })\n            }\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleChange = (event, type) => {\n        if (type !== \"remark\") {\n            this.setState({\n                ...this.state, [type]: Math.abs(parseFloat(event.target.value)),\n            });\n            this.setState((prevState, props) => {\n                return { total: prevState.subtotal + prevState.addon - prevState.discount }\n            })\n        } else {\n            this.setState({ ...this.state, [type]: event.target.value });\n        }\n    };\n\n\n    handleConfirmCheckout = (type) => {\n        Swal.fire({\n            type: 'info',\n            title: \"Confirm to check out ?\",\n            animation: false,\n            showCancelButton: true,\n            cancelButtonColor: '#d33',\n            confirmButtonColor: '#08a325',\n            confirmButtonText: 'Confirm',\n            reverseButtons: true,\n            preConfirm: () => {\n                let values = {\n                    subtotal: this.state.subtotal,\n                    client: this.state.client._id,\n                    discount: this.state.discount ? this.state.discount : 0,\n                    addon: this.state.addon ? this.state.addon : 0,\n                    total: this.state.total,\n                    remark: this.state.remark,\n                    paymentType: type,\n                    appointment: this.state.bookingList[0].appointment,\n                }\n                if (type === \"Credit\") {\n                    fetchAPI('POST', `invoiceMgt/useCredit/${this.state.client._id}`, { total: this.state.total, bookings: this.state.bookingList }).then(respObj => {\n                        if (respObj && respObj.ok) {\n                            this.checkout(values)\n                        } else {\n                            Swal.fire({\n                                type: 'error',\n                                title: \"Opps... Something Wrong...\",\n                                text: respObj.error\n                            })\n                        }\n                    }).catch(error => {\n                        Swal.fire({\n                            type: 'error',\n                            title: \"Opps... Something Wrong...\",\n                            text: error\n                        })\n                    })\n                } else {\n                    this.checkout(values)\n                }\n\n            }\n\n        })\n    }\n\n    checkout = (values) => {\n        fetchAPI('POST', `invoiceMgt/invoice`, values).then(respObj => {\n            if (respObj && respObj.ok) {\n                let invoice = respObj.invoice\n                this.setState({\n                    bookingList: invoice.appointment.bookings,\n                    client: invoice.client.displayName,\n                    subtotal: invoice.subtotal,\n                    total: invoice.total,\n                    addon: invoice.addon,\n                    discount: invoice.discount,\n                    isCheckout: true,\n                    createdAt: invoice.createdAt\n                })\n                Swal.fire({\n                    type: 'success', text: respObj.ok,\n                    title: \"Success!\"\n                })\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        })\n    }\n\n    handleClose = () => {\n        window.history.back()\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <AppBar className={classes.titleBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            {this.state.isCheckout ? \"Invoice\" : \"Checkout\"}\n                        </Typography>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Grid\n                    container\n                    direction=\"column\"\n                    alignItems=\"center\">\n                    <Paper className={classes.paperMargin}>\n                        {\n                            this.state.bookingList.map(booking => {\n                                return <Invoice booking={booking}> </Invoice>\n                            })\n                        }\n                    </Paper>\n                    <Paper style={{ marginTop: 10 }}>\n                        <ListItem style={{ width: 800 }}>\n                            <Grid\n                                container\n                                justify=\"space-between\"\n                                direction=\"row\">\n                                {this.state.isCheckout ? null :\n                                    <React.Fragment>\n                                        <TextField variant=\"outlined\" margin=\"normal\" type=\"number\" label=\"Discount\" value={this.state.discount}\n                                            onChange={(event) => this.handleChange(event, 'discount')} ></TextField>\n                                        <TextField variant=\"outlined\" margin=\"normal\" type=\"number\" label=\"Add-on\" value={this.state.addon}\n                                            onChange={(event) => this.handleChange(event, 'addon')} ></TextField>\n                                        <TextField variant=\"outlined\" margin=\"normal\" label=\"Remark\" value={this.state.remark}\n                                            onChange={(event) => this.handleChange(event, 'remark')}></TextField>\n                                    </React.Fragment>\n                                }\n                                <Grid\n                                    container\n                                    alignItems=\"flex-end\"\n                                    direction=\"column\">\n                                    <Grid item>\n                                        <List style={{ minWidth: 350 }}>\n                                            <ListItem>\n                                                <Typography>\n                                                    <strong> Customer Name : {this.state.client ? this.state.client.displayName : null} </strong>\n                                                </Typography>\n                                            </ListItem>\n                                            <ListItem>\n                                                <Grid\n                                                    container\n                                                    justify=\"space-between\"\n                                                    direction=\"row\">\n                                                    <div>Subtotal</div>\n                                                    <div>${this.state.subtotal}</div>\n                                                </Grid>\n                                            </ListItem>\n                                            <Divider />\n                                            <ListItem>\n                                                <Grid\n                                                    container\n                                                    justify=\"space-between\"\n                                                    direction=\"row\">\n                                                    <div>Discount</div>\n                                                    <div>${this.state.discount ? this.state.discount : 0}</div>\n                                                </Grid>\n                                            </ListItem>\n                                            <ListItem>\n                                                <Grid\n                                                    container\n                                                    justify=\"space-between\"\n                                                    direction=\"row\">\n                                                    <div>Add-on</div>\n                                                    <div>${this.state.addon ? this.state.addon : 0}</div>\n                                                </Grid>\n                                            </ListItem>\n                                            <Divider />\n                                            <ListItem>\n                                                <Grid\n                                                    container\n                                                    justify=\"space-between\"\n                                                    direction=\"row\">\n                                                    <div>Total</div>\n                                                    <div>${this.state.total}</div>\n                                                </Grid>\n                                            </ListItem>\n                                            {this.state.isCheckout ?\n                                                <React.Fragment>\n                                                    <ListItem>\n                                                        <Grid\n                                                            container\n                                                            justify=\"space-between\"\n                                                            direction=\"row\">\n                                                            <div>Payment Method</div>\n                                                            <div>{this.state.paymentType}</div>\n                                                        </Grid>\n                                                    </ListItem>\n                                                    <ListItem>\n                                                        <Grid\n                                                            container\n                                                            justify=\"space-between\"\n                                                            direction=\"row\">\n                                                            <div>Date</div>\n                                                            <div>{new Date(this.state.createdAt).toLocaleString()}</div>\n                                                        </Grid>\n                                                    </ListItem>\n                                                </React.Fragment> : null\n                                            }\n                                        </List>\n                                    </Grid>\n                                </Grid>\n                                {\n                                    this.state.isCheckout ?\n                                        null :\n                                        <Grid\n                                            container\n                                            justify=\"space-evenly\"\n                                            direction=\"row\">\n                                            <Button className={classes.checkoutBtn} variant=\"contained\" color=\"primary\" onClick={() => this.handleConfirmCheckout(\"Credit\")}>\n                                                Credit\n                                            </Button>\n                                            <Button className={classes.checkoutBtn} variant=\"contained\" color=\"primary\" onClick={() => this.handleConfirmCheckout(\"Cash\")}>\n                                                Cash\n                                            </Button>\n                                            <Button className={classes.checkoutBtn} variant=\"contained\" color=\"primary\" onClick={() => this.handleConfirmCheckout(\"Card\")}>\n                                                Card\n                                            </Button>\n                                            <Button className={classes.checkoutBtn} variant=\"contained\" color=\"primary\" onClick={() => this.handleConfirmCheckout(\"Others\")}>\n                                                Others\n                                            </Button>\n                                        </Grid>\n                                }\n                            </Grid>\n                        </ListItem>\n                    </Paper>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(InvoiceDetail);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Typography, Fab, Hidden\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nimport AppLayout from '../Component/Layout/Layout'\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nclass Message extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppLayout title=\"Message\" {...this.props} >\n        <Typography component=\"div\"  >\n          <h3>\n            Hello World, i'm Message\n      </h3>\n        </Typography>\n        <Hidden mdUp>\n          <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n            <AddIcon />\n          </Fab>\n        </Hidden>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Message);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Typography, Fab, Hidden\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nimport AppLayout from '../Component/Layout/Layout'\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nclass Report extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppLayout title=\"Report\" {...this.props} >\n        <Typography component=\"div\"  >\n          <h3>\n            Hello World, i'm Report\n      </h3>\n        </Typography>\n        <Hidden mdUp>\n          <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n            <AddIcon />\n          </Fab>\n        </Hidden>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Report);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n  Typography, Fab, Hidden\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nimport AppLayout from '../Component/Layout/Layout'\n\nconst styles = theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n});\n\nclass Setting extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppLayout title=\"Setting\" {...this.props} >\n        <Typography component=\"div\"  >\n          <h3>\n            Hello World, i'm Setting\n      </h3>\n        </Typography>\n        <Hidden mdUp>\n          <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n            <AddIcon />\n          </Fab>\n        </Hidden>\n      </AppLayout>\n    );\n  }\n}\n\nexport default withStyles(styles)(Setting);\n","import React from 'react';\nimport { Animated } from \"react-animated-css\";\nimport { Paper, IconButton, Button, Typography } from '@material-ui/core';\nimport { Home as HomeIcon } from '@material-ui/icons';\nimport Swal from 'sweetalert2';\nimport BackGroundImage from '../../../images/kiosk_bg.png';\n\nconst HomeButton = (props) => {\n    if (!props.homePage) {\n        return (\n            <IconButton onClick={() => { props.history.push('/start'); }} color=\"primary\" style={{ position: 'fixed', top: 50, left: 50 }}>\n                <HomeIcon style={{ height: 50, width: 50 }} />\n            </IconButton>\n        )\n    } else {\n        return null;\n    }\n}\n\nconst SkipButton = (props) => {\n    if (props.skip) {\n        return (\n            <Button onClick={() => {\n                props.history.push('/start');\n                Swal.fire({\n                    type: 'success', text: \"Register Success\",\n                    title: \"Success!\"\n                })\n            }} color=\"primary\" style={{ position: 'fixed', fontSize: 30, right: 50, top: 50 }}>\n                Skip\n            </Button>\n        )\n    } else {\n        return null;\n    }\n}\n\nconst WelcomeMessage = (props) => {\n    if (props.displayName) {\n        return (\n            <Typography style={{ fontSize: 50, position: 'fixed', top: props.imageWidth + props.imagePadding }} color=\"primary\">\n                Welcome {props.displayName}\n            </Typography>\n        );\n    }\n    else {\n        return null;\n    }\n}\n\n\n\nconst KioskLayout = (props) => {\n    return (\n        <div>\n            <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n                <Paper style={{ zIndex: -1, display: 'flex', justifyContent: 'center', alignItems: 'center', height: \"100vh\", backgroundImage: `url(${BackGroundImage})` }}>\n                    <img src={require('../../../images/logo.png')} alt=\"\" style={{ width: props.imageWidth, position: 'fixed', top: props.imagePadding }} />\n                    <WelcomeMessage {...props} displayName={props.displayName} />\n                    <HomeButton {...props} homePage={props.homePage} />\n                    <SkipButton {...props} skip={props.skip} />\n                    {props.children}\n                </Paper>\n            </Animated>\n        </div>\n    )\n}\n\nexport default KioskLayout;\n","import React from 'react';\nimport { Animated } from \"react-animated-css\";\nimport { ButtonBase, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { removeToken, removeLocalStorage, removeClient } from '../../utils';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport Swal from 'sweetalert2'\nimport LoginImage from '../../images/login.png';\nimport RegisterImage from '../../images/register.png';\n\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    container: {\n        display: 'flex',\n    },\n    paper: {\n        margin: theme.spacing(1),\n    },\n    svg: {\n        width: 100,\n        height: 100,\n    },\n    polygon: {\n        fill: theme.palette.common.white,\n        stroke: theme.palette.divider,\n        strokeWidth: 1,\n    },\n    button: {\n        height: \"10%\",\n        width: \"20%\",\n    },\n    image: {\n        position: 'relative',\n        height: 200,\n        [theme.breakpoints.down('xs')]: {\n            width: '100% !important', // Overrides inline-style\n            height: '100% !important', // Overrides inline-style\n        },\n        '&:hover, &$focusVisible': {\n            zIndex: 1,\n            '& $imageBackdrop': {\n                opacity: 0.15,\n            },\n            '& $imageMarked': {\n                opacity: 0,\n            },\n            '& $imageTitle': {\n                border: '4px solid currentColor',\n            },\n        },\n    },\n    imageSrc: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center 40%',\n    },\n});\n\nclass FacialLogin extends React.Component {\n\n    componentDidMount() {\n        try {\n            removeLocalStorage(\"userid\");\n            removeToken();\n            removeClient();\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleRegisterClick = () => {\n        const { history } = this.props;\n        setTimeout(function () {\n            history.push('/register');\n        }, 500);\n    }\n\n    handleFacialLoginClick = () => {\n        const { history } = this.props;\n        setTimeout(function () {\n            history.push('/mobilelogin');\n        }, 500);\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <KioskLayout {...this.props} imageWidth={320} imagePadding={50} homePage={true} >\n                <Grid\n                    container\n                    spacing={5}\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <Animated animationInDelay={500} animationIn=\"bounceInLeft\" animationOut=\"fadeOut\" >\n                            <ButtonBase\n                                focusRipple\n                                className={classes.image}\n                                focusVisibleClassName={classes.focusVisible}\n                                style={{\n                                    width: 300,\n                                    height: 360,\n                                }}\n                                onClick={this.handleRegisterClick}\n                            >\n                                <span\n                                    className={classes.imageSrc}\n                                    style={{\n                                        backgroundImage: `url(${RegisterImage})`,\n                                    }}\n                                />\n                            </ButtonBase>\n                        </Animated>\n                    </Grid>\n                    <Grid item>\n                        <Animated animationInDelay={500} animationIn=\"bounceInRight\" animationOut=\"fadeOut\">\n                            <ButtonBase\n                                focusRipple\n                                className={classes.image}\n                                focusVisibleClassName={classes.focusVisible}\n                                style={{\n                                    width: 300,\n                                    height: 360,\n                                }}\n                                onClick={this.handleFacialLoginClick}\n                            >\n                                <span\n                                    className={classes.imageSrc}\n                                    style={{\n                                        backgroundImage: `url(${LoginImage})`,\n                                    }}\n                                />\n                            </ButtonBase>\n                        </Animated>\n                    </Grid>\n                </Grid>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(FacialLogin);\n","import React from 'react';\nimport { Animated } from \"react-animated-css\";\nimport {\n    Button, Grid, Typography,\n    InputLabel, FormControl, Select, Input, MenuItem,\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fetchAPI, getClient } from '../../../utils';\nimport Swal from 'sweetalert2';\n\nconst fontSize = 40;\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    submit: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    cancel: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 500,\n    },\n    bold: {\n        margin: theme.spacing(1),\n        fontWeight: 500,\n    },\n});\n\nclass SelectService extends React.Component {\n\n    state = {\n        selectedServiceData: '',\n        selectedService: '',\n        selectedServiceCategory: '',\n        selectedStaff: '',\n        serviceList: [],\n        staffList: [],\n        displayName: '',\n        categoryList: [],\n        paddingTop: 10,\n    };\n\n    async componentWillMount() {\n        try {\n            const categoryList = await fetchAPI('GET', 'kioskMgt/category')\n            this.setState({\n                categoryList: categoryList\n            });\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleSelectStaffChange = (event) => {\n        this.setState({\n            selectedStaff: event.target.value,\n            paddingTop: 200\n        });\n    };\n\n    handleSelectServiceCategoryChange = async (event) => {\n        const serviceList = await fetchAPI('GET', `kioskMgt/availableservice/${event.target.value}`)\n        this.setState({\n            serviceList: serviceList,\n            selectedServiceCategory: event.target.value,\n            selectedService: ''\n        });\n    };\n\n    handleSelectServiceChange = (event, child) => {\n        this.setState({ selectedStaff: '' });\n        let index = child.props.id;\n        let start = new Date();\n        let end = new Date(start.getTime() + parseInt(this.state.selectedServiceData.duration) * 60000)\n        let values = {\n            ...this.state.serviceList[index],\n            start: start,\n            end: end,\n        }\n        fetchAPI('POST', 'kioskMgt/availablestaff', values).then(staffAvailable => {\n            if (staffAvailable.length === 0) {\n                staffAvailable = [\n                    {\n                        displayName: \"No Staff Available\"\n                    }\n                ]\n            }\n            this.setState({\n                selectedServiceData: this.state.serviceList[index],\n                selectedService: event.target.value,\n                staffList: staffAvailable\n            });\n        });\n    };\n\n    submit() {\n        let client = getClient()\n        let data = {}\n        data.total = this.state.selectedServiceData.price;\n        data.service = this.state.selectedServiceData.name\n        fetchAPI('POST', `kioskMgt/useCredit/${client._id}`, data).then(service => {\n            if (service.ok) {\n                let start = new Date();\n                let end = new Date(start.getTime() + parseInt(this.state.selectedServiceData.duration) * 60000)\n                let values = [{\n                    category: this.state.selectedServiceCategory,\n                    client: client._id,\n                    service: this.state.selectedService,\n                    start: start,\n                    end: end,\n                    staff: this.state.selectedStaff,\n                }]\n                fetchAPI('POST', 'kioskMgt/appointment', values).then(respObj => {\n                    if (respObj && respObj.ok) {\n                        let values = {\n                            subtotal: data.total,\n                            client: client._id,\n                            discount: 0,\n                            addon: 0,\n                            total: data.total,\n                            remark: '',\n                            paymentType: \"Credit\",\n                            appointment: respObj.appointmentId\n                        }\n                        this.checkout(values);\n                    } else {\n                        Swal.fire({\n                            type: 'error',\n                            title: \"Opps... Something Wrong...\",\n                            text: respObj.error,\n                            animation: false,\n                            customClass: {\n                                popup: 'animated tada'\n                            },\n                            preConfirm: () => {\n                                return this.props.history.push('/start')\n                            }\n                        })\n                    }\n                })\n            } else if (service.error) {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: service.error,\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    preConfirm: () => {\n                        return this.props.history.push('/start')\n                    }\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        });\n    }\n\n    checkout = (values) => {\n        fetchAPI('POST', `kioskMgt/invoice`, values).then(respObj => {\n            if (respObj && respObj.ok) {\n                Swal.fire({\n                    type: 'success',\n                    title: \"Please process to the waiting area!\",\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    allowOutsideClick: false,\n                    preConfirm: () => {\n                        return this.props.history.push('/start')\n                    }\n                })\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        let serviceDiv =\n            <FormControl className={classes.formControl} fullWidth >\n                <InputLabel htmlFor=\"age-native-simple\" style={{ fontSize: fontSize }}>Service Type</InputLabel>\n                <Select\n                    style={{ fontSize: fontSize, height: 100 }}\n                    value={this.state.selectedService}\n                    onChange={this.handleSelectServiceChange}\n                    input={<Input id=\"age-native-simple\" style={{ fontSize: fontSize }} />}\n                >\n                    {this.state.serviceList.map((service, i) => (\n                        <MenuItem id={i} value={service._id} style={{ fontSize: fontSize }}>\n                            {service.name}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n\n        let serviceInfoDiv =\n            <Animated key=\"serviceInfoDiv\" animationIn=\"fadeIn\" animationOut=\"fadeOut\" >\n                <FormControl className={classes.formControl} fullWidth>\n                    <InputLabel htmlFor=\"age-native-simple\" style={{ fontSize: fontSize }} >Staff Name</InputLabel>\n                    <Select\n                        style={{ fontSize: fontSize, height: 100 }}\n                        value={this.state.selectedStaff}\n                        onChange={this.handleSelectStaffChange}\n                        input={<Input id=\"age-native-simple\" style={{ fontSize: fontSize }} />}\n                    >\n                        {this.state.staffList.map(staff => (\n                            <MenuItem value={staff._id} style={{ fontSize: fontSize }}>\n                                {staff.displayName}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <Typography variant=\"h3\" className={classes.bold}> Price: ${this.state.selectedServiceData.price}</Typography>\n                <Typography variant=\"h3\" className={classes.bold}> Duration: {this.state.selectedServiceData.duration} mins</Typography>\n            </Animated>\n\n\n        let confirmDiv = <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\" key=\"confirmDiv\" >\n            <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                style={{ fontSize: fontSize }} onClick={() => this.submit()}\n            >\n                Confirm\n                </Button>\n            <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                onClick={() => { this.props.history.push('/start'); }} style={{ fontSize: fontSize }}\n            >\n                Cancel\n                </Button>\n        </Animated>\n\n        return (\n            <div style={{ display: \"block\", paddingTop: this.state.paddingTop }} >\n                <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\" animationInDelay={500} >\n                    <form >\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Grid item xs={12}>\n                                <FormControl className={classes.formControl} fullWidth >\n                                    <InputLabel htmlFor=\"age-native-simple\" style={{ fontSize: fontSize }}>Service Category</InputLabel>\n                                    <Select\n                                        style={{ fontSize: fontSize, height: 100 }}\n                                        value={this.state.selectedServiceCategory}\n                                        onChange={this.handleSelectServiceCategoryChange}\n                                        input={<Input id=\"age-native-simple\" style={{ fontSize: fontSize }} />}\n                                    >\n                                        {this.state.categoryList.map((category, i) => (\n                                            <MenuItem id={i} value={category._id} style={{ fontSize: fontSize }}>\n                                                {category.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item>\n                                {this.state.selectedServiceCategory ? serviceDiv : null}\n                            </Grid>\n                            <Grid item >\n                                {this.state.selectedService ? serviceInfoDiv : null}\n                            </Grid>\n                            <Grid item >\n                                {(this.state.selectedStaff && this.state.selectedService) ? confirmDiv : null}\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Animated>\n            </div >\n        )\n    }\n}\nexport default withStyles(styles)(SelectService);","import React from 'react';\nimport {\n    Button, Typography,\n} from '@material-ui/core';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport SelectService from '../../Component/Kiosk/Checkout/Checkout'\nimport { withStyles } from '@material-ui/styles';\nimport * as faceapi from 'face-api.js';\nimport Webcam from 'react-webcam';\nimport { fetchAPI, setToken, setClient } from '../../utils';\nimport Swal from 'sweetalert2';\n\nconst axios = require('axios');\nconst uriBase = 'https://spa-fr.cognitiveservices.azure.com/face/v1.0';\nconst subscriptionKey = '5463be0170e742d98bf5b3606727fbdb';\nconst STORAGE_URL = 'https://projectspa.blob.core.windows.net/spacontainer';\nconst MODEL_URL = '/models'\n\nlet faceBox = { detected: false, topLeftX: 0, topLeftY: 0, bottomRightX: 0, bottomRightY: 0 };\n\nconst videoConstraints = {\n    width: 800,\n    height: 600,\n    facingMode: 'user',\n};\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    submit: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    cancel: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    bold: {\n        margin: theme.spacing(3),\n        fontWeight: 500,\n    },\n});\n\nclass FacialLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            takingPicture: true,\n            timerOn: false,\n            timerTime: 3000,\n            displayName: '',\n            login: false,\n        }\n        this.webcam = React.createRef();\n        this.canvas = React.createRef();\n    }\n\n    componentDidMount() {\n        faceapi.loadFaceDetectionModel(MODEL_URL)\n            .then(() => faceapi.loadTinyFaceDetectorModel(MODEL_URL)\n                .then(() => {\n                    setTimeout(() => this.startDetection(), 1000);\n                })).catch(error => {\n                    Swal.fire({\n                        type: 'error',\n                        title: \"Opps... Something Wrong...\",\n                        text: error\n                    })\n                })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n        });\n        this.timer = setInterval(() => {\n            const newTime = this.state.timerTime - 1000;\n            if (newTime >= 0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({ timerOn: false });\n            }\n        }, 1000);\n    };\n\n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false, timerTime: 3000 });\n    };\n\n    getTL(v) {\n        v -= 70;\n        return ((v <= 0) ? 0 : v);\n    }\n    getBR(v, x) {\n        v += 70;\n        if (x) { return ((v > 640) ? 640 : v) }\n        else { return ((v > 480) ? 480 : v) }\n    }\n\n    faceAPIVerify(faceId, personId) {\n        const fullUrl = `${uriBase}/verify`\n\n        const options = {\n            method: 'POST',\n            url: fullUrl,\n            data: {\n                personGroupId: \"1\",\n                faceId: faceId,\n                personId: personId,\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n        };\n        axios(options).then(response => {\n            if (response.error) {\n                this.setState({ takingPicture: true });\n                Swal.fire({\n                    type: 'error',\n                    title: 'Oops...',\n                    text: 'Authendication fail!',\n                    showCancelButton: true,\n                    confirmButtonText: 'Re-try!',\n                    cancelButtonText: 'No, cancel!',\n                    reverseButtons: true,\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n                // return setTimeout(() => this.startDetection(), 500);\n            }\n            console.log(\"Verify:\")\n            console.log(response.data)\n            if (response.data.isIdentical) {\n                this.faceAPIGetPersonId(personId);\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: 'Oops...',\n                    text: 'Authendication fail!',\n                    showCancelButton: true,\n                    confirmButtonText: 'Re-try!',\n                    cancelButtonText: 'No, cancel!',\n                    reverseButtons: true,\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n            }\n        }).catch(error => {\n            console.log('Error: ', error);\n        });\n    }\n\n    faceAPIGetPersonId(personId) {\n        const fullUrl = `${uriBase}/persongroups/1/persons/${personId}`\n\n        const options = {\n            method: 'GET',\n            url: fullUrl,\n            headers: {\n                'Content-Type': 'application/json',\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n        };\n        axios(options).then(response => {\n            fetchAPI('GET', `kioskMgt/faciallogin/${response.data.name}`).then(respObj => {\n                if (respObj && respObj.ok) {\n                    console.log(\"Client: \")\n                    console.log(respObj)\n                    setToken(respObj.token);\n                    setClient(respObj.user);\n                    this.setState({\n                        displayName: respObj.user.displayName,\n                        login: true,\n                    })\n                } else {\n                    Swal.fire({\n                        type: 'error', text: 'Please try again.',\n                        title: \"Authentication fail!\",\n                        preConfirm: () => {\n                            return setTimeout(() => this.startDetection(), 500);\n                        }\n                    })\n                }\n            })\n        }).catch(error => {\n            console.log(error)\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: \"Authentication fail!\",\n                preConfirm: () => {\n                    return setTimeout(() => this.startDetection(), 500);\n                }\n            })\n        });\n    }\n\n    faceAPIIdentify(faceIdData) {\n        let faceIds = [];\n        for (let i = 0; i < faceIdData.length; i++) {\n            faceIds.push(faceIdData[i].faceId)\n        }\n        const fullUrl = `${uriBase}/identify`\n\n        const options = {\n            method: 'POST',\n            url: fullUrl,\n            data: {\n                personGroupId: \"1\",\n                faceIds: faceIds,\n                maxNumOfCandidatesReturned: 1,\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n        };\n        axios(options).then(response => {\n            if (response.error) {\n                this.setState({ takingPicture: true });\n                Swal.fire({\n                    type: 'error',\n                    title: 'Oops...',\n                    text: 'Authendication fail!',\n                    showCancelButton: true,\n                    confirmButtonText: 'Re-try!',\n                    cancelButtonText: 'No, cancel!',\n                    reverseButtons: true,\n                    animation: false,\n                    customClass: {\n                        popup: 'animated tada'\n                    },\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n                // return setTimeout(() => this.startDetection(), 500);\n            }\n            console.log(\"Identify: \")\n            console.log(response.data)\n            if (response.data[0].candidates[0]) {\n                this.faceAPIVerify(response.data[0].faceId, response.data[0].candidates[0].personId)\n            } else {\n                Swal.fire({\n                    type: 'error', text: 'Please try again.',\n                    title: \"Authentication fail!\",\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n\n            }\n        }).catch(error => {\n            console.log('Error: ', error);\n        });\n    }\n\n    faceAPIDetect(imageUrl) {\n        const fullUrl = `${uriBase}/detect?returnFaceId=true`\n        const options = {\n            method: 'POST',\n            url: fullUrl,\n            data: { url: imageUrl },\n            headers: {\n                'Content-Type': 'application/json',\n                'Ocp-Apim-Subscription-Key': subscriptionKey\n            }\n        };\n\n        axios(options).then(response => {\n            console.log(\"Detect: \")\n            console.log(response.data)\n            this.faceAPIIdentify(response.data);\n        }).catch(error => {\n            console.log('Error: ', error);\n        });\n    }\n\n    startDetection = () => {\n        try {\n            const { timerTime, timerOn } = this.state;\n            const canvas = document.getElementById('videoOverlay')\n            let video = this.webcam.current;\n            if (video && canvas && video.getCanvas()) {\n                video = video.getCanvas();\n                let inputSize = 512\n                let scoreThreshold = 0.5\n                faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions({ inputSize, scoreThreshold })).then((result) => {\n                    if (result) {\n                        if (!timerOn) {\n                            this.setState({ timerTime: 3000 });\n                            this.startTimer();\n                        }\n                        canvas.width = video.width;\n                        canvas.height = video.height;\n                        canvas.style.display = \"\";\n                        const dims = faceapi.matchDimensions(canvas, video, true)\n                        faceapi.draw.drawDetections(canvas, faceapi.resizeResults(result, dims))\n                        if (timerTime <= 0 && timerOn) {\n                            if (result.box) {\n                                let box = result.box;\n                                faceBox.detected = true;\n                                faceBox.topLeftX = this.getTL(box.x);\n                                faceBox.topLeftY = this.getTL(box.y);\n                                faceBox.bottomRightX = this.getBR((box.x + box.width), true);\n                                faceBox.bottomRightY = this.getBR((box.y + box.height), false);\n                            }\n                            canvas.getContext('2d').drawImage(video, 0, 0);\n                            this.capture(canvas.toDataURL('image/jpeg', 0.5))\n                            return;\n                        }\n                        return setTimeout(() => this.startDetection(), 300);\n                    } else {\n                        this.stopTimer();\n                        canvas.style.display = \"none\"\n                        return setTimeout(() => this.startDetection(), 300);\n                    }\n                });\n            }\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    capture = async (imageUrl) => {\n        try {\n            let data = {};\n            data.imagebase64 = imageUrl;\n            data.id = \"auth\";\n            const respObj = await fetchAPI('POST', 'kioskMgt/savephoto', data);\n            if (respObj && respObj.ok) {\n                this.faceAPIDetect(`${STORAGE_URL}/${data.id}.jpg`);\n            } else {\n                Swal.fire({\n                    type: 'error', text: 'Please try again.',\n                    title: \"Authentication fail!\",\n                    preConfirm: () => {\n                        return setTimeout(() => this.startDetection(), 500);\n                    }\n                })\n            }\n        } catch (error) {\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: \"Authentication fail!\",\n                preConfirm: () => {\n                    return setTimeout(() => this.startDetection(), 500);\n                }\n            })\n        }\n    };\n\n    render() {\n        let displayText;\n        if (this.state.timerOn) {\n            displayText = `Identifying, please keep still`\n        } else {\n            displayText = `Face not detected, adjust your position...`\n        }\n\n        return (\n            <KioskLayout {...this.props} imageWidth={200} imagePadding={40} displayName={this.state.displayName}>\n                <div style={{ flexDirection: 'column', alignItems: 'center', display: 'flex' }}>\n                    {!this.state.login ?\n                        <div style={{ flexDirection: 'column', alignItems: 'center', display: 'flex' }} >\n                            <div style={{ height: 480, width: 600, alignItems: 'center' }}>\n                                <Webcam\n                                    style={{ position: 'absolute', zIndex: 1 }}\n                                    audio={false}\n                                    height={480}\n                                    ref={this.webcam}\n                                    screenshotFormat=\"image/jpeg\"\n                                    width={600}\n                                    videoConstraints={videoConstraints}\n                                />\n                                <canvas id='videoOverlay' ref={this.canvas} style={{ height: 480, width: 600, position: 'relative', zIndex: 2 }} />\n                            </div>\n                            <div>\n                                <Typography style={{ fontSize: 30, fontWeight: 500 }} align=\"center\" color=\"primary\" >\n                                    {displayText}\n                                </Typography>\n                            </div>\n                            <Button onClick={() => { this.props.history.push('/mobilelogin'); }} variant=\"outlined\" color=\"primary\" style={{ top: 30, fontSize: 30 }}>\n                                Login By Mobile\n                        </Button>\n                        </div> : null\n                    }\n                    {this.state.login ?\n                        <SelectService {...this.props} />\n                        : null\n                    }\n                </div>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(FacialLogin);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Button, Typography, Dialog, DialogContent, Slide, TextField,\n} from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport Keyboard from \"react-simple-keyboard\";\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport { fetchAPI, setClient, setToken } from '../../utils';\n\nconst mainFontSize = 35;\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    login: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    cancel: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    bold: {\n        margin: theme.spacing(3),\n        fontWeight: 500,\n    },\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass MobileLogin extends React.Component {\n    state = {\n        layoutName: \"default\",\n        input: {},\n        inputName: \"mobile\",\n        keyboardOpen: false,\n    };\n\n    onChangeAll = inputObj => {\n        this.setState({\n            input: inputObj\n        });\n    };\n\n    onKeyPress = button => {\n        if (button === \"{enter}\") {\n            this.setState({\n                keyboardOpen: false\n            });\n        } else if (button === \"{clear}\") {\n            this.clearScreen();\n        }\n    };\n\n    onChangeInput = event => {\n        let inputVal = event.target.value;\n\n        let updatedInputObj = {\n            ...this.state.input,\n            [this.state.inputName]: inputVal\n        };\n\n        this.setState(\n            {\n                input: updatedInputObj\n            },\n            () => {\n                this.keyboard.setInput(inputVal);\n            }\n        );\n    };\n\n    setActiveInput = () => {\n        this.setState(\n            {\n                keyboardOpen: true\n            },\n        );\n    };\n\n    handleKeyboardClose = () => {\n        this.setState({ keyboardOpen: false });\n    }\n\n    login = async () => {\n        const { input } = this.state;\n\n        if (!input.mobile) {\n            Swal.fire({\n                type: 'error', text: 'Please enter mobile number',\n                title: \"Error\"\n            })\n            return;\n        } else if (input.mobile.length < 8) {\n            Swal.fire({\n                type: 'error', text: 'Mobile must be 8 digit',\n                title: \"Error\"\n            })\n            return;\n        }\n        fetchAPI('GET', `kioskMgt/mobilelogin/${input.mobile}`).then(respObj => {\n            if (respObj && respObj.ok) {\n                setToken(respObj.token);\n                setClient(respObj.user);\n                this.props.history.push('/clientdetails');\n            } else {\n                Swal.fire({\n                    type: 'error', text: 'Please try again.',\n                    title: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: error\n            })\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { input } = this.state;\n\n\n        return (\n            <KioskLayout {...this.props} imageWidth={200} imagePadding={10} displayName={this.state.displayName}>\n\n                <div style={{ flexDirection: 'column', alignItems: 'center', display: 'flex' }} >\n                    <div style={{ display: \"block\" }} >\n                        <Typography style={{ fontSize: 50, }} color=\"primary\">\n                            Login\n                            </Typography>\n                        <form style={{ flexDirection: 'column', alignItems: 'center', display: 'flex', minWidth: 600 }}>\n                            <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                                InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                                variant=\"outlined\" margin=\"normal\" fullWidth\n                                name=\"mobile\" label=\"Mobile\" type=\"number\"\n                                onClick={this.setActiveInput}\n                                value={input[\"mobile\"] || \"\"}\n                                onChange={e => this.onChangeInput(e)}\n                            />\n                            <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.login}\n                                style={{ fontSize: mainFontSize }} onClick={this.login}\n                            >\n                                Login\n                        </Button>\n                        </form>\n                    </div>\n                </div>\n                <Dialog\n                    fullWidth\n                    maxWidth=\"xl\"\n                    style={{ fontSize: mainFontSize }}\n                    open={this.state.keyboardOpen}\n                    onEnter={() => {\n                        //clear the display value when open\n                        var value = this.refs.displayValue;\n                        value.children[0].children[0].value = '';\n                    }}\n                    onClose={this.handleKeyboardClose}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogContent>\n                        <div>\n                            <TextField fullWidth InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                                ref=\"displayValue\" value={input[this.state.inputName]} placeholder={\"Tap to start\"} onChange={e => this.onChangeAll(e)} />\n                            <Keyboard\n                                keyboardRef={r => (this.keyboard = r)}\n                                inputName={this.state.inputName}\n                                layoutName={this.state.layoutName}\n                                onChangeAll={inputObj => this.onChangeAll(inputObj)}\n                                onKeyPress={button => this.onKeyPress(button)}\n                                theme={\"hg-theme-default hg-layout-default myTheme\"}\n                                layout={{\n                                    default: [\"1 2 3\", \"4 5 6\", \"7 8 9\", \"{bksp} 0 {enter}\"],\n                                }}\n                                display={{\n                                    '{bksp}': 'Bksp',\n                                    '{enter}': 'Enter',\n                                }}\n                            />\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(MobileLogin);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, Container, Dialog, DialogContent, Slide, TextField\n} from '@material-ui/core';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport { fetchAPI, setClient } from '../../utils';\nimport Swal from 'sweetalert2';\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    DatePicker,\n    MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nconst mainFontSize = 35;\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nconst genderOptions = [\n    { value: \"M\", label: 'M' },\n    { value: \"F\", label: 'F' },\n];\n\nclass Register extends React.Component {\n    state = {\n        layoutName: \"default\",\n        inputName: \"mobile\",\n        input: {},\n        submittedData: \"\",\n        gender: genderOptions[0],\n        keyboardOpen: false,\n        selectedDate: null,\n    };\n\n    handleGenderSelection = (gender) => {\n        this.setState({ gender });\n    }\n\n    onChangeAll = inputObj => {\n        this.setState({\n            input: inputObj\n        });\n    };\n\n    onKeyPress = button => {\n        if (button === \"{enter}\") {\n            this.setState({\n                keyboardOpen: false\n            });\n        } else if (button === \"{clear}\") {\n            this.clearScreen();\n        } else if (button === \"{shift}\") {\n            this.handleShift();\n        }\n    };\n\n    handleShift = () => {\n        let layoutName = this.state.layoutName;\n\n        this.setState({\n            layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n        });\n    };\n\n    clearScreen = () => {\n        let input = { ...this.state.input };\n        let inputName = this.state.inputName;\n        input[inputName] = \"\";\n\n        this.setState({ input }, () => {\n            this.keyboard.clearInput(inputName);\n        });\n    };\n\n    onChangeInput = event => {\n        let inputVal = event.target.value;\n\n        let updatedInputObj = {\n            ...this.state.input,\n            [this.state.inputName]: inputVal\n        };\n\n        this.setState(\n            {\n                input: updatedInputObj\n            },\n            () => {\n                this.keyboard.setInput(inputVal);\n            }\n        );\n    };\n\n    setActiveInput = inputName => {\n        if (inputName === 'mobile') {\n            this.setState({ layoutName: \"mobile\" })\n        } else {\n            this.setState({ layoutName: \"default\" })\n        }\n        var value = this.refs.displayValue;\n        // Disable password for register\n        // if (inputName === 'password' || inputName === 'confirmPassoword') {\n        //     value.children[0].children[0].type = 'password';\n        // } else {\n        value.children[0].children[0].type = 'text';\n        // }\n        this.setState(\n            {\n                inputName: inputName,\n                keyboardOpen: true\n            },\n        );\n    };\n\n    handleKeyboardClose = () => {\n        this.setState({ keyboardOpen: false });\n    }\n\n    submit = async () => {\n        const { input, gender } = this.state;\n        input.gender = gender.value;\n\n        if (!input.mobile) {\n            Swal.fire({\n                type: 'error', text: 'Please enter mobile number',\n                title: \"Error\"\n            })\n            return;\n        } else if (input.mobile.length < 8) {\n            Swal.fire({\n                type: 'error', text: 'Mobile must be 8 digit',\n                title: \"Error\"\n            })\n            return;\n        }\n        // Disable password for register\n        // else if (!input.password) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Please enter a password',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        // else if (!input.confirmPassoword) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Please enter a password',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        // else if (input.confirmPassoword !== input.password) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Password does not match',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        else if (!input.displayName) {\n            Swal.fire({\n                type: 'error', text: 'Please enter display name',\n                title: \"Error\"\n            })\n            return;\n        }\n        else if (!input.nric) {\n            Swal.fire({\n                type: 'error', text: 'Please enter NRIC',\n                title: \"Error\"\n            })\n            return;\n        }\n        try {\n            fetchAPI('POST', 'kioskMgt/clients', this.state.input).then(respObj => {\n                if (respObj && respObj.ok) {\n                    // disable for camera\n                    // setClient(respObj.user._id);\n                    // this.props.history.push('/snapshot');\n                    Swal.fire({\n                        type: 'success',\n                        title: \"Register Success!\",\n                        animation: false,\n                        customClass: {\n                            popup: 'animated tada'\n                        },\n                        preConfirm: () => {\n                            return this.props.history.push('/start')\n                        },\n                    })\n                } else {\n                    Swal.fire({\n                        type: 'error', text: 'Please try again.',\n                        title: respObj.error\n                    })\n                }\n            });\n        } catch (err) {\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: err.message\n            })\n        }\n    };\n\n    handleDateChange = (value) => {\n        this.setState({ selectedDate: value })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { input } = this.state;\n        return (\n            <KioskLayout {...this.props} imageWidth={160} imagePadding={10}>\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n                    <Typography style={{ fontSize: 50, }} color=\"primary\">\n                        New Client Onboard\n                            </Typography>\n                    <form>\n                        <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"mobile\" label=\"Mobile\" type=\"number\"\n                            onClick={() => this.setActiveInput(\"mobile\")}\n                            value={input[\"mobile\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        />\n\n                        {// Disable password for register\n                        /* <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"password\" label=\"Password\" type=\"password\"\n                            onClick={() => this.setActiveInput(\"password\")}\n                            value={input[\"password\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        /> */}\n                        {/* <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                            onClick={() => this.setActiveInput(\"confirmPassoword\")}\n                            value={input[\"confirmPassoword\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        /> */}\n                        <TextField style={{ backgroundColor: \"#f2f1ed\", fontSize: \"30px\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"displayName\" label=\"Display Name\"\n                            onClick={() => this.setActiveInput(\"displayName\")}\n                            value={input[\"displayName\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        />\n                        <TextField style={{ backgroundColor: \"#f2f1ed\", fontSize: \"30px\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"email\" label=\"Email\"\n                            onClick={() => this.setActiveInput(\"email\")}\n                            value={input[\"email\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        />\n                        <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"nric\" label=\"NRIC\"\n                            onClick={() => this.setActiveInput(\"nric\")}\n                            value={input[\"nric\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                        />\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <DatePicker\n                                autoOk\n                                disableFuture\n                                disableToolbar\n                                openTo=\"year\"\n                                format=\"dd/MM/yyyy\"\n                                label=\"Date of birth\"\n                                views={[\"year\", \"month\", \"date\"]}\n                                style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                                InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ shrink: true, style: { fontSize: mainFontSize } }}\n                                fullWidth\n                                margin=\"normal\"\n                                inputVariant=\"outlined\"\n                                variant=\"outlined\"\n                                value={this.state.selectedDate} onChange={this.handleDateChange} />\n                        </MuiPickersUtilsProvider>\n                        <Typography variant='h3' color='primary' gutterBottom>\n                            Gender\n                                </Typography>\n                        <Select className={classes.select}\n                            onChange={this.handleGenderSelection}\n                            options={genderOptions}\n                            value={this.state.gender}\n                            styles={{\n                                control: base => ({\n                                    ...base,\n                                    fontSize: mainFontSize,\n                                }),\n                                menu: base => ({\n                                    ...base,\n                                    fontSize: mainFontSize,\n                                })\n                            }}\n                        />\n\n                        <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                            style={{ fontSize: mainFontSize }} onClick={this.submit}\n                        >\n                            Register\n                                </Button>\n                        <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                            onClick={() => { window.history.back(); }} style={{ fontSize: mainFontSize }}\n                        >\n                            Cancel\n                                </Button>\n                    </form>\n                </Container>\n                <Dialog\n                    fullWidth\n                    maxWidth=\"xl\"\n                    style={{ fontSize: mainFontSize }}\n                    open={this.state.keyboardOpen}\n                    onEnter={() => {\n                        //clear the display value when open\n                        var value = this.refs.displayValue;\n                        value.children[0].children[0].value = '';\n                    }}\n                    onClose={this.handleKeyboardClose}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogContent>\n                        <div>\n                            <TextField InputProps={{ style: { fontSize: 30 } }} fullWidth\n                                ref=\"displayValue\" value={input[this.state.inputName]} placeholder={\"Tap to start\"} onChange={e => this.onChangeAll(e)} />\n                            <Keyboard\n                                keyboardRef={r => (this.keyboard = r)}\n                                inputName={this.state.inputName}\n                                layoutName={this.state.layoutName}\n                                onChangeAll={inputObj => this.onChangeAll(inputObj)}\n                                onKeyPress={button => this.onKeyPress(button)}\n                                theme={\"hg-theme-default hg-layout-default myTheme\"}\n                                layout={{\n                                    'default': [\n                                        '` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\n                                        'q w e r t y u i o p [ ] \\\\',\n                                        'a s d f g h j k l ; \\' {enter}',\n                                        'z x c v b n m , . / {shift}',\n                                        '.com @ {space}'\n                                    ],\n                                    'shift': [\n                                        '~ ! @ # $ % ^ & * ( ) _ + {bksp}',\n                                        'Q W E R T Y U I O P { } |',\n                                        'A S D F G H J K L : \" {enter}',\n                                        'Z X C V B N M < > ? {shift}',\n                                        '{space}'\n                                    ],\n                                    mobile: [\"1 2 3\", \"4 5 6\", \"7 8 9\", \"{bksp} 0 {enter}\"],\n                                }}\n                                display={{\n                                    '{bksp}': 'Bksp',\n                                    '{enter}': 'Enter',\n                                    '{shift}': 'Shift',\n                                    '{space}': ' '\n                                }}\n                            />\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(Register);\n","\nconst axios = require('axios');\nconst uriBase = 'https://spa-fr.cognitiveservices.azure.com/face/v1.0';\nconst subscriptionKey = '5463be0170e742d98bf5b3606727fbdb';\n\nexport const faceAPITrainStatus = () => {\n    const fullUrl = `${uriBase}/persongroups/1/training`\n    const options = {\n        method: 'GET',\n        url: fullUrl,\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        console.log(response.data);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}\n\nexport const faceAPITrain = () => {\n    const fullUrl = `${uriBase}/persongroups/1/train`\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        console.log(response.data);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}\n\nexport const faceAPIAddFace = (personId, imageUrl) => {\n    const fullUrl = `${uriBase}/persongroups/1/persons/${personId}/persistedFaces`\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        data: { url: imageUrl },\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        // response.data;\n        faceAPITrain();\n        console.log(response.data);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}\n\nexport const faceAPIAddPerson = (imageUrl, userid) => {\n    const fullUrl = `${uriBase}/persongroups/1/persons`\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        data: { name: userid },\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        faceAPIAddFace(response.data.personId, imageUrl)\n        console.log(response.data.personId);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}\n\nexport const faceAPIIdentify = (faceIdData) => {\n    let faceIds = [];\n    for (let i = 0; i < faceIdData.length; i++) {\n        faceIds.push(faceIdData[i].faceId)\n    }\n    const fullUrl = `${uriBase}/identify`\n\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        data: {\n            personGroupId: \"1\",\n            faceIds: faceIds,\n            maxNumOfCandidatesReturned: 1,\n        },\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n    axios(options).then(response => {\n        console.log(response);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n\n}\n\nexport const faceAPIDetect = (imageUrl) => {\n    const fullUrl = `${uriBase}/detect?returnFaceId=true`\n    const options = {\n        method: 'POST',\n        url: fullUrl,\n        data: { url: imageUrl },\n        headers: {\n            'Content-Type': 'application/json',\n            'Ocp-Apim-Subscription-Key': subscriptionKey\n        }\n    };\n\n    axios(options).then(response => {\n        console.log(response.data);\n        faceAPIIdentify(response.data);\n    }).catch(error => {\n        console.log('Error: ', error);\n    });\n}","import React from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport * as faceapi from 'face-api.js';\nimport Webcam from 'react-webcam';\nimport { fetchAPI, getClient, removeClient } from '../../utils';\nimport { faceAPIAddPerson } from './faceAPI';\nimport Swal from 'sweetalert2';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\n\nconst STORAGE_URL = 'https://projectspa.blob.core.windows.net/spacontainer';\nconst MODEL_URL = '/models'\n\nlet faceBox = { detected: false, topLeftX: 0, topLeftY: 0, bottomRightX: 0, bottomRightY: 0 };\n\nconst videoConstraints = {\n    width: 800,\n    height: 600,\n    facingMode: 'user',\n};\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    submit: {\n        margin: theme.spacing(5),\n    },\n});\n\nclass Snapshot extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            takingPicture: true,\n            timerOn: false,\n            timerTime: 3000,\n            imageUrl: '',\n        }\n        this.webcam = React.createRef();\n        this.canvas = React.createRef();\n        this.canvasPicWebCam = React.createRef();\n    }\n\n    startTimer = () => {\n        console.log(\"Start timer\")\n        this.setState({\n            timerOn: true,\n            timerTime: this.state.timerTime,\n        });\n        this.timer = setInterval(() => {\n            console.log(\"in interval\")\n            const newTime = this.state.timerTime - 1000;\n            if (newTime >= 0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({ timerOn: false });\n            }\n        }, 1000);\n    };\n\n    stopTimer = () => {\n        console.log(\"stopTimer\")\n        clearInterval(this.timer);\n        this.setState({ timerOn: false, timerTime: 3000 });\n    };\n\n    componentDidMount() {\n        faceapi.loadFaceDetectionModel(MODEL_URL)\n            .then(() => faceapi.loadTinyFaceDetectorModel(MODEL_URL)\n                .then(() => {\n                    setTimeout(() => this.startDetection(), 1000);\n                })).catch(error => {\n                    Swal.fire({\n                        type: 'error',\n                        title: \"Opps... Something Wrong...\",\n                        text: error\n                    })\n                });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    getTL(v) {\n        v -= 70;\n        return ((v <= 0) ? 0 : v);\n    }\n    getBR(v, x) {\n        v += 70;\n        if (x) { return ((v > 640) ? 640 : v) }\n        else { return ((v > 480) ? 480 : v) }\n    }\n\n\n\n    startDetection = () => {\n        try {\n            const { timerTime, timerOn } = this.state;\n            const canvas = document.getElementById('videoOverlay')\n            let video = this.webcam.current;\n            if (video && canvas && video.getCanvas()) {\n                video = video.getCanvas();\n                let inputSize = 512\n                let scoreThreshold = 0.5\n                faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions({ inputSize, scoreThreshold })).then((result) => {\n                    if (result) {\n                        if (!timerOn) {\n                            this.setState({ timerTime: 3000 });\n                            this.startTimer();\n                        }\n                        console.log(timerTime)\n                        console.log(\"Result:  \" + result);\n                        canvas.width = video.width;\n                        canvas.height = video.height;\n                        canvas.style.display = \"\";\n                        const dims = faceapi.matchDimensions(canvas, video, true)\n                        faceapi.draw.drawDetections(canvas, faceapi.resizeResults(result, dims))\n                        if (timerTime <= 0 && timerOn) {\n                            if (result.box) {\n                                let box = result.box;\n                                faceBox.detected = true;\n                                faceBox.topLeftX = this.getTL(box.x);\n                                faceBox.topLeftY = this.getTL(box.y);\n                                faceBox.bottomRightX = this.getBR((box.x + box.width), true);\n                                faceBox.bottomRightY = this.getBR((box.y + box.height), false);\n                            }\n                            canvas.getContext('2d').drawImage(video, 0, 0);\n                            this.capture(canvas.toDataURL('image/jpeg', 0.5))\n                            return;\n                        }\n                        return setTimeout(() => this.startDetection(), 300);\n                    } else {\n                        console.log(\"not detected\")\n                        this.stopTimer();\n                        canvas.style.display = \"none\"\n                        return setTimeout(() => this.startDetection(), 300);\n                    }\n                });\n            }\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    capture = async (imageUrl) => {\n        try {\n\n            console.log(\"capture\")\n            this.setState({ takingPicture: false })\n            const taking = document.getElementById('photoTaking')\n            const showing = document.getElementById('photoShowing')\n            taking.style.display = 'none';\n            showing.style.display = 'block';\n            var photoCanvas = document.getElementById('showPhoto')\n            var photoctx = photoCanvas.getContext(\"2d\");\n            var img = new Image();\n            img.onload = async () => {\n                photoctx.drawImage(img, 0, 0, photoCanvas.width, photoCanvas.height);\n            };\n            img.src = imageUrl;\n            this.setState({ imageUrl: imageUrl })\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    retakePhoto() {\n        console.log(\"retake\")\n        this.setState({ takingPicture: true });\n        const taking = document.getElementById('photoTaking')\n        const showing = document.getElementById('photoShowing')\n        taking.style.display = 'block';\n        showing.style.display = 'none'\n        this.startDetection();\n    }\n\n    createUser() {\n        const userid = getClient();\n        let data = {\n            imagebase64: this.state.imageUrl,\n            id: userid\n        };\n        fetchAPI('POST', 'kioskMgt/savephoto', data).then(respObj => {\n            if (respObj && respObj.ok) {\n                faceAPIAddPerson(`${STORAGE_URL}/${data.id}.jpg`, data.id);\n                removeClient();\n                this.props.history.push('/start')\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        let displayText, button;\n        if (this.state.timerOn) {\n            displayText = `Keep still photo will be taken in ${this.state.timerTime / 1000}`\n        } else {\n            displayText = `Face not detected, adjust your position...`\n        }\n        if (this.state.takingPicture) {\n            button = (\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                    style={{ display: 'block', fontSize: 40 }} onClick={() => {\n                        this.setState({ takingPicture: false })\n                        // this.capture();\n                        this.props.history.push('/snapshotmanual');\n                    }}\n                >\n                    Manual Mode\n                </Button>\n            );\n        } else {\n            button = [\n                <Button key=\"btnRetake\" variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                    style={{ display: 'block', fontSize: 40 }} onClick={() => this.retakePhoto()}\n                >\n                    Retake A Snapshot\n                </Button>,\n                <Button key=\"btnDone\" variant=\"contained\" color=\"primary\" fullWidth\n                    style={{ display: 'block', fontSize: 40 }} onClick={() => this.createUser()}\n                >\n                    Done\n                </Button>\n            ]\n        }\n\n        return (\n            <KioskLayout {...this.props} imageWidth={320} imagePadding={40} skip={true}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <div id=\"photoTaking\" >\n                        <div style={{ height: 480, width: 600, alignItems: 'center' }}>\n                            <Webcam\n                                style={{ position: 'absolute', zIndex: 1 }}\n                                audio={false}\n                                height={480}\n                                ref={this.webcam}\n                                screenshotFormat=\"image/jpeg\"\n                                width={600}\n                                videoConstraints={videoConstraints}\n                            />\n                            <canvas id='videoOverlay' ref={this.canvas} style={{ height: 480, width: 600, position: 'relative', zIndex: 2 }} />\n                        </div>\n                        <div>\n                            <Typography style={{ fontSize: 30 }} align=\"center\" color=\"primary\" >\n                                {displayText}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div id=\"photoShowing\" style={{ display: \"none\" }}>\n                        <canvas id='showPhoto' style={{ height: 480, width: 600 }} />\n                    </div>\n                    {button}\n                </div>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(Snapshot);\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Webcam from 'react-webcam';\nimport Swal from 'sweetalert2';\nimport { faceAPIAddPerson } from './faceAPI';\nimport { fetchAPI, getClient, removeClient } from '../../utils';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\n\nconst STORAGE_URL = 'https://projectspa.blob.core.windows.net/spacontainer';\n\nconst videoConstraints = {\n    width: 800,\n    height: 600,\n    facingMode: 'user',\n};\n\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    submit: {\n        margin: theme.spacing(5),\n    },\n});\n\nclass FacialLogin extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: '',\n            takingPicture: true,\n        }\n        this.webcam = React.createRef();\n        this.canvasPicWebCam = React.createRef();\n    }\n\n    capture = () => {\n        this.setState({ takingPicture: false })\n        const imageUrl = this.webcam.current.getScreenshot();\n        const ctx = this.canvasPicWebCam.current.getContext(\"2d\");\n        var image = new Image();\n\n        image.onload = async () => {\n            ctx.drawImage(image, 0, 0);\n        };\n        image.src = imageUrl;\n        this.setState({ imageUrl: imageUrl })\n    };\n\n    createUser() {\n        const userid = getClient();\n        let data = {\n            imagebase64: this.state.imageUrl,\n            id: userid\n        };\n        fetchAPI('POST', 'kioskMgt/savephoto', data).then(respObj => {\n            if (respObj && respObj.ok) {\n                faceAPIAddPerson(`${STORAGE_URL}/${data.id}.jpg`, data.id);\n                removeClient();\n                this.props.history.push('/start')\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: \"Opps... Something Wrong...\",\n                    text: respObj.error\n                })\n            }\n        }).catch(error => {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        let showCanvas, showWebcam, button;\n        if (this.state.takingPicture) {\n            showWebcam = { display: 'block' }\n            showCanvas = { display: 'none' }\n        } else {\n            showWebcam = { display: 'none' }\n            showCanvas = { display: 'block' }\n        }\n\n        if (this.state.takingPicture) {\n            button = [\n                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                    style={{ display: 'block', fontSize: 40 }} onClick={() => {\n                        this.setState({ takingPicture: false })\n                        // this.capture();\n                        this.props.history.push('/snapshot');\n                    }}\n                >\n                    Auto Mode\n                </Button>,\n                <Button variant=\"contained\" color=\"primary\" fullWidth\n                    style={{ display: 'block', fontSize: 40 }} onClick={this.capture}\n                >\n                    Take A Snapshot\n            </Button>\n            ]\n\n        } else {\n            button = [\n                <Button key=\"btnRetake\" variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                    style={{ display: 'block', fontSize: 40, paddingTop: 10 }} onClick={() => this.setState({ takingPicture: true })}\n                >\n                    Retake A Snapshot\n                </Button>,\n                <Button key=\"btnDone\" variant=\"contained\" color=\"primary\" fullWidth\n                    style={{ display: 'block', fontSize: 40, paddingTop: 10 }} onClick={() => this.createUser()}\n                >\n                    Done\n                </Button>\n            ]\n        }\n        return (\n            <KioskLayout {...this.props} imageWidth={320} imagePadding={40} skip={true}>\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <Webcam\n                        style={showWebcam}\n                        audio={false}\n                        height={480}\n                        ref={this.webcam}\n                        screenshotFormat=\"image/jpg\"\n                        width={600}\n                        videoConstraints={videoConstraints}\n                    />\n                    <canvas ref={this.canvasPicWebCam} width={600} height={480} style={showCanvas} />\n                    {button}\n                </div>\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(FacialLogin);\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Button, Typography, Dialog, DialogContent, Slide, TextField,\n} from '@material-ui/core';\nimport Swal from 'sweetalert2';\nimport Keyboard from \"react-simple-keyboard\";\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport SelectService from '../../Component/Kiosk/Checkout/Checkout'\nimport { fetchAPI, setClient, setToken, getClient } from '../../utils';\n\nconst mainFontSize = 35;\n\nconst styles = theme => ({\n    root: {\n        height: 180,\n    },\n    login: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    cancel: {\n        margin: theme.spacing(3),\n        minWidth: 220,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(3),\n        minWidth: 500,\n    },\n    bold: {\n        margin: theme.spacing(3),\n        fontWeight: 500,\n    },\n});\n\nclass Appointment extends React.Component {\n    state = {\n        input: {},\n    };\n\n    componentDidMount() {\n        try {\n            let user = getClient();\n            this.setState({ displayName: user.displayName })\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    onChangeInput = event => {\n        let inputVal = event.target.value;\n\n        let updatedInputObj = {\n            ...this.state.input,\n            [this.state.inputName]: inputVal\n        };\n\n        this.setState(\n            {\n                input: updatedInputObj\n            },\n            () => {\n                this.keyboard.setInput(inputVal);\n            }\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { input } = this.state;\n\n        return (\n            <KioskLayout {...this.props} imageWidth={200} imagePadding={10} displayName={this.state.displayName}>\n\n                <div style={{ flexDirection: 'column', alignItems: 'center', display: 'flex' }} >\n                    <SelectService {...this.props} />\n                </div>\n\n            </KioskLayout>\n        );\n    }\n}\n\nexport default withStyles(styles)(Appointment);\n","import React from 'react';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/styles';\nimport {\n    Typography, Button, Container, Dialog, DialogContent, Slide, TextField\n} from '@material-ui/core';\nimport KioskLayout from '../../Component/Kiosk/KioskLayout/KioskLayout';\nimport { fetchAPI, getClient } from '../../utils';\nimport Swal from 'sweetalert2';\nimport Keyboard from \"react-simple-keyboard\";\nimport \"react-simple-keyboard/build/css/index.css\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { green } from '@material-ui/core/colors';\nimport {\n    DatePicker,\n    MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nconst mainFontSize = 35;\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst styles = theme => ({\n    container: {\n        marginTop: theme.spacing(5)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cancel: {\n        margin: theme.spacing(0, 0, 0),\n    },\n    select: {\n        margin: theme.spacing(2, 0, 0),\n    },\n});\n\nconst genderOptions = [\n    { value: \"M\", label: 'M' },\n    { value: \"F\", label: 'F' },\n];\n\nclass ClientDetails extends React.Component {\n    state = {\n        layoutName: \"default\",\n        inputName: null,\n        input: {},\n        submittedData: \"\",\n        gender: genderOptions[0],\n        keyboardOpen: false,\n        selectedDate: null,\n        edit: true\n    };\n\n    componentDidMount() {\n        try {\n            let client = getClient();\n            this.setState({\n                input: client,\n                displayName: client.displayName,\n                gender: { value: client.gender, label: client.gender },\n                selectedDate: client.birthday\n            })\n        } catch (error) {\n            Swal.fire({\n                type: 'error',\n                title: \"Opps... Something Wrong...\",\n                text: error\n            })\n        }\n    }\n\n    handleGenderSelection = (gender) => {\n        this.setState({ gender });\n    }\n\n    onChangeInput = event => {\n        let inputVal = event.target.value;\n\n        let updatedInputObj = {\n            ...this.state.input,\n            [this.state.inputName]: inputVal\n        }\n\n        this.setState(\n            {\n                input: updatedInputObj\n            },\n            () => {\n                this.keyboard.setInput(inputVal);\n            }\n        );\n    };\n\n    onChangeAll = inputObj => {\n        let input = { ...this.state.input, ...inputObj }\n        this.setState({\n            input: input\n        });\n    };\n\n    onKeyPress = button => {\n        if (button === \"{enter}\") {\n            this.setState({\n                keyboardOpen: false\n            });\n        } else if (button === \"{clear}\") {\n            this.clearScreen();\n        } else if (button === \"{shift}\") {\n            this.handleShift();\n        }\n    };\n\n    handleShift = () => {\n        let layoutName = this.state.layoutName;\n\n        this.setState({\n            layoutName: layoutName === \"default\" ? \"shift\" : \"default\"\n        });\n    };\n\n    clearScreen = () => {\n        let input = { ...this.state.input };\n        let inputName = this.state.inputName;\n        input[inputName] = \"\";\n\n        this.setState({ input }, () => {\n            this.keyboard.clearInput(inputName);\n        });\n    };\n\n    setActiveInput = inputName => {\n        if (inputName === 'mobile') {\n            this.setState({ layoutName: \"mobile\" })\n        } else {\n            this.setState({ layoutName: \"default\" })\n        }\n        var value = this.refs.displayValue;\n        // Disable password for register\n        // if (inputName === 'password' || inputName === 'confirmPassoword') {\n        //     value.children[0].children[0].type = 'password';\n        // } else {\n        value.children[0].children[0].type = 'text';\n        // }\n        this.setState(\n            {\n                inputName: inputName,\n                keyboardOpen: true\n            },\n        );\n    };\n\n    handleKeyboardClose = () => {\n        this.setState({ keyboardOpen: false });\n    }\n\n    update = async () => {\n        const { input, gender } = this.state;\n        input.gender = gender.value;\n\n        if (!input.mobile) {\n            Swal.fire({\n                type: 'error', text: 'Please enter mobile number',\n                title: \"Error\"\n            })\n            return;\n        } else if (input.mobile.length < 8) {\n            Swal.fire({\n                type: 'error', text: 'Mobile must be 8 digit',\n                title: \"Error\"\n            })\n            return;\n        }\n        // Disable password for register\n        // else if (!input.password) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Please enter a password',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        // else if (!input.confirmPassoword) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Please enter a password',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        // else if (input.confirmPassoword !== input.password) {\n        //     Swal.fire({\n        //         type: 'error', text: 'Password does not match',\n        //         title: \"Error\"\n        //     })\n        //     return;\n        // }\n        else if (!input.displayName) {\n            Swal.fire({\n                type: 'error', text: 'Please enter display name',\n                title: \"Error\"\n            })\n            return;\n        }\n        else if (!input.nric) {\n            Swal.fire({\n                type: 'error', text: 'Please enter NRIC',\n                title: \"Error\"\n            })\n            return;\n        }\n        try {\n            fetchAPI('PATCH', `kioskMgt/clients/${this.state.input._id}`, this.state.input).then(respObj => {\n                if (respObj && respObj.ok) {\n                    Swal.fire({\n                        type: 'success',\n                        title: \"Update Success!\",\n                        animation: false,\n                        customClass: {\n                            popup: 'animated tada'\n                        },\n                        preConfirm: () => {\n                            return this.props.history.push('/start')\n                        },\n                    })\n                } else {\n                    Swal.fire({\n                        type: 'error', text: 'Please try again.',\n                        title: respObj.error\n                    })\n                }\n            });\n        } catch (err) {\n            Swal.fire({\n                type: 'error', text: 'Please try again.',\n                title: err.message\n            })\n        }\n    };\n\n    handleDateChange = (value) => {\n        this.setState({ selectedDate: value })\n    }\n\n    handleCancelClick = () => {\n        let client = getClient();\n\n        this.setState({\n            edit: true,\n            input: client\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { input, edit } = this.state;\n        return (\n            <KioskLayout {...this.props} imageWidth={130} imagePadding={10} displayName={this.state.displayName}>\n                <Container component=\"main\" maxWidth=\"md\" className={classes.container} >\n\n                    <form>\n                        <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"mobile\" label=\"Mobile\" type=\"number\"\n                            onClick={edit ? null : () => this.setActiveInput(\"mobile\")}\n                            value={input[\"mobile\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        />\n\n                        {// Disable password for register\n                        /* <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"password\" label=\"Password\" type=\"password\"\n                            onClick={edit ? null : () => this.setActiveInput(\"password\")}\n                            value={input[\"password\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        /> */}\n                        {/* <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"confirmPassoword\" label=\"Confirm Password\" type=\"password\"\n                            onClick={edit ? null : () => this.setActiveInput(\"confirmPassoword\")}\n                            value={input[\"confirmPassoword\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        /> */}\n                        <TextField style={{ backgroundColor: \"#f2f1ed\", fontSize: \"30px\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"displayName\" label=\"Display Name\"\n                            onClick={edit ? null : () => this.setActiveInput(\"displayName\")}\n                            value={input[\"displayName\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        />\n                        <TextField style={{ backgroundColor: \"#f2f1ed\", fontSize: \"30px\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"email\" label=\"Email\"\n                            onClick={edit ? null : () => this.setActiveInput(\"email\")}\n                            value={input[\"email\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        />\n                        <TextField style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                            InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ style: { fontSize: mainFontSize } }}\n                            variant=\"outlined\" margin=\"normal\" fullWidth\n                            name=\"nric\" label=\"NRIC\"\n                            onClick={edit ? null : () => this.setActiveInput(\"nric\")}\n                            value={input[\"nric\"] || \"\"}\n                            onChange={e => this.onChangeInput(e)}\n                            disabled={edit}\n                        />\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <DatePicker\n                                autoOk\n                                disableFuture\n                                disableToolbar\n                                openTo=\"year\"\n                                format=\"dd/MM/yyyy\"\n                                label=\"Date of birth\"\n                                views={[\"year\", \"month\", \"date\"]}\n                                style={{ backgroundColor: \"#f2f1ed\" }} autoComplete='off'\n                                InputProps={{ style: { fontSize: mainFontSize } }} InputLabelProps={{ shrink: true, style: { fontSize: mainFontSize } }}\n                                fullWidth\n                                margin=\"normal\"\n                                inputVariant=\"outlined\"\n                                variant=\"outlined\"\n                                value={this.state.selectedDate} onChange={this.handleDateChange}\n                                disabled={edit} />\n                        </MuiPickersUtilsProvider>\n                        <Typography variant='h5' gutterBottom>\n                            Gender\n                                </Typography>\n                        <Select className={classes.select}\n                            onChange={this.handleGenderSelection}\n                            options={genderOptions}\n                            value={this.state.gender}\n                            styles={{\n                                control: base => ({\n                                    ...base,\n                                    fontSize: mainFontSize,\n                                }),\n                                menu: base => ({\n                                    ...base,\n                                    fontSize: mainFontSize,\n                                })\n                            }}\n                            isDisabled={edit}\n                        />\n                        <div style={{ textAlign: \"center\" }}>\n                            <Typography style={{ fontSize: 50, marginTop: 20 }} color=\"primary\">\n                                Credit: {this.state.input.credit}\n                            </Typography>\n                        </div>\n                        {this.state.edit ?\n                            <React.Fragment>\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    style={{ fontSize: mainFontSize }} onClick={() => this.setState({ edit: false })}\n                                >\n                                    Edit\n                            </Button>\n                                <ColorButton variant=\"contained\" fullWidth className={classes.cancel}\n                                    onClick={() => { this.props.history.push('/selectservice') }} style={{ fontSize: mainFontSize }}\n                                >\n                                    Check In\n                                </ColorButton>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.submit}\n                                    style={{ fontSize: mainFontSize }} onClick={this.update}\n                                >\n                                    Update\n                            </Button>\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth className={classes.cancel}\n                                    style={{ fontSize: mainFontSize }} onClick={this.handleCancelClick}\n                                >\n                                    Cancel\n                            </Button>\n                            </React.Fragment>\n                        }\n                    </form>\n                </Container>\n                <Dialog\n                    fullWidth\n                    maxWidth=\"xl\"\n                    style={{ fontSize: mainFontSize }}\n                    open={this.state.keyboardOpen}\n                    onEnter={() => {\n                        //clear the display value when open\n                        var value = this.refs.displayValue;\n                        value.children[0].children[0].value = input[this.state.inputName];\n                    }}\n                    onClose={this.handleKeyboardClose}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                >\n                    <DialogContent>\n                        <div>\n                            <TextField InputProps={{ style: { fontSize: 30 } }} fullWidth\n                                ref=\"displayValue\" value={input[this.state.inputName]} placeholder={\"Tap to start\"} onChange={e => this.onChangeAll(e)} />\n                            <Keyboard\n                                keyboardRef={r => (this.keyboard = r)}\n                                inputName={this.state.inputName}\n                                layoutName={this.state.layoutName}\n                                onChangeAll={inputObj => this.onChangeAll(inputObj)}\n                                onKeyPress={button => this.onKeyPress(button)}\n                                theme={\"hg-theme-default hg-layout-default myTheme\"}\n                                layout={{\n                                    'default': [\n                                        '` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\n                                        'q w e r t y u i o p [ ] \\\\',\n                                        'a s d f g h j k l ; \\' {enter}',\n                                        'z x c v b n m , . / {shift}',\n                                        '.com @ {space}'\n                                    ],\n                                    'shift': [\n                                        '~ ! @ # $ % ^ & * ( ) _ + {bksp}',\n                                        'Q W E R T Y U I O P { } |',\n                                        'A S D F G H J K L : \" {enter}',\n                                        'Z X C V B N M < > ? {shift}',\n                                        '{space}'\n                                    ],\n                                    mobile: [\"1 2 3\", \"4 5 6\", \"7 8 9\", \"{bksp} 0 {enter}\"],\n                                }}\n                                display={{\n                                    '{bksp}': 'Bksp',\n                                    '{enter}': 'Enter',\n                                    '{shift}': 'Shift',\n                                    '{space}': ' '\n                                }}\n                            />\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            </KioskLayout>\n        );\n    }\n}\n\nconst ColorButton = withStyles(theme => ({\n    root: {\n        color: theme.palette.getContrastText(green[600]),\n        backgroundColor: green[600],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n        marginTop: 30\n    },\n}))(Button);\n\nexport default withStyles(styles)(ClientDetails);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport 'typeface-roboto';\n\nimport { getUser } from './utils';\nimport Login from './Container/login';\nimport ErrorPage from './Container/error';\nimport Dashboard from './Container/dashboard';\n\nimport Appointment from './Container/Appointment/appointment';\n\nimport Client from './Container/Client/client';\nimport NewClient from './Container/Client/newClient';\nimport ClientDetail from './Container/Client/clientDetail';\nimport UpdateClient from './Container/Client/updateClient';\n\nimport Staff from './Container/Staff/staff';\nimport NewStaff from './Container/Staff/newStaff';\nimport StaffDetail from './Container/Staff/staffDetail';\n\nimport Service from './Container/Service/service';\nimport NewService from './Container/Service/newService';\nimport ServiceDetail from './Container/Service/serviceDetail';\nimport NewCategory from './Container/Service/newCategory'\n\nimport Invoice from './Container/Invoice/invoices'\nimport InvoiceDetail from './Container/Invoice/invoiceDetail'\n\nimport Message from './Container/message';\nimport Report from './Container/report';\nimport Setting from './Container/setting';\n\n//Kiosk\nimport Start from './Container/Kiosk/start';\nimport FacialLogin from './Container/Kiosk/facialLogin';\nimport MobileLogin from './Container/Kiosk/mobileLogin';\nimport Register from './Container/Kiosk/register';\nimport Snapshot from './Container/Kiosk/snapshot';\nimport SnapshotManual from './Container/Kiosk/snapshotManual';\nimport SelectService from './Container/Kiosk/selectservice';\nimport ClientDetails from './Container/Kiosk/clientDetails';\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                props.user = getUser();\n                if (props.user) { return <Component {...props} /> }\n                else { return <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} /> }\n            }}\n        />\n    );\n}\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#1976d2',\n        },\n        secondary: {\n            main: '#d32f2f',\n        },\n    }\n});\nfunction Routers() {\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Router basename={\"/spa\"}>\n                <Switch>\n                    <Route exact path=\"/start\" component={Start} />\n                    <Route exact path=\"/faciallogin\" component={FacialLogin} />\n                    <Route exact path=\"/mobilelogin\" component={MobileLogin} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/snapshot\" component={Snapshot} />\n                    <Route exact path=\"/snapshotmanual\" component={SnapshotManual} />\n                    <Route exact path=\"/clientdetails\" component={ClientDetails} />\n                    <Route exact path=\"/selectservice\" component={SelectService} />\n\n\n                    <Route path=\"/login\" component={Login} />\n                    <Route exact path=\"/\" component={Login} />\n                    <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n\n                    <PrivateRoute exact path=\"/appointment\" component={Appointment} />\n\n                    <PrivateRoute exact path=\"/message\" component={Message} />\n                    <PrivateRoute exact path=\"/report\" component={Report} />\n\n                    <PrivateRoute exact path=\"/client\" component={Client} />\n                    <PrivateRoute exact path=\"/client/new\" component={NewClient} />\n                    <PrivateRoute exact path=\"/client/detail\" component={ClientDetail} />\n                    <PrivateRoute exact path=\"/client/update\" component={UpdateClient} />\n\n                    <PrivateRoute exact path=\"/staff\" component={Staff} />\n                    <PrivateRoute exact path=\"/staff/new\" component={NewStaff} />\n                    <PrivateRoute exact path=\"/staff/detail\" component={StaffDetail} />\n\n                    <PrivateRoute exact path=\"/service\" component={Service} />\n                    <PrivateRoute exact path=\"/service/new\" component={NewService} />\n                    <PrivateRoute exact path=\"/service/detail\" component={ServiceDetail} />\n                    <PrivateRoute exact path=\"/service/newcategory\" component={NewCategory} />\n\n                    <PrivateRoute exact path=\"/invoice\" component={Invoice} />\n                    <PrivateRoute exact path=\"/invoice/detail\" component={InvoiceDetail} />\n\n                    <PrivateRoute exact path=\"/setting\" component={Setting} />\n\n                    <Route component={ErrorPage} />\n                </Switch>\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nReactDOM.render(<Routers />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.caf36d34.png\";","module.exports = __webpack_public_path__ + \"static/media/kiosk_bg.1a6fdb78.png\";","module.exports = __webpack_public_path__ + \"static/media/login.fc0b7b37.png\";","module.exports = __webpack_public_path__ + \"static/media/register.e228c75f.png\";"],"sourceRoot":""}